{"filename":"src/lib/bignum_bigint/bignum_bigint.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"include Bigint","counters":[]},{"line":"","counters":[]},{"line":"let of_bool (b : bool) : t = if b then one else zero","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":39,"col_end":39,"count":0},{"col_start":48,"col_end":48,"count":0}]},{"line":"","counters":[]},{"line":"let of_bit_fold_lsb ({ fold } : bool Fold_lib.Fold.t) : t =","counters":[]},{"line":"  fold ~init:(0, zero) ~f:(fun (i, acc) b ->","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"      (Int.(i + 1), bit_or (shift_left (of_bool b) i) acc) )","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":25,"col_end":25,"count":0},{"col_start":37,"col_end":37,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"  |> snd","counters":[]},{"line":"","counters":[]},{"line":"let of_bits_lsb : bool list -> t =","counters":[]},{"line":"  List.foldi ~init:zero ~f:(fun i acc b ->","counters":[]},{"line":"      bit_or (shift_left (of_bool b) i) acc )","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":23,"col_end":23,"count":0},{"col_start":32,"col_end":32,"count":0},{"col_start":44,"col_end":44,"count":2}]}]}