{"filename":"src/lib/with_hash/with_hash.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  [@@@no_toplevel_latest_type]","counters":[]},{"line":"","counters":[]},{"line":"  module V1 = struct","counters":[]},{"line":"    type ('a, 'h) t = ('a, 'h) Mina_wire_types.With_hash.V1.t =","counters":[{"col_start":4,"col_end":4,"count":7},{"col_start":18,"col_end":18,"count":5}]},{"line":"      { data : 'a; hash : 'h }","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":11,"col_end":11,"count":0},{"col_start":15,"col_end":15,"count":0},{"col_start":16,"col_end":16,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":27,"col_end":27,"count":0}]},{"line":"    [@@deriving annot, sexp, equal, compare, hash, yojson, fields]","counters":[{"col_start":65,"col_end":65,"count":15}]},{"line":"","counters":[]},{"line":"    let to_latest data_latest hash_latest { data; hash } =","counters":[]},{"line":"      { data = data_latest data; hash = hash_latest hash }","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":25,"col_end":25,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"  end","counters":[]},{"line":"end]","counters":[]},{"line":"","counters":[]},{"line":"type ('a, 'h) t = ('a, 'h) Stable.Latest.t = { data : 'a; hash : 'h }","counters":[{"col_start":0,"col_end":0,"count":0},{"col_start":47,"col_end":47,"count":0},{"col_start":50,"col_end":50,"count":0},{"col_start":54,"col_end":54,"count":0},{"col_start":55,"col_end":55,"count":0},{"col_start":58,"col_end":58,"count":0},{"col_start":61,"col_end":61,"count":0},{"col_start":66,"col_end":66,"count":0}]},{"line":"[@@deriving annot, sexp, equal, compare, hash, yojson]","counters":[]},{"line":"","counters":[]},{"line":"let data { data; _ } = data","counters":[{"col_start":23,"col_end":23,"count":0}]},{"line":"","counters":[]},{"line":"let hash { hash; _ } = hash","counters":[{"col_start":23,"col_end":23,"count":0}]},{"line":"","counters":[]},{"line":"let map t ~f = { t with data = f t.data }","counters":[{"col_start":15,"col_end":15,"count":0},{"col_start":31,"col_end":31,"count":0}]},{"line":"","counters":[]},{"line":"let map_hash t ~f = { t with hash = f t.hash }","counters":[{"col_start":20,"col_end":20,"count":0},{"col_start":36,"col_end":36,"count":0}]},{"line":"","counters":[]},{"line":"let of_data data ~hash_data = { data; hash = hash_data data }","counters":[{"col_start":30,"col_end":30,"count":2},{"col_start":53,"col_end":53,"count":2},{"col_start":60,"col_end":60,"count":2}]}]}