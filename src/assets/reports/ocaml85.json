{"filename":"src/lib/mina_base/epoch_seed.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"include Data_hash.Make_full_size (struct","counters":[]},{"line":"  let version_byte = Base58_check.Version_bytes.epoch_seed","counters":[]},{"line":"","counters":[]},{"line":"  let description = \"Epoch Seed\"","counters":[]},{"line":"end)","counters":[]},{"line":"","counters":[]},{"line":"(* Data hash versioned boilerplate below *)","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  [@@@no_toplevel_latest_type]","counters":[]},{"line":"","counters":[]},{"line":"  [@@@with_all_version_tags]","counters":[]},{"line":"","counters":[]},{"line":"  module V1 = struct","counters":[]},{"line":"    module T = struct","counters":[{"col_start":4,"col_end":4,"count":2}]},{"line":"      type t = (Snark_params.Tick.Field.t[@version_asserted])","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":11,"col_end":11,"count":1}]},{"line":"      [@@deriving sexp, compare, hash]","counters":[]},{"line":"    end","counters":[{"col_start":6,"col_end":6,"count":5}]},{"line":"","counters":[]},{"line":"    include T","counters":[]},{"line":"","counters":[]},{"line":"    let to_latest = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"    [%%define_from_scope to_yojson, of_yojson]","counters":[]},{"line":"","counters":[]},{"line":"    include Comparable.Make (T)","counters":[]},{"line":"    include Hashable.Make_binable (T)","counters":[]},{"line":"  end","counters":[]},{"line":"end]","counters":[{"col_start":3,"col_end":3,"count":1}]}]}