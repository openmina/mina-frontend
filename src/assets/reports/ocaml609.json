{"filename":"src/lib/currency/unix/graphql_scalars.ml","lines":[{"line":"open Graphql_basic_scalars.Utils","counters":[]},{"line":"open Graphql_basic_scalars.Testing","counters":[]},{"line":"","counters":[]},{"line":"module Make (Schema : Schema) = struct","counters":[]},{"line":"  module Fee =","counters":[]},{"line":"    Make_scalar_using_to_string","counters":[]},{"line":"      (Currency.Fee)","counters":[]},{"line":"      (struct","counters":[]},{"line":"        let name = \"Fee\"","counters":[]},{"line":"","counters":[]},{"line":"        let doc = \"fee\"","counters":[]},{"line":"      end)","counters":[]},{"line":"      (Schema)","counters":[]},{"line":"","counters":[]},{"line":"  module Amount =","counters":[]},{"line":"    Make_scalar_using_to_string","counters":[]},{"line":"      (Currency.Amount)","counters":[]},{"line":"      (struct","counters":[]},{"line":"        let name = \"Amount\"","counters":[]},{"line":"","counters":[]},{"line":"        let doc = \"amount\"","counters":[]},{"line":"      end)","counters":[]},{"line":"      (Schema)","counters":[]},{"line":"","counters":[]},{"line":"  module Balance =","counters":[]},{"line":"    Make_scalar_using_to_string","counters":[]},{"line":"      (Currency.Balance)","counters":[]},{"line":"      (struct","counters":[]},{"line":"        let name = \"Balance\"","counters":[]},{"line":"","counters":[]},{"line":"        let doc = \"balance\"","counters":[]},{"line":"      end)","counters":[]},{"line":"      (Schema)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"include Make (Schema)","counters":[]},{"line":"","counters":[]},{"line":"let%test_module \"Roundtrip tests\" =","counters":[]},{"line":"  ( module struct","counters":[]},{"line":"    include Make (Test_schema)","counters":[]},{"line":"","counters":[]},{"line":"    let%test_module \"Fee\" = (module Make_test (Fee) (Currency.Fee))","counters":[]},{"line":"","counters":[]},{"line":"    let%test_module \"Amount\" = (module Make_test (Amount) (Currency.Amount))","counters":[]},{"line":"","counters":[]},{"line":"    let%test_module \"Balance\" = (module Make_test (Balance) (Currency.Balance))","counters":[]},{"line":"  end )","counters":[{"col_start":6,"col_end":6,"count":2}]}]}