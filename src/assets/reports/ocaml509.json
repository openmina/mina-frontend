{"filename":"src/lib/transition_chain_prover/transition_chain_prover.ml","lines":[{"line":"open Core","counters":[]},{"line":"open Mina_base","counters":[]},{"line":"open Mina_state","counters":[]},{"line":"","counters":[]},{"line":"module type Inputs_intf = sig","counters":[]},{"line":"  module Transition_frontier : module type of Transition_frontier","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Make (Inputs : Inputs_intf) :","counters":[]},{"line":"  Mina_intf.Transition_chain_prover_intf","counters":[]},{"line":"    with type transition_frontier := Inputs.Transition_frontier.t = struct","counters":[]},{"line":"  open Inputs","counters":[]},{"line":"","counters":[]},{"line":"  let find_in_root_history frontier state_hash =","counters":[]},{"line":"    let open Transition_frontier.Extensions in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    let open Option.Let_syntax in","counters":[]},{"line":"    let root_history =","counters":[]},{"line":"      get_extension (Transition_frontier.extensions frontier) Root_history","counters":[{"col_start":50,"col_end":50,"count":0}]},{"line":"    in","counters":[]},{"line":"    let%map root_data = Root_history.lookup root_history state_hash in","counters":[{"col_start":42,"col_end":42,"count":0}]},{"line":"    Frontier_base.Root_data.Historical.transition root_data","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"","counters":[]},{"line":"  module Merkle_list = Merkle_list_prover.Make_ident (struct","counters":[]},{"line":"    type value = Mina_block.Validated.t","counters":[]},{"line":"","counters":[]},{"line":"    type context = Transition_frontier.t","counters":[]},{"line":"","counters":[]},{"line":"    type proof_elem = State_body_hash.t","counters":[]},{"line":"","counters":[]},{"line":"    let to_proof_elem = Mina_block.Validated.state_body_hash","counters":[]},{"line":"","counters":[]},{"line":"    let get_previous ~context transition =","counters":[]},{"line":"      let parent_hash =","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        transition |> Mina_block.Validated.forget |> With_hash.data","counters":[{"col_start":48,"col_end":48,"count":0},{"col_start":66,"col_end":66,"count":0}]},{"line":"        |> Mina_block.header |> Mina_block.Header.protocol_state","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":63,"col_end":63,"count":0}]},{"line":"        |> Protocol_state.previous_state_hash","counters":[]},{"line":"      in","counters":[]},{"line":"      let open Option.Let_syntax in","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"      Option.merge","counters":[]},{"line":"        Transition_frontier.(","counters":[]},{"line":"          find context parent_hash >>| Breadcrumb.validated_transition)","counters":[{"col_start":13,"col_end":13,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"        (find_in_root_history context parent_hash)","counters":[{"col_start":28,"col_end":28,"count":0}]},{"line":"        ~f:Fn.const","counters":[]},{"line":"  end)","counters":[]},{"line":"","counters":[]},{"line":"  let prove ?length ~frontier state_hash =","counters":[]},{"line":"    let open Option.Let_syntax in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    let%map requested_transition =","counters":[]},{"line":"      Option.merge","counters":[{"col_start":17,"col_end":17,"count":0}]},{"line":"        Transition_frontier.(","counters":[]},{"line":"          find frontier state_hash >>| Breadcrumb.validated_transition)","counters":[{"col_start":13,"col_end":13,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"        (find_in_root_history frontier state_hash)","counters":[{"col_start":28,"col_end":28,"count":0}]},{"line":"        ~f:Fn.const","counters":[]},{"line":"    in","counters":[]},{"line":"    let first_transition, merkle_list =","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Merkle_list.prove ?length ~context:frontier requested_transition","counters":[]},{"line":"    in","counters":[]},{"line":"    (Mina_block.Validated.state_hash first_transition, merkle_list)","counters":[{"col_start":4,"col_end":4,"count":0},{"col_start":35,"col_end":35,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"include Make (struct","counters":[]},{"line":"  module Transition_frontier = Transition_frontier","counters":[]},{"line":"end)","counters":[{"col_start":3,"col_end":3,"count":2}]}]}