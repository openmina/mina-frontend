{"filename":"src/app/archive/lib/extensional.ml","lines":[{"line":"(* extensional.ml -- extensional representations of archive db data *)","counters":[]},{"line":"","counters":[{"col_start":0,"col_end":0,"count":1}]},{"line":"open Core_kernel","counters":[]},{"line":"open Mina_base","counters":[]},{"line":"open Mina_transaction","counters":[]},{"line":"open Signature_lib","counters":[]},{"line":"","counters":[]},{"line":"(* the tables in the archive db uses foreign keys to refer to other","counters":[]},{"line":"   tables; the types here fills in the data from those other tables, using","counters":[]},{"line":"   their native OCaml types to assure the validity of the data","counters":[]},{"line":"*)","counters":[]},{"line":"","counters":[]},{"line":"module User_command = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      (* for `typ` and `status`, a string is enough","counters":[]},{"line":"         in any case, there aren't existing string conversions for the","counters":[]},{"line":"         original OCaml types","counters":[]},{"line":"","counters":[]},{"line":"         The versioned modules in Transaction_hash.Stable don't have yojson functions","counters":[]},{"line":"         it would be difficult to add them, so we just use the ones for the","counters":[]},{"line":"          top-level Transaction.t","counters":[]},{"line":"      *)","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { sequence_no : int","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":26,"col_end":26,"count":0}]},{"line":"        ; command_type : string","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":25,"col_end":25,"count":0},{"col_start":30,"col_end":30,"count":0}]},{"line":"        ; fee_payer : Account_id.Stable.V2.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"        ; source : Account_id.Stable.V2.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"        ; receiver : Account_id.Stable.V2.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":21,"col_end":21,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"        ; nonce : Account.Nonce.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":18,"col_end":18,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"        ; amount : Currency.Amount.Stable.V1.t option","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":45,"col_end":45,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"        ; fee : Currency.Fee.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":16,"col_end":16,"count":0},{"col_start":39,"col_end":39,"count":0}]},{"line":"        ; valid_until : Mina_numbers.Global_slot.Stable.V1.t option","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":59,"col_end":59,"count":0},{"col_start":66,"col_end":66,"count":0}]},{"line":"        ; memo : Signed_command_memo.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"        ; hash : Transaction_hash.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"              [@to_yojson Transaction_hash.to_yojson]","counters":[{"col_start":51,"col_end":51,"count":0}]},{"line":"              [@of_yojson Transaction_hash.of_yojson]","counters":[{"col_start":51,"col_end":51,"count":0}]},{"line":"        ; status : string","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":24,"col_end":24,"count":0}]},{"line":"        ; failure_reason : Transaction_status.Failure.Stable.V2.t option","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":27,"col_end":27,"count":0},{"col_start":64,"col_end":64,"count":0},{"col_start":71,"col_end":71,"count":0}]},{"line":"        }","counters":[]},{"line":"      [@@deriving yojson, equal]","counters":[{"col_start":31,"col_end":31,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Internal_command = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      (* for `typ`, a string is enough","counters":[]},{"line":"         no existing string conversion for the original OCaml type","counters":[]},{"line":"      *)","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { sequence_no : int","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":26,"col_end":26,"count":0}]},{"line":"        ; secondary_sequence_no : int","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":34,"col_end":34,"count":0},{"col_start":36,"col_end":36,"count":0}]},{"line":"        ; command_type : string","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":25,"col_end":25,"count":0},{"col_start":30,"col_end":30,"count":0}]},{"line":"        ; receiver : Account_id.Stable.V2.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":21,"col_end":21,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"        ; fee : Currency.Fee.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":16,"col_end":16,"count":0},{"col_start":39,"col_end":39,"count":0}]},{"line":"        ; hash : Transaction_hash.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"              [@to_yojson Transaction_hash.to_yojson]","counters":[{"col_start":51,"col_end":51,"count":0}]},{"line":"              [@of_yojson Transaction_hash.of_yojson]","counters":[{"col_start":51,"col_end":51,"count":0}]},{"line":"        ; status : string","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":24,"col_end":24,"count":0}]},{"line":"        ; failure_reason : Transaction_status.Failure.Stable.V2.t option","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":27,"col_end":27,"count":0},{"col_start":64,"col_end":64,"count":0},{"col_start":71,"col_end":71,"count":0}]},{"line":"        }","counters":[]},{"line":"      [@@deriving yojson, equal]","counters":[{"col_start":31,"col_end":31,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"(* for fee payer and account updates, authorizations are omitted; signatures, proofs not in archive db *)","counters":[]},{"line":"module Zkapp_command = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { sequence_no : int","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":26,"col_end":26,"count":0}]},{"line":"        ; fee_payer : Account_update.Body.Fee_payer.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":62,"col_end":62,"count":0}]},{"line":"        ; account_updates : Account_update.Body.Simple.Stable.V1.t list","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":28,"col_end":28,"count":0},{"col_start":70,"col_end":70,"count":0}]},{"line":"        ; memo : Signed_command_memo.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"        ; hash : Transaction_hash.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"              [@to_yojson Transaction_hash.to_yojson]","counters":[{"col_start":51,"col_end":51,"count":0}]},{"line":"              [@of_yojson Transaction_hash.of_yojson]","counters":[{"col_start":51,"col_end":51,"count":0}]},{"line":"        ; status : string","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":24,"col_end":24,"count":0}]},{"line":"        ; failure_reasons :","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"            Transaction_status.Failure.Collection.Display.Stable.V1.t option","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":68,"col_end":68,"count":0},{"col_start":75,"col_end":75,"count":0}]},{"line":"        }","counters":[]},{"line":"      [@@deriving yojson, equal]","counters":[{"col_start":31,"col_end":31,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Block = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[{"col_start":18,"col_end":18,"count":0}]},{"line":"    [@@@with_versioned_json]","counters":[]},{"line":"","counters":[]},{"line":"    module V2 = struct","counters":[]},{"line":"      (* in accounts_accessed, the int is the ledger index","counters":[]},{"line":"         in tokens_used, the account id is the token owner","counters":[]},{"line":"      *)","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { state_hash : State_hash.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":23,"col_end":23,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"        ; parent_hash : State_hash.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"        ; creator : Public_key.Compressed.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":20,"col_end":20,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"        ; block_winner : Public_key.Compressed.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":25,"col_end":25,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        ; snarked_ledger_hash : Frozen_ledger_hash.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":32,"col_end":32,"count":0},{"col_start":61,"col_end":61,"count":0}]},{"line":"        ; staking_epoch_data : Mina_base.Epoch_data.Value.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":31,"col_end":31,"count":0},{"col_start":68,"col_end":68,"count":0}]},{"line":"        ; next_epoch_data : Mina_base.Epoch_data.Value.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":28,"col_end":28,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"        ; min_window_density : Mina_numbers.Length.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":31,"col_end":31,"count":0},{"col_start":61,"col_end":61,"count":0}]},{"line":"        ; total_currency : Currency.Amount.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":27,"col_end":27,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"        ; ledger_hash : Ledger_hash.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"        ; height : Unsigned_extended.UInt32.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"        ; global_slot_since_hard_fork : Mina_numbers.Global_slot.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":40,"col_end":40,"count":0},{"col_start":75,"col_end":75,"count":0}]},{"line":"        ; global_slot_since_genesis : Mina_numbers.Global_slot.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":38,"col_end":38,"count":0},{"col_start":73,"col_end":73,"count":0}]},{"line":"        ; timestamp : Block_time.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"        ; user_cmds : User_command.Stable.V1.t list","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"        ; internal_cmds : Internal_command.Stable.V1.t list","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":26,"col_end":26,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"        ; zkapp_cmds : Zkapp_command.Stable.V1.t list","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":23,"col_end":23,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"        ; chain_status : Chain_status.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":25,"col_end":25,"count":0},{"col_start":48,"col_end":48,"count":0}]},{"line":"        ; accounts_accessed : (int * Account.Stable.V2.t) list","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":30,"col_end":30,"count":0},{"col_start":31,"col_end":31,"count":0},{"col_start":33,"col_end":33,"count":0},{"col_start":37,"col_end":37,"count":0},{"col_start":55,"col_end":55,"count":0},{"col_start":61,"col_end":61,"count":0}]},{"line":"        ; accounts_created :","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"            (Account_id.Stable.V2.t * Currency.Fee.Stable.V1.t) list","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":13,"col_end":13,"count":0},{"col_start":34,"col_end":34,"count":0},{"col_start":38,"col_end":38,"count":0},{"col_start":61,"col_end":61,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        ; tokens_used :","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"            (Token_id.Stable.V2.t * Account_id.Stable.V2.t option) list","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":13,"col_end":13,"count":0},{"col_start":32,"col_end":32,"count":0},{"col_start":36,"col_end":36,"count":0},{"col_start":57,"col_end":57,"count":0},{"col_start":64,"col_end":64,"count":0},{"col_start":70,"col_end":70,"count":0}]},{"line":"        }","counters":[]},{"line":"      [@@deriving yojson, equal]","counters":[{"col_start":31,"col_end":31,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":2}]}]}