{"filename":"src/lib/proof_carrying_data/proof_carrying_data.ml","lines":[{"line":"(* A convenient data structure to bundle statements along with their proofs together *)","counters":[]},{"line":"","counters":[{"col_start":0,"col_end":0,"count":1}]},{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  module V1 = struct","counters":[]},{"line":"    type ('a, 'b) t = { data : 'a; proof : 'b } [@@deriving sexp, fields]","counters":[{"col_start":4,"col_end":4,"count":2},{"col_start":18,"col_end":18,"count":5},{"col_start":24,"col_end":24,"count":0},{"col_start":27,"col_end":27,"count":0},{"col_start":35,"col_end":35,"count":0},{"col_start":39,"col_end":39,"count":0},{"col_start":72,"col_end":72,"count":5}]},{"line":"  end","counters":[]},{"line":"end]","counters":[]},{"line":"","counters":[]},{"line":"let map { data; proof } ~f1 ~f2 = { data = f1 data; proof = f2 proof }","counters":[{"col_start":34,"col_end":34,"count":0},{"col_start":44,"col_end":44,"count":0},{"col_start":61,"col_end":61,"count":0},{"col_start":69,"col_end":69,"count":2}]}]}