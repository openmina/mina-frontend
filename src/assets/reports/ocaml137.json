{"filename":"src/lib/mina_base/ledger_hash_intf.ml","lines":[{"line":"open Snark_params","counters":[]},{"line":"open Snarky_backendless","counters":[]},{"line":"open Tick","counters":[]},{"line":"","counters":[]},{"line":"module type S = sig","counters":[]},{"line":"  include Ledger_hash_intf0.S","counters":[]},{"line":"","counters":[]},{"line":"  type path = Random_oracle.Digest.t list","counters":[]},{"line":"","counters":[]},{"line":"  type _ Request.t +=","counters":[]},{"line":"    | Get_path : Account.Index.t -> path Request.t","counters":[]},{"line":"    | Get_element : Account.Index.t -> (Account.t * path) Request.t","counters":[]},{"line":"    | Set : Account.Index.t * Account.t -> unit Request.t","counters":[]},{"line":"    | Find_index : Account_id.t -> Account.Index.t Request.t","counters":[]},{"line":"","counters":[]},{"line":"  val get :","counters":[]},{"line":"    depth:int -> var -> Account.Index.Unpacked.var -> Account.var Checked.t","counters":[]},{"line":"","counters":[]},{"line":"  val merge : height:int -> t -> t -> t","counters":[]},{"line":"","counters":[]},{"line":"  (** string representation of hash is Base58Check of bin_io representation *)","counters":[]},{"line":"  val to_base58_check : t -> string","counters":[]},{"line":"","counters":[]},{"line":"  val of_base58_check : string -> t Base.Or_error.t","counters":[]},{"line":"","counters":[]},{"line":"  val empty_hash : t","counters":[]},{"line":"","counters":[]},{"line":"  val of_digest : Random_oracle.Digest.t -> t","counters":[]},{"line":"","counters":[]},{"line":"  val modify_account :","counters":[]},{"line":"       depth:int","counters":[]},{"line":"    -> var","counters":[]},{"line":"    -> Account_id.var","counters":[]},{"line":"    -> filter:(Account.var -> 'a Checked.t)","counters":[]},{"line":"    -> f:('a -> Account.var -> Account.var Checked.t)","counters":[]},{"line":"    -> var Checked.t","counters":[]},{"line":"","counters":[]},{"line":"  val modify_account_send :","counters":[]},{"line":"       depth:int","counters":[]},{"line":"    -> var","counters":[]},{"line":"    -> Account_id.var","counters":[]},{"line":"    -> is_writeable:Boolean.var","counters":[]},{"line":"    -> f:","counters":[]},{"line":"         (   is_empty_and_writeable:Boolean.var","counters":[]},{"line":"          -> Account.var","counters":[]},{"line":"          -> Account.var Checked.t )","counters":[]},{"line":"    -> var Checked.t","counters":[]},{"line":"","counters":[]},{"line":"  val modify_account_recv :","counters":[]},{"line":"       depth:int","counters":[]},{"line":"    -> var","counters":[]},{"line":"    -> Account_id.var","counters":[]},{"line":"    -> f:","counters":[]},{"line":"         (   is_empty_and_writeable:Boolean.var","counters":[]},{"line":"          -> Account.var","counters":[]},{"line":"          -> Account.var Checked.t )","counters":[]},{"line":"    -> var Checked.t","counters":[]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":1}]}]}