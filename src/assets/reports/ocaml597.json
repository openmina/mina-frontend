{"filename":"src/lib/pickles/limb_vector/challenge.ml","lines":[{"line":"open Pickles_types","counters":[]},{"line":"","counters":[]},{"line":"type 'f t = 'f Snarky_backendless.Cvar.t","counters":[]},{"line":"","counters":[]},{"line":"module Constant = Constant.Make (Nat.N2)","counters":[]},{"line":"","counters":[]},{"line":"module type S = sig","counters":[]},{"line":"  module Impl : Snarky_backendless.Snark_intf.Run","counters":[]},{"line":"","counters":[]},{"line":"  open Impl","counters":[]},{"line":"","counters":[]},{"line":"  type nonrec t = field t","counters":[]},{"line":"","counters":[]},{"line":"  module Constant : sig","counters":[]},{"line":"    type t = Constant.t [@@deriving sexp_of]","counters":[]},{"line":"","counters":[]},{"line":"    val to_bits : t -> bool list","counters":[]},{"line":"","counters":[]},{"line":"    val of_bits : bool list -> t","counters":[]},{"line":"","counters":[]},{"line":"    val dummy : t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  val typ : (t, Constant.t) Typ.t","counters":[]},{"line":"","counters":[]},{"line":"  val length : int","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Make (Impl : Snarky_backendless.Snark_intf.Run) :","counters":[]},{"line":"  S with module Impl := Impl =","counters":[]},{"line":"  Make.T (Impl) (Nat.N2)","counters":[{"col_start":23,"col_end":23,"count":2}]}]}