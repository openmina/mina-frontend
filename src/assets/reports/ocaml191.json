{"filename":"src/lib/crypto/kimchi_backend/pasta/kimchi_pasta.ml","lines":[{"line":"module Basic = Kimchi_pasta_basic","counters":[]},{"line":"","counters":[]},{"line":"module Pallas_based_plonk = struct","counters":[]},{"line":"  module Field = Pallas_based_plonk.Field","counters":[]},{"line":"  module Curve = Pallas_based_plonk.Curve","counters":[]},{"line":"  module Bigint = Pallas_based_plonk.Bigint","counters":[]},{"line":"","counters":[]},{"line":"  let field_size = Pallas_based_plonk.field_size","counters":[]},{"line":"","counters":[]},{"line":"  module Verification_key = Pallas_based_plonk.Verification_key","counters":[]},{"line":"  module R1CS_constraint_system = Pallas_based_plonk.R1CS_constraint_system","counters":[]},{"line":"  module Rounds_vector = Pallas_based_plonk.Rounds_vector","counters":[]},{"line":"  module Rounds = Pallas_based_plonk.Rounds","counters":[]},{"line":"  module Keypair = Pallas_based_plonk.Keypair","counters":[]},{"line":"  module Proof = Pallas_based_plonk.Proof","counters":[]},{"line":"  module Proving_key = Pallas_based_plonk.Proving_key","counters":[]},{"line":"  module Oracles = Pallas_based_plonk.Oracles","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Vesta_based_plonk = struct","counters":[]},{"line":"  module Field = Vesta_based_plonk.Field","counters":[]},{"line":"  module Curve = Vesta_based_plonk.Curve","counters":[]},{"line":"  module Bigint = Vesta_based_plonk.Bigint","counters":[]},{"line":"","counters":[]},{"line":"  let field_size = Vesta_based_plonk.field_size","counters":[]},{"line":"","counters":[]},{"line":"  module Verification_key = Vesta_based_plonk.Verification_key","counters":[]},{"line":"  module R1CS_constraint_system = Vesta_based_plonk.R1CS_constraint_system","counters":[]},{"line":"  module Rounds_vector = Vesta_based_plonk.Rounds_vector","counters":[]},{"line":"  module Rounds = Vesta_based_plonk.Rounds","counters":[]},{"line":"  module Keypair = Vesta_based_plonk.Keypair","counters":[]},{"line":"  module Proof = Vesta_based_plonk.Proof","counters":[]},{"line":"  module Proving_key = Vesta_based_plonk.Proving_key","counters":[]},{"line":"  module Oracles = Vesta_based_plonk.Oracles","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Pasta = struct","counters":[]},{"line":"  module Rounds = Pasta.Rounds","counters":[]},{"line":"  module Bigint256 = Pasta.Bigint256","counters":[]},{"line":"  module Fp = Pasta.Fp","counters":[]},{"line":"  module Fq = Pasta.Fq","counters":[]},{"line":"  module Vesta = Pasta.Vesta","counters":[]},{"line":"  module Pallas = Pasta.Pallas","counters":[]},{"line":"  module Precomputed = Pasta.Precomputed","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Precomputed = Precomputed","counters":[{"col_start":31,"col_end":31,"count":2}]}]}