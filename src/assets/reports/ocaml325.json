{"filename":"src/lib/snark_worker/snark_worker.ml","lines":[{"line":"module Prod = Prod","counters":[]},{"line":"module Intf = Intf","counters":[]},{"line":"module Inputs = Prod.Inputs","counters":[]},{"line":"","counters":[]},{"line":"type Structured_log_events.t += Generating_snark_work_failed","counters":[]},{"line":"  [@@deriving register_event { msg = \"Failed to generate SNARK work\" }]","counters":[{"col_start":14,"col_end":14,"count":0},{"col_start":27,"col_end":27,"count":3}]},{"line":"","counters":[]},{"line":"module Worker = struct","counters":[]},{"line":"  include Functor.Make (Inputs)","counters":[]},{"line":"","counters":[]},{"line":"  module Rpcs_versioned = struct","counters":[]},{"line":"    open Core_kernel","counters":[]},{"line":"    open Signature_lib","counters":[]},{"line":"","counters":[]},{"line":"    module Work = struct","counters":[]},{"line":"      type ledger_proof = Inputs.Ledger_proof.t","counters":[]},{"line":"","counters":[]},{"line":"      include Work","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    [%%versioned_rpc","counters":[]},{"line":"    module Get_work = struct","counters":[]},{"line":"      module V2 = struct","counters":[{"col_start":6,"col_end":6,"count":3}]},{"line":"        module T = struct","counters":[]},{"line":"          type query = unit","counters":[{"col_start":10,"col_end":10,"count":1},{"col_start":19,"col_end":19,"count":1},{"col_start":26,"col_end":26,"count":4}]},{"line":"","counters":[]},{"line":"          type response =","counters":[{"col_start":10,"col_end":10,"count":1},{"col_start":22,"col_end":22,"count":1}]},{"line":"            ( ( Transaction_witness.Stable.V2.t","counters":[]},{"line":"              , Inputs.Ledger_proof.Stable.V2.t )","counters":[]},{"line":"              Snark_work_lib.Work.Single.Spec.Stable.V2.t","counters":[]},{"line":"              Snark_work_lib.Work.Spec.Stable.V1.t","counters":[]},{"line":"            * Public_key.Compressed.Stable.V1.t )","counters":[]},{"line":"            option","counters":[{"col_start":17,"col_end":17,"count":4}]},{"line":"","counters":[]},{"line":"          let query_of_caller_model = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let callee_model_of_query = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let response_of_callee_model :","counters":[]},{"line":"              Rpcs.Get_work.Master.Callee.response -> response =","counters":[]},{"line":"            Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let caller_model_of_response = Fn.id","counters":[]},{"line":"        end","counters":[]},{"line":"","counters":[]},{"line":"        include T","counters":[]},{"line":"        include Rpcs.Get_work.Register (T)","counters":[]},{"line":"      end","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"","counters":[]},{"line":"      module Latest = V2","counters":[]},{"line":"    end]","counters":[]},{"line":"","counters":[]},{"line":"    [%%versioned_rpc","counters":[]},{"line":"    module Submit_work = struct","counters":[]},{"line":"      module V2 = struct","counters":[{"col_start":6,"col_end":6,"count":3}]},{"line":"        module T = struct","counters":[]},{"line":"          type query =","counters":[{"col_start":10,"col_end":10,"count":1},{"col_start":19,"col_end":19,"count":1}]},{"line":"            ( ( Transaction_witness.Stable.V2.t","counters":[]},{"line":"              , Ledger_proof.Stable.V2.t )","counters":[]},{"line":"              Snark_work_lib.Work.Single.Spec.Stable.V2.t","counters":[]},{"line":"              Snark_work_lib.Work.Spec.Stable.V1.t","counters":[]},{"line":"            , Ledger_proof.Stable.V2.t )","counters":[]},{"line":"            Snark_work_lib.Work.Result.Stable.V1.t","counters":[{"col_start":49,"col_end":49,"count":4}]},{"line":"","counters":[]},{"line":"          type response = unit","counters":[{"col_start":10,"col_end":10,"count":1},{"col_start":22,"col_end":22,"count":1},{"col_start":29,"col_end":29,"count":4}]},{"line":"","counters":[]},{"line":"          let query_of_caller_model = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let callee_model_of_query = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let response_of_callee_model = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let caller_model_of_response = Fn.id","counters":[]},{"line":"        end","counters":[]},{"line":"","counters":[]},{"line":"        include T","counters":[]},{"line":"        include Rpcs.Submit_work.Register (T)","counters":[]},{"line":"      end","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"","counters":[]},{"line":"      module Latest = V2","counters":[]},{"line":"    end]","counters":[]},{"line":"","counters":[]},{"line":"    [%%versioned_rpc","counters":[]},{"line":"    module Failed_to_generate_snark = struct","counters":[]},{"line":"      module V2 = struct","counters":[{"col_start":6,"col_end":6,"count":3}]},{"line":"        module T = struct","counters":[]},{"line":"          type query =","counters":[{"col_start":10,"col_end":10,"count":1},{"col_start":19,"col_end":19,"count":1}]},{"line":"            ( Transaction_witness.Stable.V2.t","counters":[]},{"line":"            , Inputs.Ledger_proof.Stable.V2.t )","counters":[]},{"line":"            Snark_work_lib.Work.Single.Spec.Stable.V2.t","counters":[]},{"line":"            Snark_work_lib.Work.Spec.Stable.V1.t","counters":[]},{"line":"            * Public_key.Compressed.Stable.V1.t","counters":[{"col_start":46,"col_end":46,"count":4}]},{"line":"","counters":[]},{"line":"          type response = unit","counters":[{"col_start":10,"col_end":10,"count":1},{"col_start":22,"col_end":22,"count":1},{"col_start":29,"col_end":29,"count":4}]},{"line":"","counters":[]},{"line":"          let query_of_caller_model = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let callee_model_of_query = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let response_of_callee_model = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"          let caller_model_of_response = Fn.id","counters":[]},{"line":"        end","counters":[]},{"line":"","counters":[]},{"line":"        include T","counters":[]},{"line":"        include Rpcs.Failed_to_generate_snark.Register (T)","counters":[]},{"line":"      end","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"","counters":[]},{"line":"      module Latest = V2","counters":[]},{"line":"    end]","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  let command = command_from_rpcs (module Rpcs_versioned)","counters":[{"col_start":32,"col_end":32,"count":1}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"include Worker","counters":[{"col_start":13,"col_end":13,"count":1}]}]}