{"filename":"src/lib/mina_state/genesis_protocol_state.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"let t ~genesis_ledger ~genesis_epoch_data ~constraint_constants","counters":[]},{"line":"    ~consensus_constants ~genesis_body_reference =","counters":[]},{"line":"  let genesis_ledger_hash =","counters":[{"col_start":2,"col_end":2,"count":2}]},{"line":"    Mina_ledger.Ledger.merkle_root (Lazy.force genesis_ledger)","counters":[{"col_start":45,"col_end":45,"count":2}]},{"line":"  in","counters":[]},{"line":"  let protocol_constants =","counters":[{"col_start":2,"col_end":2,"count":2}]},{"line":"    Consensus.Constants.to_protocol_constants consensus_constants","counters":[]},{"line":"  in","counters":[]},{"line":"  let negative_one_protocol_state_hash =","counters":[{"col_start":2,"col_end":2,"count":2}]},{"line":"    Protocol_state.(","counters":[]},{"line":"      hashes","counters":[{"col_start":11,"col_end":11,"count":2}]},{"line":"        (negative_one ~genesis_ledger ~genesis_epoch_data ~constraint_constants","counters":[]},{"line":"           ~consensus_constants ~genesis_body_reference ))","counters":[]},{"line":"      .state_hash","counters":[]},{"line":"  in","counters":[]},{"line":"  let genesis_consensus_state =","counters":[]},{"line":"    Consensus.Data.Consensus_state.create_genesis","counters":[]},{"line":"      ~negative_one_protocol_state_hash ~genesis_ledger ~genesis_epoch_data","counters":[]},{"line":"      ~constraint_constants ~constants:consensus_constants","counters":[]},{"line":"  in","counters":[]},{"line":"  let state =","counters":[]},{"line":"    Protocol_state.create_value","counters":[]},{"line":"      ~genesis_state_hash:negative_one_protocol_state_hash","counters":[]},{"line":"      ~previous_state_hash:","counters":[]},{"line":"        (Option.value_map constraint_constants.fork","counters":[{"col_start":24,"col_end":24,"count":2}]},{"line":"           ~default:negative_one_protocol_state_hash","counters":[]},{"line":"           ~f:(fun { previous_state_hash; _ } -> previous_state_hash) )","counters":[{"col_start":49,"col_end":49,"count":0}]},{"line":"      ~blockchain_state:","counters":[]},{"line":"        (Blockchain_state.genesis ~constraint_constants ~consensus_constants","counters":[]},{"line":"           ~genesis_ledger_hash ~genesis_body_reference )","counters":[]},{"line":"      ~consensus_state:genesis_consensus_state ~constants:protocol_constants","counters":[]},{"line":"  in","counters":[]},{"line":"  With_hash.of_data ~hash_data:Protocol_state.hashes state","counters":[{"col_start":57,"col_end":57,"count":1}]}]}