{"filename":"src/lib/otp_lib/capped_supervisor.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Async_kernel","counters":[]},{"line":"open Pipe_lib","counters":[]},{"line":"open Strict_pipe","counters":[]},{"line":"","counters":[]},{"line":"type 'data t =","counters":[]},{"line":"  { job_writer : ('data, crash buffered, unit) Writer.t","counters":[]},{"line":"  ; f : 'data -> unit Deferred.t","counters":[]},{"line":"  }","counters":[]},{"line":"","counters":[]},{"line":"let create ?(buffer_capacity = 30) ~job_capacity f =","counters":[{"col_start":31,"col_end":31,"count":0}]},{"line":"  let job_reader, job_writer =","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    Strict_pipe.create (Buffered (`Capacity buffer_capacity, `Overflow Crash))","counters":[]},{"line":"  in","counters":[]},{"line":"  let active_jobs = ref 0 in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  let pending_jobs = ref [] in","counters":[]},{"line":"  let job_finished_bvar = Bvar.create () in","counters":[]},{"line":"  let run_job job =","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    incr active_jobs ;","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    don't_wait_for","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      (let%map () = f job in","counters":[{"col_start":20,"col_end":20,"count":0}]},{"line":"       decr active_jobs ;","counters":[{"col_start":7,"col_end":7,"count":0}]},{"line":"       Bvar.broadcast job_finished_bvar () )","counters":[{"col_start":7,"col_end":7,"count":0}]},{"line":"  in","counters":[]},{"line":"  let rec start_jobs n =","counters":[]},{"line":"    if n <= 0 then ()","counters":[{"col_start":4,"col_end":4,"count":0},{"col_start":19,"col_end":19,"count":0}]},{"line":"    else","counters":[]},{"line":"      match !pending_jobs with","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"      | [] ->","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"          ()","counters":[]},{"line":"      | h :: t ->","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"          pending_jobs := t ;","counters":[]},{"line":"          run_job h ;","counters":[]},{"line":"          start_jobs (n - 1)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"  in","counters":[]},{"line":"  let rec process_pending_jobs () =","counters":[]},{"line":"    let%bind () = Bvar.wait job_finished_bvar in","counters":[{"col_start":26,"col_end":26,"count":0}]},{"line":"    start_jobs (job_capacity - !active_jobs) ;","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    process_pending_jobs ()","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"  in","counters":[]},{"line":"  don't_wait_for (process_pending_jobs ()) ;","counters":[{"col_start":37,"col_end":37,"count":0}]},{"line":"  don't_wait_for","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    (Reader.iter_without_pushback job_reader ~f:(fun job ->","counters":[{"col_start":32,"col_end":32,"count":0}]},{"line":"         if !active_jobs < job_capacity then run_job job","counters":[{"col_start":9,"col_end":9,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"         else pending_jobs := !pending_jobs @ [ job ] ) ) ;","counters":[{"col_start":14,"col_end":14,"count":0}]},{"line":"  { job_writer; f }","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"","counters":[]},{"line":"let dispatch t data = Writer.write t.job_writer data","counters":[{"col_start":22,"col_end":22,"count":0},{"col_start":51,"col_end":51,"count":2}]}]}