{"filename":"src/lib/perf_histograms/perf_histograms0.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"(* For now, we'll just support Exp_time_spans histogram *)","counters":[]},{"line":"let t : Histogram.Exp_time_spans.t String.Table.t = String.Table.create ()","counters":[{"col_start":70,"col_end":70,"count":1}]},{"line":"","counters":[]},{"line":"let add_span ~name s =","counters":[]},{"line":"  let hist =","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    String.Table.find_or_add t name ~default:Histogram.Exp_time_spans.create","counters":[]},{"line":"  in","counters":[]},{"line":"  Histogram.Exp_time_spans.add hist s","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"","counters":[]},{"line":"let report ~name =","counters":[]},{"line":"  String.Table.find_and_call t name","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    ~if_found:(fun tbl -> Some (Histogram.Exp_time_spans.report tbl))","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":62,"col_end":62,"count":0}]},{"line":"    ~if_not_found:(fun _ -> None)","counters":[{"col_start":28,"col_end":28,"count":0}]},{"line":"","counters":[]},{"line":"let wipe () =","counters":[]},{"line":"  String.Table.iter t ~f:(fun tbl -> Histogram.Exp_time_spans.clear tbl)","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":37,"col_end":37,"count":0},{"col_start":71,"col_end":71,"count":2}]}]}