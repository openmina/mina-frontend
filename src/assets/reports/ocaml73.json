{"filename":"src/lib/hash_prefix_states/hash_prefix_states.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Hash_prefixes","counters":[]},{"line":"","counters":[]},{"line":"let salt (s : Hash_prefixes.t) = Random_oracle.salt (s :> string)","counters":[{"col_start":33,"col_end":33,"count":44}]},{"line":"","counters":[]},{"line":"let salt_legacy (s : Hash_prefixes.t) = Random_oracle.Legacy.salt (s :> string)","counters":[{"col_start":40,"col_end":40,"count":3}]},{"line":"","counters":[]},{"line":"let receipt_chain_signed_command = salt_legacy receipt_chain_user_command","counters":[{"col_start":45,"col_end":45,"count":1}]},{"line":"","counters":[]},{"line":"let receipt_chain_zkapp_command = salt receipt_chain_user_command","counters":[{"col_start":37,"col_end":37,"count":1}]},{"line":"","counters":[]},{"line":"let receipt_chain_zkapp = salt receipt_chain_zkapp","counters":[{"col_start":29,"col_end":29,"count":1}]},{"line":"","counters":[]},{"line":"let coinbase = salt coinbase","counters":[{"col_start":18,"col_end":18,"count":1}]},{"line":"","counters":[]},{"line":"let pending_coinbases = salt pending_coinbases","counters":[{"col_start":27,"col_end":27,"count":1}]},{"line":"","counters":[]},{"line":"let coinbase_stack_data = salt coinbase_stack_data","counters":[{"col_start":29,"col_end":29,"count":1}]},{"line":"","counters":[]},{"line":"let coinbase_stack_state_hash = salt coinbase_stack_state_hash","counters":[{"col_start":35,"col_end":35,"count":1}]},{"line":"","counters":[]},{"line":"let coinbase_stack = salt coinbase_stack","counters":[{"col_start":24,"col_end":24,"count":1}]},{"line":"","counters":[]},{"line":"let checkpoint_list = salt checkpoint_list","counters":[{"col_start":25,"col_end":25,"count":1}]},{"line":"","counters":[]},{"line":"let merge_snark = salt merge_snark","counters":[{"col_start":21,"col_end":21,"count":1}]},{"line":"","counters":[]},{"line":"let base_snark = salt base_snark","counters":[{"col_start":20,"col_end":20,"count":1}]},{"line":"","counters":[]},{"line":"let protocol_state = salt protocol_state","counters":[{"col_start":24,"col_end":24,"count":1}]},{"line":"","counters":[]},{"line":"let protocol_state_body = salt protocol_state_body","counters":[{"col_start":29,"col_end":29,"count":1}]},{"line":"","counters":[]},{"line":"let merkle_tree =","counters":[]},{"line":"  let f i = salt (merkle_tree i) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":28,"col_end":28,"count":0}]},{"line":"  (* Cache up to the compiled ledger depth. *)","counters":[]},{"line":"  let cached = ref [||] in","counters":[]},{"line":"  fun i ->","counters":[]},{"line":"    let len = Array.length !cached in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    if i >= len then","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      cached :=","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        Array.append !cached","counters":[{"col_start":19,"col_end":19,"count":0}]},{"line":"          (Array.init (i + 1 - len) ~f:(fun i -> f (i + len))) ;","counters":[{"col_start":20,"col_end":20,"count":0},{"col_start":49,"col_end":49,"count":0}]},{"line":"    !cached.(i)","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"","counters":[]},{"line":"let coinbase_merkle_tree =","counters":[]},{"line":"  let f i = salt (coinbase_merkle_tree i) in","counters":[{"col_start":12,"col_end":12,"count":4},{"col_start":37,"col_end":37,"count":4}]},{"line":"  let cached = ref [||] in","counters":[]},{"line":"  fun i ->","counters":[]},{"line":"    let len = Array.length !cached in","counters":[{"col_start":4,"col_end":4,"count":64}]},{"line":"    if i >= len then","counters":[{"col_start":4,"col_end":4,"count":64}]},{"line":"      cached :=","counters":[{"col_start":6,"col_end":6,"count":4}]},{"line":"        Array.append !cached","counters":[{"col_start":19,"col_end":19,"count":4}]},{"line":"          (Array.init (i + 1 - len) ~f:(fun i -> f (i + len))) ;","counters":[{"col_start":20,"col_end":20,"count":4},{"col_start":49,"col_end":49,"count":4}]},{"line":"    !cached.(i)","counters":[{"col_start":4,"col_end":4,"count":64}]},{"line":"","counters":[]},{"line":"let vrf_message = salt vrf_message","counters":[{"col_start":21,"col_end":21,"count":1}]},{"line":"","counters":[]},{"line":"let signature_for_mainnet = salt signature_mainnet","counters":[{"col_start":31,"col_end":31,"count":1}]},{"line":"","counters":[]},{"line":"let signature_for_testnet = salt signature_testnet","counters":[{"col_start":31,"col_end":31,"count":1}]},{"line":"","counters":[]},{"line":"let signature =","counters":[]},{"line":"  match Mina_signature_kind.t with","counters":[]},{"line":"  | Mainnet ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      signature_for_mainnet","counters":[]},{"line":"  | Testnet ->","counters":[{"col_start":4,"col_end":4,"count":1}]},{"line":"      signature_for_testnet","counters":[]},{"line":"","counters":[]},{"line":"let signature_for_mainnet_legacy = salt_legacy signature_mainnet","counters":[{"col_start":45,"col_end":45,"count":1}]},{"line":"","counters":[]},{"line":"let signature_for_testnet_legacy = salt_legacy signature_testnet","counters":[{"col_start":45,"col_end":45,"count":1}]},{"line":"","counters":[]},{"line":"let signature_legacy =","counters":[]},{"line":"  match Mina_signature_kind.t with","counters":[]},{"line":"  | Mainnet ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      signature_for_mainnet_legacy","counters":[]},{"line":"  | Testnet ->","counters":[{"col_start":4,"col_end":4,"count":1}]},{"line":"      signature_for_testnet_legacy","counters":[]},{"line":"","counters":[]},{"line":"let vrf_output = salt vrf_output","counters":[{"col_start":20,"col_end":20,"count":1}]},{"line":"","counters":[]},{"line":"let vrf_evaluation = salt vrf_evaluation","counters":[{"col_start":24,"col_end":24,"count":1}]},{"line":"","counters":[]},{"line":"let epoch_seed = salt epoch_seed","counters":[{"col_start":20,"col_end":20,"count":1}]},{"line":"","counters":[]},{"line":"let transition_system_snark = salt transition_system_snark","counters":[{"col_start":33,"col_end":33,"count":1}]},{"line":"","counters":[]},{"line":"let account = salt account","counters":[{"col_start":17,"col_end":17,"count":1}]},{"line":"","counters":[]},{"line":"let side_loaded_vk = salt side_loaded_vk","counters":[{"col_start":24,"col_end":24,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_account = salt zkapp_account","counters":[{"col_start":23,"col_end":23,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_payload = salt zkapp_payload","counters":[{"col_start":23,"col_end":23,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_body = salt zkapp_body","counters":[{"col_start":20,"col_end":20,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_precondition = salt zkapp_precondition","counters":[{"col_start":28,"col_end":28,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_precondition_account = salt zkapp_precondition_account","counters":[{"col_start":36,"col_end":36,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_precondition_protocol_state = salt zkapp_precondition_protocol_state","counters":[{"col_start":43,"col_end":43,"count":1}]},{"line":"","counters":[]},{"line":"let account_update = salt account_update","counters":[{"col_start":24,"col_end":24,"count":1}]},{"line":"","counters":[]},{"line":"let account_update_account_precondition =","counters":[]},{"line":"  salt account_update_account_precondition","counters":[{"col_start":5,"col_end":5,"count":1}]},{"line":"","counters":[]},{"line":"let account_update_cons = salt account_update_cons","counters":[{"col_start":29,"col_end":29,"count":1}]},{"line":"","counters":[]},{"line":"let account_update_node = salt account_update_node","counters":[{"col_start":29,"col_end":29,"count":1}]},{"line":"","counters":[]},{"line":"let account_update_stack_frame = salt account_update_stack_frame","counters":[{"col_start":36,"col_end":36,"count":1}]},{"line":"","counters":[]},{"line":"let account_update_stack_frame_cons = salt account_update_stack_frame_cons","counters":[{"col_start":41,"col_end":41,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_uri = salt zkapp_uri","counters":[{"col_start":19,"col_end":19,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_event = salt zkapp_event","counters":[{"col_start":21,"col_end":21,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_events = salt zkapp_events","counters":[{"col_start":22,"col_end":22,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_sequence_events = salt zkapp_sequence_events","counters":[{"col_start":31,"col_end":31,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_memo = salt zkapp_memo","counters":[{"col_start":20,"col_end":20,"count":1}]},{"line":"","counters":[]},{"line":"let zkapp_test = salt zkapp_test","counters":[{"col_start":20,"col_end":20,"count":1}]},{"line":"","counters":[]},{"line":"let derive_token_id = salt derive_token_id","counters":[{"col_start":25,"col_end":25,"count":1},{"col_start":41,"col_end":41,"count":1}]}]}