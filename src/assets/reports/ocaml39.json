{"filename":"src/lib/mina_compile_config/mina_compile_config.ml","lines":[{"line":"[%%import \"/src/config.mlh\"]","counters":[]},{"line":"","counters":[]},{"line":"(** This file consists of compile-time constants that are not in","counters":[]},{"line":"    Genesis_constants.","counters":[]},{"line":"    This file includes all of the constants defined at compile-time for both","counters":[]},{"line":"    tests and production.","counters":[]},{"line":"*)","counters":[]},{"line":"","counters":[]},{"line":"[%%inject \"curve_size\", curve_size]","counters":[]},{"line":"","counters":[]},{"line":"[%%inject \"genesis_ledger\", genesis_ledger]","counters":[]},{"line":"","counters":[]},{"line":"[%%inject \"default_transaction_fee_string\", default_transaction_fee]","counters":[]},{"line":"","counters":[]},{"line":"[%%inject \"default_snark_worker_fee_string\", default_snark_worker_fee]","counters":[]},{"line":"","counters":[]},{"line":"[%%inject \"minimum_user_command_fee_string\", minimum_user_command_fee]","counters":[]},{"line":"","counters":[]},{"line":"[%%ifndef compaction_interval]","counters":[]},{"line":"","counters":[]},{"line":"let compaction_interval_ms = None","counters":[]},{"line":"","counters":[]},{"line":"[%%else]","counters":[]},{"line":"","counters":[]},{"line":"[%%inject \"compaction_interval\", compaction_interval]","counters":[]},{"line":"","counters":[]},{"line":"let compaction_interval_ms = Some compaction_interval","counters":[]},{"line":"","counters":[]},{"line":"[%%endif]","counters":[]},{"line":"","counters":[]},{"line":"let minimum_user_command_fee =","counters":[]},{"line":"  Currency.Fee.of_formatted_string minimum_user_command_fee_string","counters":[{"col_start":33,"col_end":33,"count":1}]},{"line":"","counters":[]},{"line":"let default_transaction_fee =","counters":[]},{"line":"  Currency.Fee.of_formatted_string default_transaction_fee_string","counters":[{"col_start":33,"col_end":33,"count":1}]},{"line":"","counters":[]},{"line":"let default_snark_worker_fee =","counters":[]},{"line":"  Currency.Fee.of_formatted_string default_snark_worker_fee_string","counters":[{"col_start":33,"col_end":33,"count":1}]},{"line":"","counters":[]},{"line":"[%%inject \"block_window_duration_ms\", block_window_duration]","counters":[]},{"line":"","counters":[]},{"line":"[%%inject \"vrf_poll_interval_ms\", vrf_poll_interval]","counters":[]},{"line":"","counters":[]},{"line":"let rpc_handshake_timeout_sec = 60.0","counters":[]},{"line":"","counters":[]},{"line":"let rpc_heartbeat_timeout_sec = 60.0","counters":[]},{"line":"","counters":[]},{"line":"let rpc_heartbeat_send_every_sec = 10.0 (*same as the default*)","counters":[]},{"line":"","counters":[]},{"line":"[%%inject \"generate_genesis_proof\", generate_genesis_proof]","counters":[]},{"line":"","counters":[]},{"line":"let transaction_expiry_hr = 2","counters":[]},{"line":"","counters":[]},{"line":"(** limits on Zkapp_command.t size","counters":[]},{"line":"    10.26*np + 10.08*n2 + 9.14*n1 < 69.45","counters":[]},{"line":"    where np: number of single proof updates","counters":[]},{"line":"    n2: number of pairs of signed/no-auth update","counters":[]},{"line":"    n1: number of single signed/no-auth update","counters":[]},{"line":"    and their coefficients representing the cost","counters":[]},{"line":"  The formula was generated based on benchmarking data conducted on bare ","counters":[]},{"line":"  metal i9 processor with room to include lower spec.","counters":[]},{"line":"  69.45 was the total time for a combination of updates that was considered ","counters":[]},{"line":"  acceptable.","counters":[]},{"line":"  The method used to estimate the cost was linear least squares.","counters":[]},{"line":"*)","counters":[]},{"line":"","counters":[]},{"line":"let zkapp_proof_update_cost = 10.26","counters":[]},{"line":"","counters":[]},{"line":"let zkapp_signed_pair_update_cost = 10.08","counters":[]},{"line":"","counters":[]},{"line":"let zkapp_signed_single_update_cost = 9.14","counters":[]},{"line":"","counters":[]},{"line":"let zkapp_transaction_cost_limit = 69.45","counters":[]},{"line":"","counters":[]},{"line":"let max_event_elements = 16","counters":[]},{"line":"","counters":[]},{"line":"let max_sequence_event_elements = 16","counters":[]}]}