{"filename":"src/lib/pickles_types/abc.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  module V1 = struct","counters":[]},{"line":"    type 'a t = { a : 'a; b : 'a; c : 'a }","counters":[{"col_start":4,"col_end":4,"count":0},{"col_start":12,"col_end":12,"count":4},{"col_start":18,"col_end":18,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":23,"col_end":23,"count":0},{"col_start":26,"col_end":26,"count":0},{"col_start":30,"col_end":30,"count":0},{"col_start":31,"col_end":31,"count":0},{"col_start":34,"col_end":34,"count":0},{"col_start":39,"col_end":39,"count":0}]},{"line":"    [@@deriving sexp, equal, compare, hash, yojson, hlist, fields]","counters":[{"col_start":65,"col_end":65,"count":1}]},{"line":"","counters":[]},{"line":"    (* TODO: sexp, compare, hash, yojson, hlist and fields seem unused *)","counters":[]},{"line":"  end","counters":[]},{"line":"end]","counters":[]},{"line":"","counters":[]},{"line":"module Label = struct","counters":[]},{"line":"  type t = A | B | C [@@deriving equal]","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"","counters":[]},{"line":"  let all = [ A; B; C ]","counters":[]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":2}]}]}