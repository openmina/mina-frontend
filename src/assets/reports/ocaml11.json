{"filename":"src/lib/transition_frontier/extensions/identity.ml","lines":[{"line":"open Frontier_base","counters":[]},{"line":"","counters":[]},{"line":"(* TODO: refactor out, this is a leak in the abstraction of extensions *)","counters":[]},{"line":"module T = struct","counters":[]},{"line":"  type t = unit","counters":[]},{"line":"","counters":[]},{"line":"  type view = Diff.Full.With_mutant.t list","counters":[]},{"line":"","counters":[]},{"line":"  let create ~logger:_ _ = ((), [])","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"","counters":[]},{"line":"  let handle_diffs () _ diffs_with_mutants : view option =","counters":[]},{"line":"    Some diffs_with_mutants","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"include T","counters":[]},{"line":"module Broadcasted = Functor.Make_broadcasted (T)","counters":[{"col_start":48,"col_end":48,"count":2}]}]}