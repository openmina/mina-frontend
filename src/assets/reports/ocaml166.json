{"filename":"src/lib/mina_base/with_status.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  module V2 = struct","counters":[]},{"line":"    type 'a t = 'a Mina_wire_types.Mina_base.With_status.V2.t =","counters":[{"col_start":4,"col_end":4,"count":8},{"col_start":12,"col_end":12,"count":4}]},{"line":"      { data : 'a; status : Transaction_status.Stable.V2.t }","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":11,"col_end":11,"count":0},{"col_start":15,"col_end":15,"count":0},{"col_start":16,"col_end":16,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":28,"col_end":28,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"    [@@deriving sexp, yojson, equal, compare, fields]","counters":[{"col_start":52,"col_end":52,"count":17}]},{"line":"","counters":[]},{"line":"    let to_latest data_latest (t : _ t) =","counters":[]},{"line":"      { data = data_latest t.data; status = t.status }","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":25,"col_end":25,"count":0}]},{"line":"  end","counters":[]},{"line":"end]","counters":[]},{"line":"","counters":[]},{"line":"let map ~f { data; status } = { data = f data; status }","counters":[{"col_start":30,"col_end":30,"count":0},{"col_start":39,"col_end":39,"count":0}]},{"line":"","counters":[]},{"line":"let map_opt ~f { data; status } =","counters":[]},{"line":"  Option.map (f data) ~f:(fun data -> { data; status })","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":14,"col_end":14,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"","counters":[]},{"line":"let map_result ~f { data; status } =","counters":[]},{"line":"  Result.map (f data) ~f:(fun data -> { data; status })","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":14,"col_end":14,"count":0},{"col_start":38,"col_end":38,"count":0},{"col_start":54,"col_end":54,"count":1}]}]}