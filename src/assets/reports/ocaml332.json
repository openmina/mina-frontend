{"filename":"src/lib/mina_numbers/account_nonce.ml","lines":[{"line":"module T = Nat.Make32 ()","counters":[]},{"line":"","counters":[]},{"line":"(** See documentation of the {!Mina_wire_types} library *)","counters":[]},{"line":"module Wire_types = Mina_wire_types.Mina_numbers.Account_nonce","counters":[]},{"line":"","counters":[]},{"line":"module Make_sig (A : Wire_types.Types.S) = struct","counters":[]},{"line":"  module type S = sig","counters":[]},{"line":"    include Nat.Intf.UInt32_A with type Stable.V1.t = A.V1.t","counters":[]},{"line":"","counters":[]},{"line":"    include Codable.S with type t := t","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Make_str (_ : Wire_types.Concrete) = struct","counters":[]},{"line":"  include T","counters":[]},{"line":"","counters":[]},{"line":"  (* while we could use an int encoding for yojson (an OCaml int is 63-bits)","counters":[]},{"line":"     we've committed to a string encoding","counters":[]},{"line":"  *)","counters":[]},{"line":"  include Codable.Make_of_string (T)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"include Wire_types.Make (Make_sig) (Make_str)","counters":[{"col_start":44,"col_end":44,"count":1}]}]}