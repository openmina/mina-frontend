{"filename":"src/lib/blockchain_snark/blockchain.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Mina_base","counters":[]},{"line":"open Mina_state","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  module V2 = struct","counters":[]},{"line":"    module T = struct","counters":[{"col_start":4,"col_end":4,"count":2}]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { state : Protocol_state.Value.Stable.V2.t; proof : Proof.Stable.V2.t }","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":14,"col_end":14,"count":0},{"col_start":18,"col_end":18,"count":0},{"col_start":49,"col_end":49,"count":0},{"col_start":52,"col_end":52,"count":0},{"col_start":56,"col_end":56,"count":0},{"col_start":60,"col_end":60,"count":0},{"col_start":76,"col_end":76,"count":0}]},{"line":"      [@@deriving fields, sexp, yojson]","counters":[]},{"line":"    end","counters":[{"col_start":6,"col_end":6,"count":5}]},{"line":"","counters":[]},{"line":"    include T","counters":[]},{"line":"","counters":[]},{"line":"    let to_latest = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"    include (","counters":[]},{"line":"      Allocation_functor.Make.Bin_io_and_sexp (struct","counters":[]},{"line":"        let id = \"blockchain_snark\"","counters":[]},{"line":"","counters":[]},{"line":"        include T","counters":[]},{"line":"","counters":[]},{"line":"        type 'a creator = state:Protocol_state.Value.t -> proof:Proof.t -> 'a","counters":[]},{"line":"","counters":[]},{"line":"        let map_creator c ~f ~state ~proof = f (c ~state ~proof)","counters":[{"col_start":45,"col_end":45,"count":0}]},{"line":"","counters":[]},{"line":"        let create ~state ~proof = { state; proof }","counters":[{"col_start":35,"col_end":35,"count":0}]},{"line":"      end) :","counters":[]},{"line":"        Allocation_functor.Intf.Output.Bin_io_and_sexp_intf","counters":[]},{"line":"          with type t := T.t","counters":[]},{"line":"           and type 'a creator :=","counters":[]},{"line":"            state:Protocol_state.Value.t -> proof:Proof.t -> 'a )","counters":[]},{"line":"  end","counters":[]},{"line":"end]","counters":[]},{"line":"","counters":[]},{"line":"include (","counters":[]},{"line":"  Stable.Latest :","counters":[]},{"line":"    sig","counters":[]},{"line":"      type t = Stable.Latest.t [@@deriving sexp, yojson]","counters":[]},{"line":"    end )","counters":[]},{"line":"","counters":[]},{"line":"[%%define_locally Stable.Latest.(create, state, proof)]","counters":[{"col_start":54,"col_end":54,"count":2}]}]}