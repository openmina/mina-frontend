{"filename":"src/lib/transition_frontier/extensions/functor.ml","lines":[{"line":"open Async_kernel","counters":[]},{"line":"open Pipe_lib","counters":[]},{"line":"","counters":[]},{"line":"module Make_broadcasted (Extension : Intf.Extension_base_intf) :","counters":[]},{"line":"  Intf.Broadcasted_extension_intf","counters":[]},{"line":"    with type extension = Extension.t","counters":[]},{"line":"     and type view = Extension.view = struct","counters":[]},{"line":"  type extension = Extension.t","counters":[]},{"line":"","counters":[]},{"line":"  type view = Extension.view","counters":[]},{"line":"","counters":[]},{"line":"  type t =","counters":[]},{"line":"    { extension : Extension.t","counters":[]},{"line":"    ; writer : Extension.view Broadcast_pipe.Writer.t","counters":[]},{"line":"    ; reader : Extension.view Broadcast_pipe.Reader.t","counters":[]},{"line":"    }","counters":[]},{"line":"","counters":[]},{"line":"  let extension { extension; _ } = extension","counters":[{"col_start":35,"col_end":35,"count":0}]},{"line":"","counters":[]},{"line":"  let create (extension, initial_view) =","counters":[]},{"line":"    let open Deferred.Let_syntax in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    let reader, writer = Broadcast_pipe.create initial_view in","counters":[]},{"line":"    let%map () = Broadcast_pipe.Writer.write writer initial_view in","counters":[{"col_start":43,"col_end":43,"count":0}]},{"line":"    { extension; reader; writer }","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"","counters":[]},{"line":"  let close { writer; _ } = Broadcast_pipe.Writer.close writer","counters":[{"col_start":28,"col_end":28,"count":0}]},{"line":"","counters":[]},{"line":"  let peek { reader; _ } = Broadcast_pipe.Reader.peek reader","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"","counters":[]},{"line":"  let reader { reader; _ } = reader","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"","counters":[]},{"line":"  let update { extension; writer; _ } frontier diffs =","counters":[]},{"line":"    match Extension.handle_diffs extension frontier diffs with","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    | Some view ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        Broadcast_pipe.Writer.write writer view","counters":[]},{"line":"    | None ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        Deferred.unit","counters":[]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":2}]}]}