{"filename":"src/lib/pickles/timer.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"let l = ref \"\"","counters":[]},{"line":"","counters":[]},{"line":"let r = ref (Time.now ())","counters":[{"col_start":20,"col_end":20,"count":1}]},{"line":"","counters":[]},{"line":"let start =","counters":[]},{"line":"  Common.when_profiling","counters":[{"col_start":22,"col_end":22,"count":1}]},{"line":"    (fun loc ->","counters":[]},{"line":"      r := Time.now () ;","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":18,"col_end":18,"count":0}]},{"line":"      l := loc )","counters":[]},{"line":"    ignore","counters":[]},{"line":"","counters":[]},{"line":"let clock =","counters":[]},{"line":"  Common.when_profiling","counters":[{"col_start":22,"col_end":22,"count":1}]},{"line":"    (fun loc ->","counters":[]},{"line":"      let t = Time.now () in","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"      printf \"%s -> %s: %s\\n%!\" !l loc","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        (Time.Span.to_string_hum (Time.diff t !r)) ;","counters":[{"col_start":31,"col_end":31,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"      r := t ;","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"      l := loc )","counters":[]},{"line":"    ignore","counters":[{"col_start":9,"col_end":9,"count":2}]}]}