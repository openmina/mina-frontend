{"filename":"src/lib/pickles/limb_vector/make.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Pickles_types","counters":[]},{"line":"","counters":[]},{"line":"module T (Impl : Snarky_backendless.Snark_intf.Run) (N : Vector.Nat_intf) =","counters":[]},{"line":"struct","counters":[]},{"line":"  open Impl","counters":[]},{"line":"","counters":[]},{"line":"  type t = Field.t","counters":[]},{"line":"","counters":[]},{"line":"  let length = 64 * Nat.to_int N.n","counters":[{"col_start":29,"col_end":29,"count":4}]},{"line":"","counters":[]},{"line":"  module Constant = Constant.Make (N)","counters":[]},{"line":"","counters":[]},{"line":"  let typ : (Field.t, Constant.t) Typ.t =","counters":[]},{"line":"    Typ.field","counters":[]},{"line":"    |> Typ.transport","counters":[{"col_start":19,"col_end":19,"count":4}]},{"line":"         ~there:(fun x -> Field.Constant.project (Constant.to_bits x))","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"         ~back:(fun x ->","counters":[]},{"line":"           Constant.of_bits (List.take (Field.Constant.unpack x) length) )","counters":[{"col_start":11,"col_end":11,"count":0},{"col_start":37,"col_end":37,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":2}]}]}