{"filename":"src/coverage/profile_data.rs","lines":[{"line":"use super::util::{cursor_align, get_data, read_int};","counters":[]},{"line":"use std::io::Cursor;","counters":[]},{"line":"","counters":[]},{"line":"// From LLVM's compiler-rt/include/profile/InstrProfData.inc","counters":[]},{"line":"#[derive(Debug)]","counters":[{"col_start":9,"col_end":14,"count":1}]},{"line":"pub struct FunControl {","counters":[]},{"line":"    pub name_hash: u64,","counters":[]},{"line":"    pub func_hash: u64,","counters":[]},{"line":"    pub relative_counter_ptr: u64,","counters":[]},{"line":"    pub function_ptr: u64,","counters":[]},{"line":"    pub values_ptr: u64,","counters":[]},{"line":"    pub num_counters: u32,","counters":[]},{"line":"    pub num_value_sites: u16,","counters":[]},{"line":"}","counters":[]},{"line":"","counters":[]},{"line":"impl FunControl {","counters":[]},{"line":"    pub fn read(cursor: &mut Cursor<&Vec<u8>>) -> Self {","counters":[{"col_start":4,"col_end":56,"count":0}]},{"line":"        Self {","counters":[{"col_start":0,"col_end":14,"count":0}]},{"line":"            name_hash: read_int(cursor),","counters":[{"col_start":0,"col_end":40,"count":0}]},{"line":"            func_hash: read_int(cursor),","counters":[{"col_start":0,"col_end":40,"count":0}]},{"line":"            relative_counter_ptr: read_int(cursor),","counters":[{"col_start":0,"col_end":51,"count":0}]},{"line":"            function_ptr: read_int(cursor),","counters":[{"col_start":0,"col_end":43,"count":0}]},{"line":"            values_ptr: read_int(cursor),","counters":[{"col_start":0,"col_end":41,"count":0}]},{"line":"            num_counters: read_int(cursor),","counters":[{"col_start":0,"col_end":43,"count":0}]},{"line":"            num_value_sites: read_int(cursor),","counters":[{"col_start":0,"col_end":46,"count":0}]},{"line":"        }","counters":[{"col_start":0,"col_end":9,"count":0}]},{"line":"    }","counters":[{"col_start":0,"col_end":5,"count":0}]},{"line":"}","counters":[]},{"line":"","counters":[]},{"line":"#[derive(Debug)]","counters":[{"col_start":9,"col_end":14,"count":0}]},{"line":"pub struct ProfileData(pub Vec<FunControl>);","counters":[]},{"line":"","counters":[]},{"line":"impl ProfileData {","counters":[]},{"line":"    pub fn new() -> Self {","counters":[{"col_start":4,"col_end":26,"count":0}]},{"line":"        let data_buf = unsafe { get_data() }.to_vec();","counters":[{"col_start":0,"col_end":54,"count":0}]},{"line":"        let mut cursor = Cursor::new(&data_buf);","counters":[{"col_start":0,"col_end":48,"count":0}]},{"line":"        let mut output = Vec::new();","counters":[{"col_start":0,"col_end":35,"count":0}]},{"line":"","counters":[]},{"line":"        while (cursor.position() as usize) < data_buf.len() {","counters":[{"col_start":14,"col_end":59,"count":0},{"col_start":60,"col_end":61,"count":0}]},{"line":"            output.push(FunControl::read(&mut cursor));","counters":[{"col_start":0,"col_end":55,"count":0}]},{"line":"            cursor_align::<u64>(&mut cursor);","counters":[{"col_start":0,"col_end":45,"count":0}]},{"line":"        }","counters":[{"col_start":0,"col_end":9,"count":0}]},{"line":"","counters":[]},{"line":"        Self(output)","counters":[{"col_start":8,"col_end":20,"count":0}]},{"line":"    }","counters":[{"col_start":0,"col_end":5,"count":0}]},{"line":"}","counters":[]}]}