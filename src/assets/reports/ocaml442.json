{"filename":"src/lib/allocation_functor/make.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"module Partial = struct","counters":[]},{"line":"  module Bin_io (M : Intf.Input.Bin_io_intf) :","counters":[]},{"line":"    Intf.Partial.Bin_io_intf with type t := M.t = struct","counters":[]},{"line":"    open Bin_prot.Type_class","counters":[]},{"line":"","counters":[]},{"line":"    let bin_size_t = M.bin_size_t","counters":[]},{"line":"","counters":[]},{"line":"    let bin_write_t = M.bin_write_t","counters":[]},{"line":"","counters":[]},{"line":"    let bin_read_t buf ~pos_ref =","counters":[]},{"line":"      Table.attach_finalizer M.id (M.bin_read_t buf ~pos_ref)","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":46,"col_end":46,"count":2}]},{"line":"","counters":[]},{"line":"    let __bin_read_t__ buf ~pos_ref i =","counters":[]},{"line":"      Table.attach_finalizer M.id (M.__bin_read_t__ buf ~pos_ref i)","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"","counters":[]},{"line":"    let bin_shape_t = M.bin_shape_t","counters":[]},{"line":"","counters":[]},{"line":"    let bin_writer_t = M.bin_writer_t","counters":[]},{"line":"","counters":[]},{"line":"    let bin_reader_t = { read = bin_read_t; vtag_read = __bin_read_t__ }","counters":[]},{"line":"","counters":[]},{"line":"    let bin_t =","counters":[]},{"line":"      { shape = bin_shape_t; writer = bin_writer_t; reader = bin_reader_t }","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Sexp (M : Intf.Input.Sexp_intf) :","counters":[]},{"line":"    Intf.Partial.Sexp_intf with type t := M.t = struct","counters":[]},{"line":"    let sexp_of_t = M.sexp_of_t","counters":[]},{"line":"","counters":[]},{"line":"    let t_of_sexp t = Table.attach_finalizer M.id (M.t_of_sexp t)","counters":[{"col_start":22,"col_end":22,"count":0},{"col_start":61,"col_end":61,"count":0}]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Yojson (M : Intf.Input.Yojson_intf) :","counters":[]},{"line":"    Intf.Partial.Yojson_intf with type t := M.t = struct","counters":[]},{"line":"    let to_yojson = M.to_yojson","counters":[]},{"line":"","counters":[]},{"line":"    let of_yojson json =","counters":[]},{"line":"      M.of_yojson json |> Result.map ~f:(Table.attach_finalizer M.id)","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":16,"col_end":16,"count":0},{"col_start":62,"col_end":62,"count":0}]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Basic (M : Intf.Input.Basic_intf) :","counters":[]},{"line":"  Intf.Output.Basic_intf with type t = M.t and type 'a creator := 'a M.creator =","counters":[]},{"line":"struct","counters":[]},{"line":"  type t = M.t","counters":[]},{"line":"","counters":[]},{"line":"  let create = M.map_creator M.create ~f:(Table.attach_finalizer M.id)","counters":[{"col_start":27,"col_end":27,"count":10},{"col_start":63,"col_end":63,"count":10}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Bin_io (M : Intf.Input.Bin_io_intf) :","counters":[]},{"line":"  Intf.Output.Bin_io_intf with type t = M.t and type 'a creator := 'a M.creator =","counters":[]},{"line":"struct","counters":[]},{"line":"  include Basic (M)","counters":[]},{"line":"  include Partial.Bin_io (M)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Sexp (M : Intf.Input.Sexp_intf) :","counters":[]},{"line":"  Intf.Output.Sexp_intf with type t = M.t and type 'a creator := 'a M.creator =","counters":[]},{"line":"struct","counters":[]},{"line":"  include Basic (M)","counters":[]},{"line":"  include Partial.Sexp (M)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Bin_io_and_sexp (M : Intf.Input.Bin_io_and_sexp_intf) :","counters":[]},{"line":"  Intf.Output.Bin_io_and_sexp_intf","counters":[]},{"line":"    with type t = M.t","counters":[]},{"line":"     and type 'a creator := 'a M.creator = struct","counters":[]},{"line":"  include Basic (M)","counters":[]},{"line":"  include Partial.Bin_io (M)","counters":[]},{"line":"  include Partial.Sexp (M)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Yojson (M : Intf.Input.Yojson_intf) :","counters":[]},{"line":"  Intf.Output.Yojson_intf with type t = M.t and type 'a creator := 'a M.creator =","counters":[]},{"line":"struct","counters":[]},{"line":"  include Basic (M)","counters":[]},{"line":"  include Partial.Yojson (M)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Bin_io_and_yojson (M : Intf.Input.Bin_io_and_yojson_intf) :","counters":[]},{"line":"  Intf.Output.Bin_io_and_yojson_intf","counters":[]},{"line":"    with type t = M.t","counters":[]},{"line":"     and type 'a creator := 'a M.creator = struct","counters":[]},{"line":"  include Basic (M)","counters":[]},{"line":"  include Partial.Bin_io (M)","counters":[]},{"line":"  include Partial.Yojson (M)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Full (M : Intf.Input.Full_intf) :","counters":[]},{"line":"  Intf.Output.Full_intf with type t = M.t and type 'a creator := 'a M.creator =","counters":[]},{"line":"struct","counters":[]},{"line":"  include Basic (M)","counters":[]},{"line":"  include Partial.Bin_io (M)","counters":[]},{"line":"  include Partial.Sexp (M)","counters":[]},{"line":"  include Partial.Yojson (M)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Versioned_v1 = struct","counters":[]},{"line":"  module Basic_intf (M : Intf.Input.Versioned_v1.Basic_intf) : sig","counters":[]},{"line":"    include","counters":[]},{"line":"      Intf.Output.Versioned_v1.Basic_intf","counters":[]},{"line":"        with type Stable.V1.t = M.Stable.V1.t","counters":[]},{"line":"         and type 'a Stable.V1.creator = 'a M.Stable.V1.creator","counters":[]},{"line":"  end = struct","counters":[]},{"line":"    module Stable = struct","counters":[]},{"line":"      module V1 = struct","counters":[]},{"line":"        include Bin_io (struct","counters":[]},{"line":"          let id = M.id","counters":[]},{"line":"","counters":[]},{"line":"          include M.Stable.V1","counters":[]},{"line":"        end)","counters":[]},{"line":"","counters":[]},{"line":"        let __versioned__ = ()","counters":[]},{"line":"","counters":[]},{"line":"        type 'a creator = 'a M.Stable.V1.creator","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest = V1","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    type t = Stable.V1.t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Sexp (M : Intf.Input.Versioned_v1.Sexp_intf) : sig","counters":[]},{"line":"    include","counters":[]},{"line":"      Intf.Output.Versioned_v1.Sexp_intf","counters":[]},{"line":"        with type Stable.V1.t = M.Stable.V1.t","counters":[]},{"line":"         and type 'a Stable.V1.creator = 'a M.Stable.V1.creator","counters":[]},{"line":"  end = struct","counters":[]},{"line":"    module Stable = struct","counters":[]},{"line":"      module V1 = struct","counters":[]},{"line":"        include Bin_io_and_sexp (struct","counters":[]},{"line":"          let id = M.id","counters":[]},{"line":"","counters":[]},{"line":"          include M.Stable.V1","counters":[]},{"line":"        end)","counters":[]},{"line":"","counters":[]},{"line":"        let __versioned__ = ()","counters":[]},{"line":"","counters":[]},{"line":"        type 'a creator = 'a M.Stable.V1.creator","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest = V1","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    type t = Stable.V1.t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Yojson (M : Intf.Input.Versioned_v1.Yojson_intf) : sig","counters":[]},{"line":"    include","counters":[]},{"line":"      Intf.Output.Versioned_v1.Yojson_intf","counters":[]},{"line":"        with type Stable.V1.t = M.Stable.V1.t","counters":[]},{"line":"         and type 'a Stable.V1.creator = 'a M.Stable.V1.creator","counters":[]},{"line":"  end = struct","counters":[]},{"line":"    module Stable = struct","counters":[]},{"line":"      module V1 = struct","counters":[]},{"line":"        include Bin_io_and_yojson (struct","counters":[]},{"line":"          let id = M.id","counters":[]},{"line":"","counters":[]},{"line":"          include M.Stable.V1","counters":[]},{"line":"        end)","counters":[]},{"line":"","counters":[]},{"line":"        let __versioned__ = ()","counters":[]},{"line":"","counters":[]},{"line":"        type 'a creator = 'a M.Stable.V1.creator","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest = V1","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    type t = Stable.V1.t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Full_compare_eq_hash","counters":[]},{"line":"      (M : Intf.Input.Versioned_v1.Full_compare_eq_hash_intf) : sig","counters":[]},{"line":"    include","counters":[]},{"line":"      Intf.Output.Versioned_v1.Full_compare_eq_hash_intf","counters":[]},{"line":"        with type Stable.V1.t = M.Stable.V1.t","counters":[]},{"line":"         and type 'a Stable.V1.creator = 'a M.Stable.V1.creator","counters":[]},{"line":"  end = struct","counters":[]},{"line":"    module Stable = struct","counters":[]},{"line":"      module V1 = struct","counters":[]},{"line":"        include Full (struct","counters":[]},{"line":"          let id = M.id","counters":[]},{"line":"","counters":[]},{"line":"          include M.Stable.V1","counters":[]},{"line":"        end)","counters":[]},{"line":"","counters":[]},{"line":"        let compare = M.Stable.V1.compare","counters":[]},{"line":"","counters":[]},{"line":"        let equal = M.Stable.V1.equal","counters":[]},{"line":"","counters":[]},{"line":"        let hash = M.Stable.V1.hash","counters":[]},{"line":"","counters":[]},{"line":"        let hash_fold_t = M.Stable.V1.hash_fold_t","counters":[]},{"line":"","counters":[]},{"line":"        let __versioned__ = ()","counters":[]},{"line":"","counters":[]},{"line":"        type 'a creator = 'a M.Stable.V1.creator","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest = V1","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    type t = Stable.V1.t","counters":[]},{"line":"","counters":[]},{"line":"    let equal = M.equal","counters":[]},{"line":"","counters":[]},{"line":"    let compare = M.compare","counters":[]},{"line":"","counters":[]},{"line":"    let hash = M.hash","counters":[]},{"line":"","counters":[]},{"line":"    let hash_fold_t = M.hash_fold_t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Full (M : Intf.Input.Versioned_v1.Full_intf) : sig","counters":[]},{"line":"    include","counters":[]},{"line":"      Intf.Output.Versioned_v1.Full_intf","counters":[]},{"line":"        with type Stable.V1.t = M.Stable.V1.t","counters":[]},{"line":"         and type 'a Stable.V1.creator = 'a M.Stable.V1.creator","counters":[]},{"line":"  end = struct","counters":[]},{"line":"    module Stable = struct","counters":[]},{"line":"      module V1 = struct","counters":[]},{"line":"        include Full (struct","counters":[]},{"line":"          let id = M.id","counters":[]},{"line":"","counters":[]},{"line":"          include M.Stable.V1","counters":[]},{"line":"        end)","counters":[]},{"line":"","counters":[]},{"line":"        let __versioned__ = ()","counters":[]},{"line":"","counters":[]},{"line":"        type 'a creator = 'a M.Stable.V1.creator","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest = V1","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    type t = Stable.V1.t","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Versioned_v2 = struct","counters":[]},{"line":"  module Sexp (M : Intf.Input.Versioned_v2.Sexp_intf) : sig","counters":[]},{"line":"    include","counters":[]},{"line":"      Intf.Output.Versioned_v2.Sexp_intf","counters":[]},{"line":"        with type Stable.V2.t = M.Stable.V2.t","counters":[]},{"line":"         and type 'a Stable.V2.creator = 'a M.Stable.V2.creator","counters":[]},{"line":"         and type Stable.V1.t = M.Stable.V1.t","counters":[]},{"line":"         and type 'a Stable.V1.creator = 'a M.Stable.V1.creator","counters":[]},{"line":"  end = struct","counters":[]},{"line":"    module Stable = struct","counters":[]},{"line":"      module V2 = struct","counters":[]},{"line":"        include Bin_io_and_sexp (struct","counters":[]},{"line":"          let id = M.id","counters":[]},{"line":"","counters":[]},{"line":"          include M.Stable.V2","counters":[]},{"line":"        end)","counters":[]},{"line":"","counters":[]},{"line":"        let __versioned__ = ()","counters":[]},{"line":"","counters":[]},{"line":"        type 'a creator = 'a M.Stable.V2.creator","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module V1 = struct","counters":[]},{"line":"        include Bin_io_and_sexp (struct","counters":[]},{"line":"          let id = M.id","counters":[]},{"line":"","counters":[]},{"line":"          include M.Stable.V1","counters":[]},{"line":"        end)","counters":[]},{"line":"","counters":[]},{"line":"        let __versioned__ = ()","counters":[]},{"line":"","counters":[]},{"line":"        type 'a creator = 'a M.Stable.V1.creator","counters":[]},{"line":"","counters":[]},{"line":"        let to_latest = M.Stable.V1.to_latest","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest = V2","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    type t = Stable.V2.t","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":2}]}]}