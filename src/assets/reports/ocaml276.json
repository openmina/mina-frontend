{"filename":"src/lib/mina_wire_types/consensus/consensus_global_slot.ml","lines":[{"line":"open Utils","counters":[]},{"line":"","counters":[]},{"line":"module Types = struct","counters":[]},{"line":"  module type S = sig","counters":[]},{"line":"    module Poly : sig","counters":[]},{"line":"      module V1 : sig","counters":[]},{"line":"        type ('slot_number, 'slots_per_epoch) t","counters":[]},{"line":"      end","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    module V1 : sig","counters":[]},{"line":"      type t =","counters":[]},{"line":"        (Mina_numbers.Global_slot.V1.t, Mina_numbers.Length.V1.t) Poly.V1.t","counters":[]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module type Concrete = sig","counters":[]},{"line":"  module Poly : sig","counters":[]},{"line":"    module V1 : sig","counters":[]},{"line":"      type ('slot_number, 'slots_per_epoch) t =","counters":[]},{"line":"        { slot_number : 'slot_number; slots_per_epoch : 'slots_per_epoch }","counters":[]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module V1 : sig","counters":[]},{"line":"    type t = (Mina_numbers.Global_slot.V1.t, Mina_numbers.Length.V1.t) Poly.V1.t","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module M = struct","counters":[]},{"line":"  module Poly = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type ('slot_number, 'slots_per_epoch) t =","counters":[]},{"line":"        { slot_number : 'slot_number; slots_per_epoch : 'slots_per_epoch }","counters":[]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module V1 = struct","counters":[]},{"line":"    type t = (Mina_numbers.Global_slot.V1.t, Mina_numbers.Length.V1.t) Poly.V1.t","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module type Local_sig = Signature(Types).S","counters":[]},{"line":"","counters":[]},{"line":"module Make","counters":[]},{"line":"    (Signature : Local_sig) (F : functor (A : Concrete) -> Signature(A).S) =","counters":[]},{"line":"  F (M)","counters":[]},{"line":"include M","counters":[]}]}