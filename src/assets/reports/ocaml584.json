{"filename":"src/lib/signature_lib/unix/graphql_scalars.ml","lines":[{"line":"open Graphql_basic_scalars.Utils","counters":[]},{"line":"open Graphql_basic_scalars.Testing","counters":[]},{"line":"","counters":[]},{"line":"module Make (Schema : Schema) = struct","counters":[]},{"line":"  module type Json_intf =","counters":[]},{"line":"    Json_intf_any_typ with type ('a, 'b) typ := ('a, 'b) Schema.typ","counters":[]},{"line":"","counters":[]},{"line":"  module PublicKey :","counters":[]},{"line":"    Json_intf with type t = Signature_lib.Public_key.Compressed.t = struct","counters":[]},{"line":"    type t = Signature_lib.Public_key.Compressed.t","counters":[]},{"line":"","counters":[]},{"line":"    let parse json =","counters":[]},{"line":"      Yojson.Basic.Util.to_string json","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":32,"col_end":32,"count":0}]},{"line":"      |> Signature_lib.Public_key.of_base58_check_decompress_exn","counters":[]},{"line":"","counters":[]},{"line":"    let serialize key =","counters":[]},{"line":"      `String (Signature_lib.Public_key.Compressed.to_base58_check key)","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"","counters":[]},{"line":"    let typ () =","counters":[]},{"line":"      Schema.scalar \"PublicKey\" ~doc:\"Base58Check-encoded public key string\"","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        ~coerce:serialize","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"include Make (Schema)","counters":[]},{"line":"","counters":[]},{"line":"let%test_module \"Roundtrip tests\" =","counters":[]},{"line":"  ( module struct","counters":[]},{"line":"    include Make (Test_schema)","counters":[]},{"line":"","counters":[]},{"line":"    let%test_module \"PublicKey\" =","counters":[]},{"line":"      (module Make_test (PublicKey) (Signature_lib.Public_key.Compressed))","counters":[]},{"line":"  end )","counters":[{"col_start":6,"col_end":6,"count":2}]}]}