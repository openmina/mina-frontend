{"filename":"src/lib/mina_wire_types/mina_block/mina_block_header.ml","lines":[{"line":"open Utils","counters":[]},{"line":"","counters":[]},{"line":"module Types = struct","counters":[]},{"line":"  module type S = sig","counters":[]},{"line":"    module V2 : S0","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module type Concrete = sig","counters":[]},{"line":"  module V2 : sig","counters":[]},{"line":"    type t =","counters":[]},{"line":"      { protocol_state : Mina_state_protocol_state.Value.V2.t","counters":[]},{"line":"      ; protocol_state_proof : Mina_base.Proof.V2.t","counters":[]},{"line":"      ; delta_block_chain_proof :","counters":[]},{"line":"          Data_hash_lib.State_hash.V1.t * Mina_base_state_body_hash.V1.t list","counters":[]},{"line":"      ; current_protocol_version : Protocol_version.V1.t","counters":[]},{"line":"      ; proposed_protocol_version_opt : Protocol_version.V1.t option","counters":[]},{"line":"      }","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module M = struct","counters":[]},{"line":"  module V2 = struct","counters":[]},{"line":"    type t =","counters":[]},{"line":"      { protocol_state : Mina_state_protocol_state.Value.V2.t","counters":[]},{"line":"      ; protocol_state_proof : Mina_base.Proof.V2.t","counters":[]},{"line":"      ; delta_block_chain_proof :","counters":[]},{"line":"          Data_hash_lib.State_hash.V1.t * Mina_base_state_body_hash.V1.t list","counters":[]},{"line":"      ; current_protocol_version : Protocol_version.V1.t","counters":[]},{"line":"      ; proposed_protocol_version_opt : Protocol_version.V1.t option","counters":[]},{"line":"      }","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module type Local_sig = Signature(Types).S","counters":[]},{"line":"","counters":[]},{"line":"module Make","counters":[]},{"line":"    (Signature : Local_sig) (F : functor (A : Concrete) -> Signature(A).S) =","counters":[]},{"line":"  F (M)","counters":[]},{"line":"include M","counters":[]}]}