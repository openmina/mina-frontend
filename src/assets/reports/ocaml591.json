{"filename":"src/lib/pickles_types/hlist0.ml","lines":[{"line":"module Length = struct","counters":[]},{"line":"  type (_, _) t =","counters":[]},{"line":"    | Z : (unit, Nat.z) t","counters":[]},{"line":"    | S : ('tail, 'n) t -> ('a * 'tail, 'n Nat.s) t","counters":[]},{"line":"","counters":[]},{"line":"  let rec to_nat : type xs n. (xs, n) t -> n Nat.t = function","counters":[]},{"line":"    | Z ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        Z","counters":[]},{"line":"    | S n ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        S (to_nat n)","counters":[{"col_start":16,"col_end":16,"count":0}]},{"line":"","counters":[]},{"line":"  type 'xs n = T : 'n Nat.t * ('xs, 'n) t -> 'xs n","counters":[]},{"line":"","counters":[]},{"line":"  let rec contr :","counters":[]},{"line":"      type xs n m. (xs, n) t -> (xs, m) t -> (n, m) Core_kernel.Type_equal.t =","counters":[]},{"line":"   fun t1 t2 ->","counters":[]},{"line":"    match (t1, t2) with","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    | Z, Z ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        T","counters":[]},{"line":"    | S n, S m ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        let T = contr n m in","counters":[]},{"line":"        T","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module H1 (F : Poly_types.T1) = struct","counters":[]},{"line":"  type _ t = [] : unit t | ( :: ) : 'a F.t * 'b t -> ('a * 'b) t","counters":[]},{"line":"","counters":[]},{"line":"  let rec length : type tail1. tail1 t -> tail1 Length.n = function","counters":[]},{"line":"    | [] ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        T (Z, Z)","counters":[]},{"line":"    | _ :: xs ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        let (T (n, p)) = length xs in","counters":[]},{"line":"        T (S n, S p)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module H1_1 (F : Poly_types.T2) = struct","counters":[]},{"line":"  type (_, 's) t =","counters":[]},{"line":"    | [] : (unit, _) t","counters":[]},{"line":"    | ( :: ) : ('a, 's) F.t * ('b, 's) t -> ('a * 'b, 's) t","counters":[]},{"line":"","counters":[]},{"line":"  let rec length : type tail1 tail2. (tail1, tail2) t -> tail1 Length.n =","counters":[]},{"line":"    function","counters":[]},{"line":"    | [] ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        T (Z, Z)","counters":[]},{"line":"    | _ :: xs ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        let (T (n, p)) = length xs in","counters":[]},{"line":"        T (S n, S p)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Id = struct","counters":[]},{"line":"  type 'a t = 'a","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module HlistId = H1 (Id)","counters":[{"col_start":23,"col_end":23,"count":2}]}]}