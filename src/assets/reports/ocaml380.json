{"filename":"src/lib/o1trace/execution_timer.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"module T =","counters":[]},{"line":"  Plugins.Register_plugin","counters":[]},{"line":"    (struct","counters":[]},{"line":"      type state = Time_ns.Span.t ref [@@deriving sexp_of]","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"","counters":[]},{"line":"      let name = \"Execution_timer\"","counters":[]},{"line":"","counters":[]},{"line":"      let init_state _thread_name = ref Time_ns.Span.zero","counters":[{"col_start":36,"col_end":36,"count":0}]},{"line":"    end)","counters":[]},{"line":"    ()","counters":[]},{"line":"","counters":[]},{"line":"include T","counters":[]},{"line":"","counters":[]},{"line":"let rec record_elapsed_time (fiber : Thread.Fiber.t) elapsed_time =","counters":[]},{"line":"  let state = Plugins.plugin_state (module T) fiber.thread in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  (state := Time_ns.Span.(!state + elapsed_time)) ;","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  match fiber.parent with","counters":[]},{"line":"  | None ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      ()","counters":[]},{"line":"  | Some parent ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      record_elapsed_time parent elapsed_time","counters":[]},{"line":"","counters":[]},{"line":"let on_job_enter _fiber = ()","counters":[{"col_start":26,"col_end":26,"count":0}]},{"line":"","counters":[]},{"line":"let on_job_exit fiber elapsed_time = record_elapsed_time fiber elapsed_time","counters":[{"col_start":37,"col_end":37,"count":0}]},{"line":"","counters":[]},{"line":"let elapsed_time_of_thread thread = !(Plugins.plugin_state (module T) thread)","counters":[{"col_start":36,"col_end":36,"count":0},{"col_start":57,"col_end":57,"count":0},{"col_start":76,"col_end":76,"count":2}]}]}