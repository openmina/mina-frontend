{"filename":"src/lib/mina_wire_types/mina_base/mina_base_account_id.ml","lines":[{"line":"[%%import \"/src/config.mlh\"]","counters":[]},{"line":"","counters":[]},{"line":"open Utils","counters":[]},{"line":"","counters":[]},{"line":"module Types = struct","counters":[]},{"line":"  module type S = sig","counters":[]},{"line":"    module Digest : V1S0","counters":[]},{"line":"","counters":[]},{"line":"    include V2S0","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"[%%ifdef consensus_mechanism]","counters":[]},{"line":"","counters":[]},{"line":"module type Concrete =","counters":[]},{"line":"  Types.S","counters":[]},{"line":"    with type Digest.V1.t = Pickles.Backend.Tick.Field.V1.t","counters":[]},{"line":"     and type V2.t =","counters":[]},{"line":"      Public_key.Compressed.V1.t * Pickles.Backend.Tick.Field.V1.t","counters":[]},{"line":"","counters":[]},{"line":"[%%else]","counters":[]},{"line":"","counters":[]},{"line":"module type Concrete =","counters":[]},{"line":"  Types.S","counters":[]},{"line":"    with type Digest.V1.t = Snark_params.Tick.Field.t","counters":[]},{"line":"     and type V2.t = Public_key.Compressed.V1.t * Snark_params.Tick.Field.V1.t","counters":[]},{"line":"","counters":[]},{"line":"[%%endif]","counters":[]},{"line":"","counters":[]},{"line":"module M = struct","counters":[]},{"line":"  [%%ifdef consensus_mechanism]","counters":[]},{"line":"","counters":[]},{"line":"  module Digest = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type t = Pickles.Backend.Tick.Field.V1.t","counters":[]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module V2 = struct","counters":[]},{"line":"    type t = Public_key.Compressed.V1.t * Pickles.Backend.Tick.Field.V1.t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  [%%else]","counters":[]},{"line":"","counters":[]},{"line":"  module Digest = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type t = Snark_params.Tick.Field.t","counters":[]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module V2 = struct","counters":[]},{"line":"    type t = Public_key.Compressed.V1.t * Snark_params.Tick.Field.V1.t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  [%%endif]","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module type Local_sig = Signature(Types).S","counters":[]},{"line":"","counters":[]},{"line":"module Make","counters":[]},{"line":"    (Signature : Local_sig) (F : functor (A : Concrete) -> Signature(A).S) =","counters":[]},{"line":"  F (M)","counters":[]},{"line":"include M","counters":[]}]}