{"filename":"src/lib/mina_base/epoch_ledger.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Currency","counters":[]},{"line":"open Snark_params.Tick","counters":[]},{"line":"","counters":[]},{"line":"module Poly = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type ('ledger_hash, 'amount) t =","counters":[{"col_start":6,"col_end":6,"count":3},{"col_start":35,"col_end":35,"count":5}]},{"line":"            ( 'ledger_hash","counters":[]},{"line":"            , 'amount )","counters":[]},{"line":"            Mina_wire_types.Mina_base.Epoch_ledger.Poly.V1.t =","counters":[]},{"line":"        { hash : 'ledger_hash; total_currency : 'amount }","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":13,"col_end":13,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":28,"col_end":28,"count":0},{"col_start":31,"col_end":31,"count":0},{"col_start":44,"col_end":44,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"      [@@deriving annot, sexp, equal, compare, hash, yojson, hlist, fields]","counters":[{"col_start":74,"col_end":74,"count":7}]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Value = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":1}]},{"line":"        (Frozen_ledger_hash0.Stable.V1.t, Amount.Stable.V1.t) Poly.Stable.V1.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":9,"col_end":9,"count":0},{"col_start":42,"col_end":42,"count":0},{"col_start":62,"col_end":62,"count":0}]},{"line":"      [@@deriving sexp, equal, compare, hash, yojson]","counters":[{"col_start":52,"col_end":52,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"let to_input ({ hash; total_currency } : Value.t) =","counters":[]},{"line":"  Random_oracle_input.Chunked.(","counters":[{"col_start":2,"col_end":2,"count":10}]},{"line":"    append (field (hash :> Field.t)) (Amount.to_input total_currency))","counters":[{"col_start":16,"col_end":16,"count":10},{"col_start":52,"col_end":52,"count":10}]},{"line":"","counters":[]},{"line":"type var = (Frozen_ledger_hash0.var, Amount.var) Poly.t","counters":[]},{"line":"","counters":[]},{"line":"let typ : (var, Value.t) Typ.t =","counters":[]},{"line":"  Typ.of_hlistable","counters":[{"col_start":17,"col_end":17,"count":1}]},{"line":"    [ Frozen_ledger_hash0.typ; Amount.typ ]","counters":[]},{"line":"    ~var_to_hlist:Poly.to_hlist ~var_of_hlist:Poly.of_hlist","counters":[]},{"line":"    ~value_to_hlist:Poly.to_hlist ~value_of_hlist:Poly.of_hlist","counters":[]},{"line":"","counters":[]},{"line":"let var_to_input ({ Poly.hash; total_currency } : var) =","counters":[]},{"line":"  let total_currency = Amount.var_to_input total_currency in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  Random_oracle_input.Chunked.(","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    append (field (Frozen_ledger_hash0.var_to_hash_packed hash)) total_currency)","counters":[{"col_start":16,"col_end":16,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"","counters":[]},{"line":"let if_ cond ~(then_ : (Frozen_ledger_hash0.var, Amount.var) Poly.t)","counters":[]},{"line":"    ~(else_ : (Frozen_ledger_hash0.var, Amount.var) Poly.t) =","counters":[]},{"line":"  let open Checked.Let_syntax in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  let%map hash =","counters":[]},{"line":"    Frozen_ledger_hash0.if_ cond ~then_:then_.hash ~else_:else_.hash","counters":[{"col_start":26,"col_end":26,"count":0}]},{"line":"  and total_currency =","counters":[]},{"line":"    Amount.Checked.if_ cond ~then_:then_.total_currency","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"      ~else_:else_.total_currency","counters":[]},{"line":"  in","counters":[]},{"line":"  { Poly.hash; total_currency }","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":30,"col_end":30,"count":1}]}]}