{"filename":"src/lib/transition_frontier/frontier_base/root_data.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Mina_base","counters":[]},{"line":"open Mina_block","counters":[]},{"line":"","counters":[]},{"line":"module Common = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V2 = struct","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { scan_state : Staged_ledger.Scan_state.Stable.V2.t","counters":[]},{"line":"        ; pending_coinbase : Pending_coinbase.Stable.V2.t","counters":[]},{"line":"        }","counters":[{"col_start":8,"col_end":8,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"      let to_yojson { scan_state = _; pending_coinbase } =","counters":[]},{"line":"        `Assoc","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"          [ (\"scan_state\", `String \"<opaque>\")","counters":[]},{"line":"          ; ( \"pending_coinbase\"","counters":[]},{"line":"            , Pending_coinbase.Stable.V2.to_yojson pending_coinbase )","counters":[{"col_start":49,"col_end":49,"count":0}]},{"line":"          ]","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"","counters":[]},{"line":"  let create ~scan_state ~pending_coinbase = { scan_state; pending_coinbase }","counters":[{"col_start":45,"col_end":45,"count":0}]},{"line":"","counters":[]},{"line":"  let scan_state t = t.scan_state","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"","counters":[]},{"line":"  let pending_coinbase t = t.pending_coinbase","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Historical = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V3 = struct","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { transition : Mina_block.Validated.Stable.V2.t","counters":[]},{"line":"        ; common : Common.Stable.V2.t","counters":[]},{"line":"        ; staged_ledger_target_ledger_hash : Ledger_hash.Stable.V1.t","counters":[]},{"line":"        }","counters":[{"col_start":8,"col_end":8,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"","counters":[]},{"line":"  let transition t = t.transition","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"","counters":[]},{"line":"  let staged_ledger_target_ledger_hash t = t.staged_ledger_target_ledger_hash","counters":[{"col_start":43,"col_end":43,"count":0}]},{"line":"","counters":[]},{"line":"  let scan_state t = Common.scan_state t.common","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"","counters":[]},{"line":"  let pending_coinbase t = Common.pending_coinbase t.common","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"","counters":[]},{"line":"  let of_breadcrumb breadcrumb =","counters":[]},{"line":"    let transition = Breadcrumb.validated_transition breadcrumb in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    let staged_ledger = Breadcrumb.staged_ledger breadcrumb in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    let scan_state = Staged_ledger.scan_state staged_ledger in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    let pending_coinbase =","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Staged_ledger.pending_coinbase_collection staged_ledger","counters":[]},{"line":"    in","counters":[]},{"line":"    let staged_ledger_target_ledger_hash =","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Staged_ledger.hash staged_ledger |> Staged_ledger_hash.ledger_hash","counters":[{"col_start":23,"col_end":23,"count":0}]},{"line":"    in","counters":[]},{"line":"    let common = Common.create ~scan_state ~pending_coinbase in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    { transition; common; staged_ledger_target_ledger_hash }","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Limited = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V3 = struct","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { transition : Mina_block.Validated.Stable.V2.t","counters":[]},{"line":"        ; protocol_states :","counters":[]},{"line":"            Mina_state.Protocol_state.Value.Stable.V2.t","counters":[]},{"line":"            Mina_base.State_hash.With_state_hashes.Stable.V1.t","counters":[]},{"line":"            list","counters":[]},{"line":"        ; common : Common.Stable.V2.t","counters":[]},{"line":"        }","counters":[{"col_start":8,"col_end":8,"count":5}]},{"line":"","counters":[]},{"line":"      let to_yojson { transition; protocol_states = _; common } =","counters":[]},{"line":"        `Assoc","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"          [ (\"transition\", Mina_block.Validated.Stable.V2.to_yojson transition)","counters":[{"col_start":66,"col_end":66,"count":0}]},{"line":"          ; (\"protocol_states\", `String \"<opaque>\")","counters":[]},{"line":"          ; (\"common\", Common.Stable.V2.to_yojson common)","counters":[{"col_start":48,"col_end":48,"count":0}]},{"line":"          ]","counters":[]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"","counters":[]},{"line":"  [%%define_locally Stable.Latest.(to_yojson)]","counters":[]},{"line":"","counters":[]},{"line":"  let create ~transition ~scan_state ~pending_coinbase ~protocol_states =","counters":[]},{"line":"    let common = { Common.scan_state; pending_coinbase } in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    { transition; common; protocol_states }","counters":[]},{"line":"","counters":[]},{"line":"  let transition t = t.transition","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"","counters":[]},{"line":"  let hashes t = With_hash.hash @@ Mina_block.Validated.forget t.transition","counters":[{"col_start":17,"col_end":17,"count":0},{"col_start":61,"col_end":61,"count":0}]},{"line":"","counters":[]},{"line":"  let protocol_states t = t.protocol_states","counters":[{"col_start":26,"col_end":26,"count":0}]},{"line":"","counters":[]},{"line":"  let scan_state t = Common.scan_state t.common","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"","counters":[]},{"line":"  let pending_coinbase t = Common.pending_coinbase t.common","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Minimal = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    [@@@no_toplevel_latest_type]","counters":[]},{"line":"","counters":[]},{"line":"    module V2 = struct","counters":[]},{"line":"      type t = { hash : State_hash.Stable.V1.t; common : Common.Stable.V2.t }","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"      [@@driving to_yojson]","counters":[{"col_start":26,"col_end":26,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"","counters":[]},{"line":"  type t = Stable.Latest.t = { hash : State_hash.t; common : Common.t }","counters":[]},{"line":"  [@@driving to_yojson]","counters":[]},{"line":"","counters":[]},{"line":"  let hash t = t.hash","counters":[{"col_start":15,"col_end":15,"count":0}]},{"line":"","counters":[]},{"line":"  let of_limited (l : Limited.t) =","counters":[]},{"line":"    let hash = Mina_block.Validated.state_hash l.transition in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    { hash; common = l.common }","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"","counters":[]},{"line":"  let upgrade t ~transition ~protocol_states =","counters":[]},{"line":"    let hash = hash t in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    assert (State_hash.equal (Mina_block.Validated.state_hash transition) hash) ;","counters":[{"col_start":4,"col_end":4,"count":0},{"col_start":11,"col_end":11,"count":0},{"col_start":27,"col_end":27,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"    let protocol_states =","counters":[]},{"line":"      List.map protocol_states ~f:(fun (state_hash, s) ->","counters":[]},{"line":"          { With_hash.data = s","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          ; hash =","counters":[]},{"line":"              { Mina_base.State_hash.State_hashes.state_hash","counters":[]},{"line":"              ; state_body_hash = None","counters":[]},{"line":"              }","counters":[]},{"line":"          } )","counters":[]},{"line":"    in","counters":[]},{"line":"    ignore","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      ( Staged_ledger.Scan_state.check_required_protocol_states","counters":[{"col_start":62,"col_end":62,"count":0}]},{"line":"          t.common.scan_state ~protocol_states","counters":[]},{"line":"        |> Or_error.ok_exn","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"        : Mina_state.Protocol_state.value State_hash.With_state_hashes.t list ) ;","counters":[]},{"line":"    { Limited.transition; protocol_states; common = t.common }","counters":[]},{"line":"","counters":[]},{"line":"  let create ~hash ~scan_state ~pending_coinbase =","counters":[]},{"line":"    let common = { Common.scan_state; pending_coinbase } in","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    { hash; common }","counters":[]},{"line":"","counters":[]},{"line":"  let scan_state t = Common.scan_state t.common","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"","counters":[]},{"line":"  let pending_coinbase t = Common.pending_coinbase t.common","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"type t =","counters":[]},{"line":"  { transition : Mina_block.Validated.t","counters":[]},{"line":"  ; staged_ledger : Staged_ledger.t","counters":[]},{"line":"  ; protocol_states :","counters":[]},{"line":"      Mina_state.Protocol_state.Value.t Mina_base.State_hash.With_state_hashes.t","counters":[]},{"line":"      list","counters":[]},{"line":"  }","counters":[]},{"line":"","counters":[]},{"line":"let minimize { transition; staged_ledger; protocol_states = _ } =","counters":[]},{"line":"  let scan_state = Staged_ledger.scan_state staged_ledger in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  let pending_coinbase =","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    Staged_ledger.pending_coinbase_collection staged_ledger","counters":[]},{"line":"  in","counters":[]},{"line":"  let common = Common.create ~scan_state ~pending_coinbase in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  { Minimal.hash = Mina_block.Validated.state_hash transition; common }","counters":[{"col_start":49,"col_end":49,"count":0}]},{"line":"","counters":[]},{"line":"let limit { transition; staged_ledger; protocol_states } =","counters":[]},{"line":"  let scan_state = Staged_ledger.scan_state staged_ledger in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  let pending_coinbase =","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    Staged_ledger.pending_coinbase_collection staged_ledger","counters":[]},{"line":"  in","counters":[]},{"line":"  let common = Common.create ~scan_state ~pending_coinbase in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  { Limited.transition; common; protocol_states }","counters":[{"col_start":48,"col_end":48,"count":2}]}]}