{"filename":"src/lib/mina_base/staged_ledger_hash_intf.ml","lines":[{"line":"module type Full = sig","counters":[]},{"line":"  open Core_kernel","counters":[]},{"line":"  open Snark_params.Tick","counters":[]},{"line":"","counters":[]},{"line":"  type t [@@deriving sexp, equal, compare, hash, yojson]","counters":[]},{"line":"","counters":[]},{"line":"  include Hashable with type t := t","counters":[]},{"line":"","counters":[]},{"line":"  type value [@@deriving sexp, equal, compare, hash]","counters":[]},{"line":"","counters":[]},{"line":"  type var","counters":[]},{"line":"","counters":[]},{"line":"  val var_of_t : t -> var","counters":[]},{"line":"","counters":[]},{"line":"  val typ : (var, t) Typ.t","counters":[]},{"line":"","counters":[]},{"line":"  val var_to_input : var -> Field.Var.t Random_oracle.Input.Chunked.t","counters":[]},{"line":"","counters":[]},{"line":"  val to_input : t -> Field.t Random_oracle.Input.Chunked.t","counters":[]},{"line":"","counters":[]},{"line":"  val genesis :","counters":[]},{"line":"       constraint_constants:Genesis_constants.Constraint_constants.t","counters":[]},{"line":"    -> genesis_ledger_hash:Ledger_hash.t","counters":[]},{"line":"    -> t","counters":[]},{"line":"","counters":[]},{"line":"  module Stable : sig","counters":[]},{"line":"    module V1 : sig","counters":[]},{"line":"      type nonrec t = t","counters":[]},{"line":"      [@@deriving bin_io, sexp, equal, compare, hash, yojson, version]","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    module Latest : module type of V1","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Aux_hash : sig","counters":[]},{"line":"    type t","counters":[]},{"line":"","counters":[]},{"line":"    module Stable : sig","counters":[]},{"line":"      module V1 : sig","counters":[]},{"line":"        type nonrec t = t","counters":[]},{"line":"        [@@deriving bin_io, sexp, equal, compare, hash, yojson, version]","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest : module type of V1","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    val of_bytes : string -> t","counters":[]},{"line":"","counters":[]},{"line":"    val to_bytes : t -> string","counters":[]},{"line":"","counters":[]},{"line":"    val to_base58_check : t -> string","counters":[]},{"line":"","counters":[]},{"line":"    val of_base58_check_exn : string -> t","counters":[]},{"line":"","counters":[]},{"line":"    val compare : t -> t -> int","counters":[]},{"line":"","counters":[]},{"line":"    val sexp_of_t : t -> Ppx_sexp_conv_lib.Sexp.t","counters":[]},{"line":"","counters":[]},{"line":"    val dummy : t","counters":[]},{"line":"","counters":[]},{"line":"    val of_sha256 : Digestif.SHA256.t -> t","counters":[]},{"line":"","counters":[]},{"line":"    val gen : t Quickcheck.Generator.t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Pending_coinbase_aux : sig","counters":[]},{"line":"    type t","counters":[]},{"line":"","counters":[]},{"line":"    module Stable : sig","counters":[]},{"line":"      module V1 : sig","counters":[]},{"line":"        type nonrec t = t","counters":[]},{"line":"        [@@deriving bin_io, sexp, equal, compare, hash, yojson, version]","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest : module type of V1","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    val to_base58_check : t -> string","counters":[]},{"line":"","counters":[]},{"line":"    val of_base58_check_exn : string -> t","counters":[]},{"line":"","counters":[]},{"line":"    val dummy : t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  val ledger_hash : t -> Ledger_hash.t","counters":[]},{"line":"","counters":[]},{"line":"  val aux_hash : t -> Aux_hash.t","counters":[]},{"line":"","counters":[]},{"line":"  val pending_coinbase_aux : t -> Pending_coinbase_aux.t","counters":[]},{"line":"","counters":[]},{"line":"  val pending_coinbase_hash : t -> Pending_coinbase.Hash.t","counters":[]},{"line":"","counters":[]},{"line":"  val pending_coinbase_hash_var : var -> Pending_coinbase.Hash.var","counters":[]},{"line":"","counters":[]},{"line":"  val of_aux_ledger_and_coinbase_hash :","counters":[]},{"line":"    Aux_hash.t -> Ledger_hash.t -> Pending_coinbase.t -> t","counters":[]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":1}]}]}