{"filename":"src/lib/transition_frontier/persistent_frontier/sync.ml","lines":[{"line":"open Async_kernel","counters":[]},{"line":"","counters":[]},{"line":"(* TODO: *new* convert into an extension *)","counters":[]},{"line":"type t = { worker : Worker.t; buffer : Diff_buffer.t }","counters":[]},{"line":"","counters":[]},{"line":"let buffer t = DynArray.to_list t.buffer.diff_array","counters":[{"col_start":15,"col_end":15,"count":0}]},{"line":"","counters":[]},{"line":"(* NB: the persistent frontier must remain open as","counters":[]},{"line":" * long as the synchronization is using it *)","counters":[]},{"line":"let create ~constraint_constants ~logger ~time_controller ~db","counters":[]},{"line":"    ~persistent_root_instance =","counters":[]},{"line":"  let worker = Worker.create { db; logger; persistent_root_instance } in","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  let buffer =","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    Diff_buffer.create ~constraint_constants ~time_controller ~worker","counters":[]},{"line":"  in","counters":[]},{"line":"  { worker; buffer }","counters":[]},{"line":"","counters":[]},{"line":"let close t =","counters":[]},{"line":"  let%bind () = Diff_buffer.close_and_finish_copy t.buffer in","counters":[{"col_start":48,"col_end":48,"count":0}]},{"line":"  Worker.close t.worker","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"","counters":[]},{"line":"let notify t ~diffs = Diff_buffer.write t.buffer ~diffs","counters":[{"col_start":22,"col_end":22,"count":0},{"col_start":54,"col_end":54,"count":2}]}]}