{"filename":"src/lib/cli_lib/graphql_types.ml","lines":[{"line":"(*Types coresponding to the result of graphql queries*)","counters":[]},{"line":"","counters":[]},{"line":"(*List of completed work from Graphql_queries.Snark_pool*)","counters":[{"col_start":58,"col_end":58,"count":1}]},{"line":"module Completed_works = struct","counters":[]},{"line":"  module Work = struct","counters":[]},{"line":"    type t =","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      { work_ids : int list","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":26,"col_end":26,"count":0}]},{"line":"      ; fee : Currency.Fee.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":14,"col_end":14,"count":0},{"col_start":27,"col_end":27,"count":0}]},{"line":"      ; prover : Signature_lib.Public_key.Compressed.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"      }","counters":[]},{"line":"    [@@deriving yojson]","counters":[{"col_start":22,"col_end":22,"count":0}]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  type t = Work.t list [@@deriving yojson]","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":11,"col_end":11,"count":0},{"col_start":21,"col_end":21,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"(*List of work to be done from Graphql_queries.PendingSnarkWork*)","counters":[]},{"line":"module Pending_snark_work = struct","counters":[]},{"line":"  module Work = struct","counters":[]},{"line":"    type t =","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      { work_id : int","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":18,"col_end":18,"count":0},{"col_start":20,"col_end":20,"count":0}]},{"line":"      ; fee_excess : Currency.Amount.Signed.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":21,"col_end":21,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"      ; supply_increase : Currency.Amount.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":26,"col_end":26,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"      ; source_ledger_hash : Mina_base.Frozen_ledger_hash.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":29,"col_end":29,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      ; target_ledger_hash : Mina_base.Frozen_ledger_hash.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":29,"col_end":29,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      }","counters":[]},{"line":"    [@@deriving yojson]","counters":[{"col_start":22,"col_end":22,"count":0}]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  type t = Work.t array array [@@deriving yojson]","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":11,"col_end":11,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":28,"col_end":28,"count":0}]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":2}]}]}