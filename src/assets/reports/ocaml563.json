{"filename":"src/libp2p_ipc/libp2p_ipc_capnp.ml","lines":[{"line":"[@@@ocaml.warning \"-27-32-37-60\"]","counters":[]},{"line":"","counters":[{"col_start":0,"col_end":0,"count":1}]},{"line":"type ro = Capnp.Message.ro","counters":[]},{"line":"type rw = Capnp.Message.rw","counters":[]},{"line":"","counters":[]},{"line":"module type S = sig","counters":[]},{"line":"  module MessageWrapper : Capnp.RPC.S","counters":[]},{"line":"  type 'cap message_t = 'cap MessageWrapper.Message.t","counters":[]},{"line":"  type 'a reader_t = 'a MessageWrapper.StructStorage.reader_t","counters":[]},{"line":"  type 'a builder_t = 'a MessageWrapper.StructStorage.builder_t","counters":[]},{"line":"","counters":[]},{"line":"  module ValidationResult_12956713526515247866 : sig","counters":[]},{"line":"    type t =","counters":[]},{"line":"      | Accept","counters":[]},{"line":"      | Reject","counters":[]},{"line":"      | Ignore","counters":[]},{"line":"      | Undefined of int","counters":[]},{"line":"  end","counters":[]},{"line":"  module ResourceUpdateType_12722323391428546450 : sig","counters":[]},{"line":"    type t =","counters":[]},{"line":"      | Added","counters":[]},{"line":"      | Removed","counters":[]},{"line":"      | Broken","counters":[]},{"line":"      | Undefined of int","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Reader : sig","counters":[]},{"line":"    type array_t","counters":[]},{"line":"    type builder_array_t","counters":[]},{"line":"    type pointer_t = ro MessageWrapper.Slice.t option","counters":[]},{"line":"    val of_pointer : pointer_t -> 'a reader_t","counters":[]},{"line":"    module Multiaddr : sig","counters":[]},{"line":"      type struct_t = [`Multiaddr_ed11d634701b0d8e]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_representation : t -> bool","counters":[]},{"line":"      val representation_get : t -> string","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module PeerId : sig","counters":[]},{"line":"      type struct_t = [`PeerId_caf9ffc384dfb56c]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_id : t -> bool","counters":[]},{"line":"      val id_get : t -> string","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module BlockWithId : sig","counters":[]},{"line":"      type struct_t = [`BlockWithId_a784810bf56d058c]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_blake2b_hash : t -> bool","counters":[]},{"line":"      val blake2b_hash_get : t -> string","counters":[]},{"line":"      val has_block : t -> bool","counters":[]},{"line":"      val block_get : t -> string","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module RootBlockId : sig","counters":[]},{"line":"      type struct_t = [`RootBlockId_abf6a984ba800725]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_blake2b_hash : t -> bool","counters":[]},{"line":"      val blake2b_hash_get : t -> string","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module AddrInfo : sig","counters":[]},{"line":"      type struct_t = [`AddrInfo_89e4194c3e64d647]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_peer_id : t -> bool","counters":[]},{"line":"      val peer_id_get : t -> PeerId.t","counters":[]},{"line":"      val peer_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val has_addrs : t -> bool","counters":[]},{"line":"      val addrs_get : t -> (ro, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val addrs_get_list : t -> Multiaddr.t list","counters":[]},{"line":"      val addrs_get_array : t -> Multiaddr.t array","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module PeerInfo : sig","counters":[]},{"line":"      type struct_t = [`PeerInfo_ae7b97cc383b684e]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val libp2p_port_get : t -> int","counters":[]},{"line":"      val has_host : t -> bool","counters":[]},{"line":"      val host_get : t -> string","counters":[]},{"line":"      val has_peer_id : t -> bool","counters":[]},{"line":"      val peer_id_get : t -> PeerId.t","counters":[]},{"line":"      val peer_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module SequenceNumber : sig","counters":[]},{"line":"      type struct_t = [`SequenceNumber_a5063d26e6e7aa47]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val seqno_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val seqno_get_int_exn : t -> int","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module ValidationId : sig","counters":[]},{"line":"      type struct_t = [`ValidationId_89c0f3360eecf997]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val id_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val id_get_int_exn : t -> int","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module StreamId : sig","counters":[]},{"line":"      type struct_t = [`StreamId_d3ec891916526de8]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val id_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val id_get_int_exn : t -> int","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module SubscriptionId : sig","counters":[]},{"line":"      type struct_t = [`SubscriptionId_fc2430a71b2c8f44]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val id_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val id_get_int_exn : t -> int","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module Libp2pKeypair : sig","counters":[]},{"line":"      type struct_t = [`Libp2pKeypair_fb61e5f7d6a0208e]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_private_key : t -> bool","counters":[]},{"line":"      val private_key_get : t -> string","counters":[]},{"line":"      val has_public_key : t -> bool","counters":[]},{"line":"      val public_key_get : t -> string","counters":[]},{"line":"      val has_peer_id : t -> bool","counters":[]},{"line":"      val peer_id_get : t -> PeerId.t","counters":[]},{"line":"      val peer_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module GatingConfig : sig","counters":[]},{"line":"      type struct_t = [`GatingConfig_e1202e2bb52d45e6]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_banned_ips : t -> bool","counters":[]},{"line":"      val banned_ips_get : t -> (ro, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_ips_get_list : t -> string list","counters":[]},{"line":"      val banned_ips_get_array : t -> string array","counters":[]},{"line":"      val has_banned_peer_ids : t -> bool","counters":[]},{"line":"      val banned_peer_ids_get : t -> (ro, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_peer_ids_get_list : t -> PeerId.t list","counters":[]},{"line":"      val banned_peer_ids_get_array : t -> PeerId.t array","counters":[]},{"line":"      val has_trusted_ips : t -> bool","counters":[]},{"line":"      val trusted_ips_get : t -> (ro, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_ips_get_list : t -> string list","counters":[]},{"line":"      val trusted_ips_get_array : t -> string array","counters":[]},{"line":"      val has_trusted_peer_ids : t -> bool","counters":[]},{"line":"      val trusted_peer_ids_get : t -> (ro, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_peer_ids_get_list : t -> PeerId.t list","counters":[]},{"line":"      val trusted_peer_ids_get_array : t -> PeerId.t array","counters":[]},{"line":"      val isolate_get : t -> bool","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module TopicLevel : sig","counters":[]},{"line":"      type struct_t = [`TopicLevel_a382869c0ba548c2]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_topics : t -> bool","counters":[]},{"line":"      val topics_get : t -> (ro, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val topics_get_list : t -> string list","counters":[]},{"line":"      val topics_get_array : t -> string array","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module Libp2pConfig : sig","counters":[]},{"line":"      type struct_t = [`Libp2pConfig_c90f65b6852b9c22]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_statedir : t -> bool","counters":[]},{"line":"      val statedir_get : t -> string","counters":[]},{"line":"      val has_private_key : t -> bool","counters":[]},{"line":"      val private_key_get : t -> string","counters":[]},{"line":"      val has_network_id : t -> bool","counters":[]},{"line":"      val network_id_get : t -> string","counters":[]},{"line":"      val has_listen_on : t -> bool","counters":[]},{"line":"      val listen_on_get : t -> (ro, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val listen_on_get_list : t -> Multiaddr.t list","counters":[]},{"line":"      val listen_on_get_array : t -> Multiaddr.t array","counters":[]},{"line":"      val metrics_port_get : t -> int","counters":[]},{"line":"      val has_external_multiaddr : t -> bool","counters":[]},{"line":"      val external_multiaddr_get : t -> Multiaddr.t","counters":[]},{"line":"      val external_multiaddr_get_pipelined : struct_t MessageWrapper.StructRef.t -> Multiaddr.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val unsafe_no_trust_ip_get : t -> bool","counters":[]},{"line":"      val flood_get : t -> bool","counters":[]},{"line":"      val peer_exchange_get : t -> bool","counters":[]},{"line":"      val has_direct_peers : t -> bool","counters":[]},{"line":"      val direct_peers_get : t -> (ro, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val direct_peers_get_list : t -> Multiaddr.t list","counters":[]},{"line":"      val direct_peers_get_array : t -> Multiaddr.t array","counters":[]},{"line":"      val has_seed_peers : t -> bool","counters":[]},{"line":"      val seed_peers_get : t -> (ro, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val seed_peers_get_list : t -> Multiaddr.t list","counters":[]},{"line":"      val seed_peers_get_array : t -> Multiaddr.t array","counters":[]},{"line":"      val has_gating_config : t -> bool","counters":[]},{"line":"      val gating_config_get : t -> GatingConfig.t","counters":[]},{"line":"      val gating_config_get_pipelined : struct_t MessageWrapper.StructRef.t -> GatingConfig.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val max_connections_get : t -> Stdint.Uint32.t","counters":[]},{"line":"      val max_connections_get_int_exn : t -> int","counters":[]},{"line":"      val validation_queue_size_get : t -> Stdint.Uint32.t","counters":[]},{"line":"      val validation_queue_size_get_int_exn : t -> int","counters":[]},{"line":"      val peer_protection_ratio_get : t -> float","counters":[]},{"line":"      val min_connections_get : t -> Stdint.Uint32.t","counters":[]},{"line":"      val min_connections_get_int_exn : t -> int","counters":[]},{"line":"      val has_known_private_ip_nets : t -> bool","counters":[]},{"line":"      val known_private_ip_nets_get : t -> (ro, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val known_private_ip_nets_get_list : t -> string list","counters":[]},{"line":"      val known_private_ip_nets_get_array : t -> string array","counters":[]},{"line":"      val has_topic_config : t -> bool","counters":[]},{"line":"      val topic_config_get : t -> (ro, TopicLevel.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val topic_config_get_list : t -> TopicLevel.t list","counters":[]},{"line":"      val topic_config_get_array : t -> TopicLevel.t array","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module ResourceUpdateType : sig","counters":[]},{"line":"      type t = ResourceUpdateType_12722323391428546450.t =","counters":[]},{"line":"        | Added","counters":[]},{"line":"        | Removed","counters":[]},{"line":"        | Broken","counters":[]},{"line":"        | Undefined of int","counters":[]},{"line":"    end","counters":[]},{"line":"    module ValidationResult : sig","counters":[]},{"line":"      type t = ValidationResult_12956713526515247866.t =","counters":[]},{"line":"        | Accept","counters":[]},{"line":"        | Reject","counters":[]},{"line":"        | Ignore","counters":[]},{"line":"        | Undefined of int","counters":[]},{"line":"    end","counters":[]},{"line":"    module StreamMessage : sig","counters":[]},{"line":"      type struct_t = [`StreamMessage_aa5cdd4cc2bd8222]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_stream_id : t -> bool","counters":[]},{"line":"      val stream_id_get : t -> StreamId.t","counters":[]},{"line":"      val stream_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val has_data : t -> bool","counters":[]},{"line":"      val data_get : t -> string","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module Duration : sig","counters":[]},{"line":"      type struct_t = [`Duration_bf96c4e0ff964090]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val nano_sec_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val nano_sec_get_int_exn : t -> int","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module UnixNano : sig","counters":[]},{"line":"      type struct_t = [`UnixNano_9d6900bcb72b8938]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val nano_sec_get : t -> int64","counters":[]},{"line":"      val nano_sec_get_int_exn : t -> int","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module PushMessageHeader : sig","counters":[]},{"line":"      type struct_t = [`PushMessageHeader_a8298a9629f09cdc]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_time_sent : t -> bool","counters":[]},{"line":"      val time_sent_get : t -> UnixNano.t","counters":[]},{"line":"      val time_sent_get_pipelined : struct_t MessageWrapper.StructRef.t -> UnixNano.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module RpcMessageHeader : sig","counters":[]},{"line":"      type struct_t = [`RpcMessageHeader_a244ebaa77d7c1cf]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      val has_time_sent : t -> bool","counters":[]},{"line":"      val time_sent_get : t -> UnixNano.t","counters":[]},{"line":"      val time_sent_get_pipelined : struct_t MessageWrapper.StructRef.t -> UnixNano.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val has_sequence_number : t -> bool","counters":[]},{"line":"      val sequence_number_get : t -> SequenceNumber.t","counters":[]},{"line":"      val sequence_number_get_pipelined : struct_t MessageWrapper.StructRef.t -> SequenceNumber.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module Libp2pHelperInterface : sig","counters":[]},{"line":"      type struct_t = [`Libp2pHelperInterface_91c5868ca6847cc5]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      module Configure : sig","counters":[]},{"line":"        type struct_t = [`Configure_ff0e5f175237cf55]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_bbfd8fe6d222b0a1]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_config : t -> bool","counters":[]},{"line":"          val config_get : t -> Libp2pConfig.t","counters":[]},{"line":"          val config_get_pipelined : struct_t MessageWrapper.StructRef.t -> Libp2pConfig.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_ffdbb8a4a072322b]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module SetGatingConfig : sig","counters":[]},{"line":"        type struct_t = [`SetGatingConfig_9eed76ad25f4d362]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_bae9227a811faef6]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_gating_config : t -> bool","counters":[]},{"line":"          val gating_config_get : t -> GatingConfig.t","counters":[]},{"line":"          val gating_config_get_pipelined : struct_t MessageWrapper.StructRef.t -> GatingConfig.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_8b1c161e3d21d6b1]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Listen : sig","counters":[]},{"line":"        type struct_t = [`Listen_e884b52c8948d81b]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_cdbeb7cf54035b71]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_iface : t -> bool","counters":[]},{"line":"          val iface_get : t -> Multiaddr.t","counters":[]},{"line":"          val iface_get_pipelined : struct_t MessageWrapper.StructRef.t -> Multiaddr.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_c1f9b9db8212bf72]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> (ro, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_get_list : t -> Multiaddr.t list","counters":[]},{"line":"          val result_get_array : t -> Multiaddr.t array","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module GetListeningAddrs : sig","counters":[]},{"line":"        type struct_t = [`GetListeningAddrs_f6c7b7d1f45c6434]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_83d991af72ada648]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_bae1386e815a99d1]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> (ro, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_get_list : t -> Multiaddr.t list","counters":[]},{"line":"          val result_get_array : t -> Multiaddr.t array","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module BeginAdvertising : sig","counters":[]},{"line":"        type struct_t = [`BeginAdvertising_fde7d941c690b3a7]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_d2e7ac23195dffe2]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_f6c843e7ba07b900]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module AddPeer : sig","counters":[]},{"line":"        type struct_t = [`AddPeer_ba41f14b128a1dd7]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_c258720d7c5c09ed]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_multiaddr : t -> bool","counters":[]},{"line":"          val multiaddr_get : t -> Multiaddr.t","counters":[]},{"line":"          val multiaddr_get_pipelined : struct_t MessageWrapper.StructRef.t -> Multiaddr.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val is_seed_get : t -> bool","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_9a9a8d03d3f08548]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module ListPeers : sig","counters":[]},{"line":"        type struct_t = [`ListPeers_d48ef9a8506586a6]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_bb6edc2598638c9c]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_fb54cca136535a14]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> (ro, PeerInfo.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_get_list : t -> PeerInfo.t list","counters":[]},{"line":"          val result_get_array : t -> PeerInfo.t array","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module BandwidthInfo : sig","counters":[]},{"line":"        type struct_t = [`BandwidthInfo_969a629719fde633]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_e4386d9ee8d69654]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_96359b995ba506f4]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val input_bandwidth_get : t -> float","counters":[]},{"line":"          val output_bandwidth_get : t -> float","counters":[]},{"line":"          val cpu_usage_get : t -> float","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module GenerateKeypair : sig","counters":[]},{"line":"        type struct_t = [`GenerateKeypair_b973118252345b14]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_ce71e91d5eb99a49]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_b1b128c54a9c378a]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> Libp2pKeypair.t","counters":[]},{"line":"          val result_get_pipelined : struct_t MessageWrapper.StructRef.t -> Libp2pKeypair.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Publish : sig","counters":[]},{"line":"        type struct_t = [`Publish_abd77ad6fe644f04]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_9cecb704bb2aeaaa]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_topic : t -> bool","counters":[]},{"line":"          val topic_get : t -> string","counters":[]},{"line":"          val has_data : t -> bool","counters":[]},{"line":"          val data_get : t -> string","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_b608443b70279f42]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Subscribe : sig","counters":[]},{"line":"        type struct_t = [`Subscribe_87e63b07187d61fd]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f30859dedd19e179]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_topic : t -> bool","counters":[]},{"line":"          val topic_get : t -> string","counters":[]},{"line":"          val has_subscription_id : t -> bool","counters":[]},{"line":"          val subscription_id_get : t -> SubscriptionId.t","counters":[]},{"line":"          val subscription_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> SubscriptionId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_a969a5ea58b5581c]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Unsubscribe : sig","counters":[]},{"line":"        type struct_t = [`Unsubscribe_cce2ad102c7ea857]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f3e0ba7fbe583065]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_subscription_id : t -> bool","counters":[]},{"line":"          val subscription_id_get : t -> SubscriptionId.t","counters":[]},{"line":"          val subscription_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> SubscriptionId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_af6af6e1ad511e3a]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module AddStreamHandler : sig","counters":[]},{"line":"        type struct_t = [`AddStreamHandler_87594eae8c8531ee]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_a42892d737705a9c]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_protocol : t -> bool","counters":[]},{"line":"          val protocol_get : t -> string","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_f2765705336251b5]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module RemoveStreamHandler : sig","counters":[]},{"line":"        type struct_t = [`RemoveStreamHandler_c909f587e1bb9499]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_b822fab66dabdf26]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_protocol : t -> bool","counters":[]},{"line":"          val protocol_get : t -> string","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_caae22b415293cb3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module OpenStream : sig","counters":[]},{"line":"        type struct_t = [`OpenStream_dc75bca71078eb01]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f77175f458d711a8]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_peer : t -> bool","counters":[]},{"line":"          val peer_get : t -> PeerId.t","counters":[]},{"line":"          val peer_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val has_protocol_id : t -> bool","counters":[]},{"line":"          val protocol_id_get : t -> string","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_918222cd43d37f6c]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_stream_id : t -> bool","counters":[]},{"line":"          val stream_id_get : t -> StreamId.t","counters":[]},{"line":"          val stream_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val has_peer : t -> bool","counters":[]},{"line":"          val peer_get : t -> PeerInfo.t","counters":[]},{"line":"          val peer_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerInfo.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module CloseStream : sig","counters":[]},{"line":"        type struct_t = [`CloseStream_fb4640ea8f01c33b]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_956577d02c2197b3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_stream_id : t -> bool","counters":[]},{"line":"          val stream_id_get : t -> StreamId.t","counters":[]},{"line":"          val stream_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_dea74fe5c2096c99]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module ResetStream : sig","counters":[]},{"line":"        type struct_t = [`ResetStream_aa5672b913b9c728]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f2ba9a25df1929e3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_stream_id : t -> bool","counters":[]},{"line":"          val stream_id_get : t -> StreamId.t","counters":[]},{"line":"          val stream_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_a4ef405cd24ad7a3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module SendStream : sig","counters":[]},{"line":"        type struct_t = [`SendStream_e079d0d7c895a200]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f6ac925efcae1dda]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_msg : t -> bool","counters":[]},{"line":"          val msg_get : t -> StreamMessage.t","counters":[]},{"line":"          val msg_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamMessage.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_934ce73a7d9d3d3a]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module SetNodeStatus : sig","counters":[]},{"line":"        type struct_t = [`SetNodeStatus_806d105a074b7e19]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_fcf94c0b3ea7ac29]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_status : t -> bool","counters":[]},{"line":"          val status_get : t -> string","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_f1a5d120cfd28003]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module GetPeerNodeStatus : sig","counters":[]},{"line":"        type struct_t = [`GetPeerNodeStatus_d5738b22303fce4e]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_eb7b01a9c0a1e9cb]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_peer : t -> bool","counters":[]},{"line":"          val peer_get : t -> Multiaddr.t","counters":[]},{"line":"          val peer_get_pipelined : struct_t MessageWrapper.StructRef.t -> Multiaddr.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_fb9439112386d425]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> string","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module TestDecodeBitswapBlocks : sig","counters":[]},{"line":"        type struct_t = [`TestDecodeBitswapBlocks_e5780789678719ec]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_8050be5b024b71ef]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_blocks : t -> bool","counters":[]},{"line":"          val blocks_get : t -> (ro, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_get_list : t -> BlockWithId.t list","counters":[]},{"line":"          val blocks_get_array : t -> BlockWithId.t array","counters":[]},{"line":"          val has_root_block_id : t -> bool","counters":[]},{"line":"          val root_block_id_get : t -> RootBlockId.t","counters":[]},{"line":"          val root_block_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> RootBlockId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_b0506afb32106477]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_decoded_data : t -> bool","counters":[]},{"line":"          val decoded_data_get : t -> string","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module TestEncodeBitswapBlocks : sig","counters":[]},{"line":"        type struct_t = [`TestEncodeBitswapBlocks_fdbea00423ed6c49]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_a6a24bb291f80ca6]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_data : t -> bool","counters":[]},{"line":"          val data_get : t -> string","counters":[]},{"line":"          val max_block_size_get : t -> int64","counters":[]},{"line":"          val max_block_size_get_int_exn : t -> int","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_c2cfafb29b55e5d3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          val has_blocks : t -> bool","counters":[]},{"line":"          val blocks_get : t -> (ro, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_get_list : t -> BlockWithId.t list","counters":[]},{"line":"          val blocks_get_array : t -> BlockWithId.t array","counters":[]},{"line":"          val has_root_block_id : t -> bool","counters":[]},{"line":"          val root_block_id_get : t -> RootBlockId.t","counters":[]},{"line":"          val root_block_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> RootBlockId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"          val of_message : 'cap message_t -> t","counters":[]},{"line":"          val of_builder : struct_t builder_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Validation : sig","counters":[]},{"line":"        type struct_t = [`Validation_89d8e42d7f3a4f67]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_validation_id : t -> bool","counters":[]},{"line":"        val validation_id_get : t -> ValidationId.t","counters":[]},{"line":"        val validation_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> ValidationId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val result_get : t -> ValidationResult.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module DeleteResource : sig","counters":[]},{"line":"        type struct_t = [`DeleteResource_86badb3b545b9790]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_ids : t -> bool","counters":[]},{"line":"        val ids_get : t -> (ro, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_get_list : t -> RootBlockId.t list","counters":[]},{"line":"        val ids_get_array : t -> RootBlockId.t array","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module HeartbeatPeer : sig","counters":[]},{"line":"        type struct_t = [`HeartbeatPeer_a2ca930f070de840]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_id : t -> bool","counters":[]},{"line":"        val id_get : t -> PeerId.t","counters":[]},{"line":"        val id_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module DownloadResource : sig","counters":[]},{"line":"        type struct_t = [`DownloadResource_e2fe4f9a5e1a5358]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val tag_get : t -> int","counters":[]},{"line":"        val has_ids : t -> bool","counters":[]},{"line":"        val ids_get : t -> (ro, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_get_list : t -> RootBlockId.t list","counters":[]},{"line":"        val ids_get_array : t -> RootBlockId.t array","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module AddResource : sig","counters":[]},{"line":"        type struct_t = [`AddResource_b28801bad1dacef0]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val tag_get : t -> int","counters":[]},{"line":"        val has_data : t -> bool","counters":[]},{"line":"        val data_get : t -> string","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module RpcRequest : sig","counters":[]},{"line":"        type struct_t = [`RpcRequest_e448fafba2ab92e3]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Configure of Configure.Request.t","counters":[]},{"line":"          | SetGatingConfig of SetGatingConfig.Request.t","counters":[]},{"line":"          | Listen of Listen.Request.t","counters":[]},{"line":"          | GetListeningAddrs of GetListeningAddrs.Request.t","counters":[]},{"line":"          | BeginAdvertising of BeginAdvertising.Request.t","counters":[]},{"line":"          | AddPeer of AddPeer.Request.t","counters":[]},{"line":"          | ListPeers of ListPeers.Request.t","counters":[]},{"line":"          | GenerateKeypair of GenerateKeypair.Request.t","counters":[]},{"line":"          | Publish of Publish.Request.t","counters":[]},{"line":"          | Subscribe of Subscribe.Request.t","counters":[]},{"line":"          | Unsubscribe of Unsubscribe.Request.t","counters":[]},{"line":"          | AddStreamHandler of AddStreamHandler.Request.t","counters":[]},{"line":"          | RemoveStreamHandler of RemoveStreamHandler.Request.t","counters":[]},{"line":"          | OpenStream of OpenStream.Request.t","counters":[]},{"line":"          | CloseStream of CloseStream.Request.t","counters":[]},{"line":"          | ResetStream of ResetStream.Request.t","counters":[]},{"line":"          | SendStream of SendStream.Request.t","counters":[]},{"line":"          | SetNodeStatus of SetNodeStatus.Request.t","counters":[]},{"line":"          | GetPeerNodeStatus of GetPeerNodeStatus.Request.t","counters":[]},{"line":"          | BandwidthInfo of BandwidthInfo.Request.t","counters":[]},{"line":"          | TestDecodeBitswapBlocks of TestDecodeBitswapBlocks.Request.t","counters":[]},{"line":"          | TestEncodeBitswapBlocks of TestEncodeBitswapBlocks.Request.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val has_header : t -> bool","counters":[]},{"line":"        val header_get : t -> RpcMessageHeader.t","counters":[]},{"line":"        val header_get_pipelined : struct_t MessageWrapper.StructRef.t -> RpcMessageHeader.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module RpcResponseSuccess : sig","counters":[]},{"line":"        type struct_t = [`RpcResponseSuccess_aa166667db5b6b9d]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Configure of Configure.Response.t","counters":[]},{"line":"          | SetGatingConfig of SetGatingConfig.Response.t","counters":[]},{"line":"          | Listen of Listen.Response.t","counters":[]},{"line":"          | GetListeningAddrs of GetListeningAddrs.Response.t","counters":[]},{"line":"          | BeginAdvertising of BeginAdvertising.Response.t","counters":[]},{"line":"          | AddPeer of AddPeer.Response.t","counters":[]},{"line":"          | ListPeers of ListPeers.Response.t","counters":[]},{"line":"          | GenerateKeypair of GenerateKeypair.Response.t","counters":[]},{"line":"          | Publish of Publish.Response.t","counters":[]},{"line":"          | Subscribe of Subscribe.Response.t","counters":[]},{"line":"          | Unsubscribe of Unsubscribe.Response.t","counters":[]},{"line":"          | AddStreamHandler of AddStreamHandler.Response.t","counters":[]},{"line":"          | RemoveStreamHandler of RemoveStreamHandler.Response.t","counters":[]},{"line":"          | OpenStream of OpenStream.Response.t","counters":[]},{"line":"          | CloseStream of CloseStream.Response.t","counters":[]},{"line":"          | ResetStream of ResetStream.Response.t","counters":[]},{"line":"          | SendStream of SendStream.Response.t","counters":[]},{"line":"          | SetNodeStatus of SetNodeStatus.Response.t","counters":[]},{"line":"          | GetPeerNodeStatus of GetPeerNodeStatus.Response.t","counters":[]},{"line":"          | BandwidthInfo of BandwidthInfo.Response.t","counters":[]},{"line":"          | TestDecodeBitswapBlocks of TestDecodeBitswapBlocks.Response.t","counters":[]},{"line":"          | TestEncodeBitswapBlocks of TestEncodeBitswapBlocks.Response.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module RpcResponse : sig","counters":[]},{"line":"        type struct_t = [`RpcResponse_824dae3760b93d5d]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Error of string","counters":[]},{"line":"          | Success of RpcResponseSuccess.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val has_header : t -> bool","counters":[]},{"line":"        val header_get : t -> RpcMessageHeader.t","counters":[]},{"line":"        val header_get_pipelined : struct_t MessageWrapper.StructRef.t -> RpcMessageHeader.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module PushMessage : sig","counters":[]},{"line":"        type struct_t = [`PushMessage_bcc32e2f197831bb]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Validation of Validation.t","counters":[]},{"line":"          | AddResource of AddResource.t","counters":[]},{"line":"          | DeleteResource of DeleteResource.t","counters":[]},{"line":"          | DownloadResource of DownloadResource.t","counters":[]},{"line":"          | HeartbeatPeer of HeartbeatPeer.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val has_header : t -> bool","counters":[]},{"line":"        val header_get : t -> PushMessageHeader.t","counters":[]},{"line":"        val header_get_pipelined : struct_t MessageWrapper.StructRef.t -> PushMessageHeader.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Message : sig","counters":[]},{"line":"        type struct_t = [`Message_dd721cc91936b5d8]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | RpcRequest of RpcRequest.t","counters":[]},{"line":"          | PushMessage of PushMessage.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module DaemonInterface : sig","counters":[]},{"line":"      type struct_t = [`DaemonInterface_aa8c38390c8a53b0]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      module PeerConnected : sig","counters":[]},{"line":"        type struct_t = [`PeerConnected_82b1f9dcfa3ef5b8]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_peer_id : t -> bool","counters":[]},{"line":"        val peer_id_get : t -> PeerId.t","counters":[]},{"line":"        val peer_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module PeerDisconnected : sig","counters":[]},{"line":"        type struct_t = [`PeerDisconnected_fb7ab58e17fecacc]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_peer_id : t -> bool","counters":[]},{"line":"        val peer_id_get : t -> PeerId.t","counters":[]},{"line":"        val peer_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module GossipReceived : sig","counters":[]},{"line":"        type struct_t = [`GossipReceived_8128c52d5468fe3b]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_sender : t -> bool","counters":[]},{"line":"        val sender_get : t -> PeerInfo.t","counters":[]},{"line":"        val sender_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerInfo.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val has_seen_at : t -> bool","counters":[]},{"line":"        val seen_at_get : t -> UnixNano.t","counters":[]},{"line":"        val seen_at_get_pipelined : struct_t MessageWrapper.StructRef.t -> UnixNano.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val has_expiration : t -> bool","counters":[]},{"line":"        val expiration_get : t -> UnixNano.t","counters":[]},{"line":"        val expiration_get_pipelined : struct_t MessageWrapper.StructRef.t -> UnixNano.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val has_subscription_id : t -> bool","counters":[]},{"line":"        val subscription_id_get : t -> SubscriptionId.t","counters":[]},{"line":"        val subscription_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> SubscriptionId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val has_validation_id : t -> bool","counters":[]},{"line":"        val validation_id_get : t -> ValidationId.t","counters":[]},{"line":"        val validation_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> ValidationId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val has_data : t -> bool","counters":[]},{"line":"        val data_get : t -> string","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module IncomingStream : sig","counters":[]},{"line":"        type struct_t = [`IncomingStream_c5ea3ac9fb462264]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_stream_id : t -> bool","counters":[]},{"line":"        val stream_id_get : t -> StreamId.t","counters":[]},{"line":"        val stream_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val has_peer : t -> bool","counters":[]},{"line":"        val peer_get : t -> PeerInfo.t","counters":[]},{"line":"        val peer_get_pipelined : struct_t MessageWrapper.StructRef.t -> PeerInfo.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val has_protocol : t -> bool","counters":[]},{"line":"        val protocol_get : t -> string","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module StreamLost : sig","counters":[]},{"line":"        type struct_t = [`StreamLost_a2eea71b4749c940]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_stream_id : t -> bool","counters":[]},{"line":"        val stream_id_get : t -> StreamId.t","counters":[]},{"line":"        val stream_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val has_reason : t -> bool","counters":[]},{"line":"        val reason_get : t -> string","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module StreamComplete : sig","counters":[]},{"line":"        type struct_t = [`StreamComplete_bec4cf678af6fe9d]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_stream_id : t -> bool","counters":[]},{"line":"        val stream_id_get : t -> StreamId.t","counters":[]},{"line":"        val stream_id_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamId.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module StreamMessageReceived : sig","counters":[]},{"line":"        type struct_t = [`StreamMessageReceived_fe6afa3ac9731c83]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val has_msg : t -> bool","counters":[]},{"line":"        val msg_get : t -> StreamMessage.t","counters":[]},{"line":"        val msg_get_pipelined : struct_t MessageWrapper.StructRef.t -> StreamMessage.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module ResourceUpdate : sig","counters":[]},{"line":"        type struct_t = [`ResourceUpdate_edec79530db7ca8e]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        val type_get : t -> ResourceUpdateType.t","counters":[]},{"line":"        val has_ids : t -> bool","counters":[]},{"line":"        val ids_get : t -> (ro, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_get_list : t -> RootBlockId.t list","counters":[]},{"line":"        val ids_get_array : t -> RootBlockId.t array","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module PushMessage : sig","counters":[]},{"line":"        type struct_t = [`PushMessage_8ec8fa620071fa9f]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | PeerConnected of PeerConnected.t","counters":[]},{"line":"          | PeerDisconnected of PeerDisconnected.t","counters":[]},{"line":"          | GossipReceived of GossipReceived.t","counters":[]},{"line":"          | IncomingStream of IncomingStream.t","counters":[]},{"line":"          | StreamLost of StreamLost.t","counters":[]},{"line":"          | StreamComplete of StreamComplete.t","counters":[]},{"line":"          | StreamMessageReceived of StreamMessageReceived.t","counters":[]},{"line":"          | ResourceUpdated of ResourceUpdate.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val has_header : t -> bool","counters":[]},{"line":"        val header_get : t -> PushMessageHeader.t","counters":[]},{"line":"        val header_get_pipelined : struct_t MessageWrapper.StructRef.t -> PushMessageHeader.struct_t MessageWrapper.StructRef.t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Message : sig","counters":[]},{"line":"        type struct_t = [`Message_d78f8b719109324e]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | RpcResponse of Libp2pHelperInterface.RpcResponse.t","counters":[]},{"line":"          | PushMessage of PushMessage.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val of_message : 'cap message_t -> t","counters":[]},{"line":"        val of_builder : struct_t builder_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      val of_message : 'cap message_t -> t","counters":[]},{"line":"      val of_builder : struct_t builder_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Builder : sig","counters":[]},{"line":"    type array_t = Reader.builder_array_t","counters":[]},{"line":"    type reader_array_t = Reader.array_t","counters":[]},{"line":"    type pointer_t = rw MessageWrapper.Slice.t","counters":[]},{"line":"    module Multiaddr : sig","counters":[]},{"line":"      type struct_t = [`Multiaddr_ed11d634701b0d8e]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_representation : t -> bool","counters":[]},{"line":"      val representation_get : t -> string","counters":[]},{"line":"      val representation_set : t -> string -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module PeerId : sig","counters":[]},{"line":"      type struct_t = [`PeerId_caf9ffc384dfb56c]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_id : t -> bool","counters":[]},{"line":"      val id_get : t -> string","counters":[]},{"line":"      val id_set : t -> string -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module BlockWithId : sig","counters":[]},{"line":"      type struct_t = [`BlockWithId_a784810bf56d058c]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_blake2b_hash : t -> bool","counters":[]},{"line":"      val blake2b_hash_get : t -> string","counters":[]},{"line":"      val blake2b_hash_set : t -> string -> unit","counters":[]},{"line":"      val has_block : t -> bool","counters":[]},{"line":"      val block_get : t -> string","counters":[]},{"line":"      val block_set : t -> string -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module RootBlockId : sig","counters":[]},{"line":"      type struct_t = [`RootBlockId_abf6a984ba800725]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_blake2b_hash : t -> bool","counters":[]},{"line":"      val blake2b_hash_get : t -> string","counters":[]},{"line":"      val blake2b_hash_set : t -> string -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module AddrInfo : sig","counters":[]},{"line":"      type struct_t = [`AddrInfo_89e4194c3e64d647]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_peer_id : t -> bool","counters":[]},{"line":"      val peer_id_get : t -> PeerId.t","counters":[]},{"line":"      val peer_id_set_reader : t -> PeerId.struct_t reader_t -> PeerId.t","counters":[]},{"line":"      val peer_id_set_builder : t -> PeerId.t -> PeerId.t","counters":[]},{"line":"      val peer_id_init : t -> PeerId.t","counters":[]},{"line":"      val has_addrs : t -> bool","counters":[]},{"line":"      val addrs_get : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val addrs_get_list : t -> Multiaddr.t list","counters":[]},{"line":"      val addrs_get_array : t -> Multiaddr.t array","counters":[]},{"line":"      val addrs_set : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val addrs_set_list : t -> Multiaddr.t list -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val addrs_set_array : t -> Multiaddr.t array -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val addrs_init : t -> int -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module PeerInfo : sig","counters":[]},{"line":"      type struct_t = [`PeerInfo_ae7b97cc383b684e]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val libp2p_port_get : t -> int","counters":[]},{"line":"      val libp2p_port_set_exn : t -> int -> unit","counters":[]},{"line":"      val has_host : t -> bool","counters":[]},{"line":"      val host_get : t -> string","counters":[]},{"line":"      val host_set : t -> string -> unit","counters":[]},{"line":"      val has_peer_id : t -> bool","counters":[]},{"line":"      val peer_id_get : t -> PeerId.t","counters":[]},{"line":"      val peer_id_set_reader : t -> PeerId.struct_t reader_t -> PeerId.t","counters":[]},{"line":"      val peer_id_set_builder : t -> PeerId.t -> PeerId.t","counters":[]},{"line":"      val peer_id_init : t -> PeerId.t","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module SequenceNumber : sig","counters":[]},{"line":"      type struct_t = [`SequenceNumber_a5063d26e6e7aa47]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val seqno_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val seqno_get_int_exn : t -> int","counters":[]},{"line":"      val seqno_set : t -> Stdint.Uint64.t -> unit","counters":[]},{"line":"      val seqno_set_int_exn : t -> int -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module ValidationId : sig","counters":[]},{"line":"      type struct_t = [`ValidationId_89c0f3360eecf997]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val id_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val id_get_int_exn : t -> int","counters":[]},{"line":"      val id_set : t -> Stdint.Uint64.t -> unit","counters":[]},{"line":"      val id_set_int_exn : t -> int -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module StreamId : sig","counters":[]},{"line":"      type struct_t = [`StreamId_d3ec891916526de8]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val id_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val id_get_int_exn : t -> int","counters":[]},{"line":"      val id_set : t -> Stdint.Uint64.t -> unit","counters":[]},{"line":"      val id_set_int_exn : t -> int -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module SubscriptionId : sig","counters":[]},{"line":"      type struct_t = [`SubscriptionId_fc2430a71b2c8f44]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val id_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val id_get_int_exn : t -> int","counters":[]},{"line":"      val id_set : t -> Stdint.Uint64.t -> unit","counters":[]},{"line":"      val id_set_int_exn : t -> int -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module Libp2pKeypair : sig","counters":[]},{"line":"      type struct_t = [`Libp2pKeypair_fb61e5f7d6a0208e]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_private_key : t -> bool","counters":[]},{"line":"      val private_key_get : t -> string","counters":[]},{"line":"      val private_key_set : t -> string -> unit","counters":[]},{"line":"      val has_public_key : t -> bool","counters":[]},{"line":"      val public_key_get : t -> string","counters":[]},{"line":"      val public_key_set : t -> string -> unit","counters":[]},{"line":"      val has_peer_id : t -> bool","counters":[]},{"line":"      val peer_id_get : t -> PeerId.t","counters":[]},{"line":"      val peer_id_set_reader : t -> PeerId.struct_t reader_t -> PeerId.t","counters":[]},{"line":"      val peer_id_set_builder : t -> PeerId.t -> PeerId.t","counters":[]},{"line":"      val peer_id_init : t -> PeerId.t","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module GatingConfig : sig","counters":[]},{"line":"      type struct_t = [`GatingConfig_e1202e2bb52d45e6]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_banned_ips : t -> bool","counters":[]},{"line":"      val banned_ips_get : t -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_ips_get_list : t -> string list","counters":[]},{"line":"      val banned_ips_get_array : t -> string array","counters":[]},{"line":"      val banned_ips_set : t -> (rw, string, array_t) Capnp.Array.t -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_ips_set_list : t -> string list -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_ips_set_array : t -> string array -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_ips_init : t -> int -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val has_banned_peer_ids : t -> bool","counters":[]},{"line":"      val banned_peer_ids_get : t -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_peer_ids_get_list : t -> PeerId.t list","counters":[]},{"line":"      val banned_peer_ids_get_array : t -> PeerId.t array","counters":[]},{"line":"      val banned_peer_ids_set : t -> (rw, PeerId.t, array_t) Capnp.Array.t -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_peer_ids_set_list : t -> PeerId.t list -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_peer_ids_set_array : t -> PeerId.t array -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val banned_peer_ids_init : t -> int -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val has_trusted_ips : t -> bool","counters":[]},{"line":"      val trusted_ips_get : t -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_ips_get_list : t -> string list","counters":[]},{"line":"      val trusted_ips_get_array : t -> string array","counters":[]},{"line":"      val trusted_ips_set : t -> (rw, string, array_t) Capnp.Array.t -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_ips_set_list : t -> string list -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_ips_set_array : t -> string array -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_ips_init : t -> int -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val has_trusted_peer_ids : t -> bool","counters":[]},{"line":"      val trusted_peer_ids_get : t -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_peer_ids_get_list : t -> PeerId.t list","counters":[]},{"line":"      val trusted_peer_ids_get_array : t -> PeerId.t array","counters":[]},{"line":"      val trusted_peer_ids_set : t -> (rw, PeerId.t, array_t) Capnp.Array.t -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_peer_ids_set_list : t -> PeerId.t list -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_peer_ids_set_array : t -> PeerId.t array -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val trusted_peer_ids_init : t -> int -> (rw, PeerId.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val isolate_get : t -> bool","counters":[]},{"line":"      val isolate_set : t -> bool -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module TopicLevel : sig","counters":[]},{"line":"      type struct_t = [`TopicLevel_a382869c0ba548c2]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_topics : t -> bool","counters":[]},{"line":"      val topics_get : t -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val topics_get_list : t -> string list","counters":[]},{"line":"      val topics_get_array : t -> string array","counters":[]},{"line":"      val topics_set : t -> (rw, string, array_t) Capnp.Array.t -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val topics_set_list : t -> string list -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val topics_set_array : t -> string array -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val topics_init : t -> int -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module Libp2pConfig : sig","counters":[]},{"line":"      type struct_t = [`Libp2pConfig_c90f65b6852b9c22]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_statedir : t -> bool","counters":[]},{"line":"      val statedir_get : t -> string","counters":[]},{"line":"      val statedir_set : t -> string -> unit","counters":[]},{"line":"      val has_private_key : t -> bool","counters":[]},{"line":"      val private_key_get : t -> string","counters":[]},{"line":"      val private_key_set : t -> string -> unit","counters":[]},{"line":"      val has_network_id : t -> bool","counters":[]},{"line":"      val network_id_get : t -> string","counters":[]},{"line":"      val network_id_set : t -> string -> unit","counters":[]},{"line":"      val has_listen_on : t -> bool","counters":[]},{"line":"      val listen_on_get : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val listen_on_get_list : t -> Multiaddr.t list","counters":[]},{"line":"      val listen_on_get_array : t -> Multiaddr.t array","counters":[]},{"line":"      val listen_on_set : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val listen_on_set_list : t -> Multiaddr.t list -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val listen_on_set_array : t -> Multiaddr.t array -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val listen_on_init : t -> int -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val metrics_port_get : t -> int","counters":[]},{"line":"      val metrics_port_set_exn : t -> int -> unit","counters":[]},{"line":"      val has_external_multiaddr : t -> bool","counters":[]},{"line":"      val external_multiaddr_get : t -> Multiaddr.t","counters":[]},{"line":"      val external_multiaddr_set_reader : t -> Multiaddr.struct_t reader_t -> Multiaddr.t","counters":[]},{"line":"      val external_multiaddr_set_builder : t -> Multiaddr.t -> Multiaddr.t","counters":[]},{"line":"      val external_multiaddr_init : t -> Multiaddr.t","counters":[]},{"line":"      val unsafe_no_trust_ip_get : t -> bool","counters":[]},{"line":"      val unsafe_no_trust_ip_set : t -> bool -> unit","counters":[]},{"line":"      val flood_get : t -> bool","counters":[]},{"line":"      val flood_set : t -> bool -> unit","counters":[]},{"line":"      val peer_exchange_get : t -> bool","counters":[]},{"line":"      val peer_exchange_set : t -> bool -> unit","counters":[]},{"line":"      val has_direct_peers : t -> bool","counters":[]},{"line":"      val direct_peers_get : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val direct_peers_get_list : t -> Multiaddr.t list","counters":[]},{"line":"      val direct_peers_get_array : t -> Multiaddr.t array","counters":[]},{"line":"      val direct_peers_set : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val direct_peers_set_list : t -> Multiaddr.t list -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val direct_peers_set_array : t -> Multiaddr.t array -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val direct_peers_init : t -> int -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val has_seed_peers : t -> bool","counters":[]},{"line":"      val seed_peers_get : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val seed_peers_get_list : t -> Multiaddr.t list","counters":[]},{"line":"      val seed_peers_get_array : t -> Multiaddr.t array","counters":[]},{"line":"      val seed_peers_set : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val seed_peers_set_list : t -> Multiaddr.t list -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val seed_peers_set_array : t -> Multiaddr.t array -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val seed_peers_init : t -> int -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val has_gating_config : t -> bool","counters":[]},{"line":"      val gating_config_get : t -> GatingConfig.t","counters":[]},{"line":"      val gating_config_set_reader : t -> GatingConfig.struct_t reader_t -> GatingConfig.t","counters":[]},{"line":"      val gating_config_set_builder : t -> GatingConfig.t -> GatingConfig.t","counters":[]},{"line":"      val gating_config_init : t -> GatingConfig.t","counters":[]},{"line":"      val max_connections_get : t -> Stdint.Uint32.t","counters":[]},{"line":"      val max_connections_get_int_exn : t -> int","counters":[]},{"line":"      val max_connections_set : t -> Stdint.Uint32.t -> unit","counters":[]},{"line":"      val max_connections_set_int_exn : t -> int -> unit","counters":[]},{"line":"      val validation_queue_size_get : t -> Stdint.Uint32.t","counters":[]},{"line":"      val validation_queue_size_get_int_exn : t -> int","counters":[]},{"line":"      val validation_queue_size_set : t -> Stdint.Uint32.t -> unit","counters":[]},{"line":"      val validation_queue_size_set_int_exn : t -> int -> unit","counters":[]},{"line":"      val peer_protection_ratio_get : t -> float","counters":[]},{"line":"      val peer_protection_ratio_set : t -> float -> unit","counters":[]},{"line":"      val min_connections_get : t -> Stdint.Uint32.t","counters":[]},{"line":"      val min_connections_get_int_exn : t -> int","counters":[]},{"line":"      val min_connections_set : t -> Stdint.Uint32.t -> unit","counters":[]},{"line":"      val min_connections_set_int_exn : t -> int -> unit","counters":[]},{"line":"      val has_known_private_ip_nets : t -> bool","counters":[]},{"line":"      val known_private_ip_nets_get : t -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val known_private_ip_nets_get_list : t -> string list","counters":[]},{"line":"      val known_private_ip_nets_get_array : t -> string array","counters":[]},{"line":"      val known_private_ip_nets_set : t -> (rw, string, array_t) Capnp.Array.t -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val known_private_ip_nets_set_list : t -> string list -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val known_private_ip_nets_set_array : t -> string array -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val known_private_ip_nets_init : t -> int -> (rw, string, array_t) Capnp.Array.t","counters":[]},{"line":"      val has_topic_config : t -> bool","counters":[]},{"line":"      val topic_config_get : t -> (rw, TopicLevel.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val topic_config_get_list : t -> TopicLevel.t list","counters":[]},{"line":"      val topic_config_get_array : t -> TopicLevel.t array","counters":[]},{"line":"      val topic_config_set : t -> (rw, TopicLevel.t, array_t) Capnp.Array.t -> (rw, TopicLevel.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val topic_config_set_list : t -> TopicLevel.t list -> (rw, TopicLevel.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val topic_config_set_array : t -> TopicLevel.t array -> (rw, TopicLevel.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val topic_config_init : t -> int -> (rw, TopicLevel.t, array_t) Capnp.Array.t","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module ResourceUpdateType : sig","counters":[]},{"line":"      type t = ResourceUpdateType_12722323391428546450.t =","counters":[]},{"line":"        | Added","counters":[]},{"line":"        | Removed","counters":[]},{"line":"        | Broken","counters":[]},{"line":"        | Undefined of int","counters":[]},{"line":"    end","counters":[]},{"line":"    module ValidationResult : sig","counters":[]},{"line":"      type t = ValidationResult_12956713526515247866.t =","counters":[]},{"line":"        | Accept","counters":[]},{"line":"        | Reject","counters":[]},{"line":"        | Ignore","counters":[]},{"line":"        | Undefined of int","counters":[]},{"line":"    end","counters":[]},{"line":"    module StreamMessage : sig","counters":[]},{"line":"      type struct_t = [`StreamMessage_aa5cdd4cc2bd8222]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_stream_id : t -> bool","counters":[]},{"line":"      val stream_id_get : t -> StreamId.t","counters":[]},{"line":"      val stream_id_set_reader : t -> StreamId.struct_t reader_t -> StreamId.t","counters":[]},{"line":"      val stream_id_set_builder : t -> StreamId.t -> StreamId.t","counters":[]},{"line":"      val stream_id_init : t -> StreamId.t","counters":[]},{"line":"      val has_data : t -> bool","counters":[]},{"line":"      val data_get : t -> string","counters":[]},{"line":"      val data_set : t -> string -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module Duration : sig","counters":[]},{"line":"      type struct_t = [`Duration_bf96c4e0ff964090]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val nano_sec_get : t -> Stdint.Uint64.t","counters":[]},{"line":"      val nano_sec_get_int_exn : t -> int","counters":[]},{"line":"      val nano_sec_set : t -> Stdint.Uint64.t -> unit","counters":[]},{"line":"      val nano_sec_set_int_exn : t -> int -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module UnixNano : sig","counters":[]},{"line":"      type struct_t = [`UnixNano_9d6900bcb72b8938]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val nano_sec_get : t -> int64","counters":[]},{"line":"      val nano_sec_get_int_exn : t -> int","counters":[]},{"line":"      val nano_sec_set : t -> int64 -> unit","counters":[]},{"line":"      val nano_sec_set_int : t -> int -> unit","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module PushMessageHeader : sig","counters":[]},{"line":"      type struct_t = [`PushMessageHeader_a8298a9629f09cdc]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_time_sent : t -> bool","counters":[]},{"line":"      val time_sent_get : t -> UnixNano.t","counters":[]},{"line":"      val time_sent_set_reader : t -> UnixNano.struct_t reader_t -> UnixNano.t","counters":[]},{"line":"      val time_sent_set_builder : t -> UnixNano.t -> UnixNano.t","counters":[]},{"line":"      val time_sent_init : t -> UnixNano.t","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module RpcMessageHeader : sig","counters":[]},{"line":"      type struct_t = [`RpcMessageHeader_a244ebaa77d7c1cf]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      val has_time_sent : t -> bool","counters":[]},{"line":"      val time_sent_get : t -> UnixNano.t","counters":[]},{"line":"      val time_sent_set_reader : t -> UnixNano.struct_t reader_t -> UnixNano.t","counters":[]},{"line":"      val time_sent_set_builder : t -> UnixNano.t -> UnixNano.t","counters":[]},{"line":"      val time_sent_init : t -> UnixNano.t","counters":[]},{"line":"      val has_sequence_number : t -> bool","counters":[]},{"line":"      val sequence_number_get : t -> SequenceNumber.t","counters":[]},{"line":"      val sequence_number_set_reader : t -> SequenceNumber.struct_t reader_t -> SequenceNumber.t","counters":[]},{"line":"      val sequence_number_set_builder : t -> SequenceNumber.t -> SequenceNumber.t","counters":[]},{"line":"      val sequence_number_init : t -> SequenceNumber.t","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module Libp2pHelperInterface : sig","counters":[]},{"line":"      type struct_t = [`Libp2pHelperInterface_91c5868ca6847cc5]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      module Configure : sig","counters":[]},{"line":"        type struct_t = [`Configure_ff0e5f175237cf55]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_bbfd8fe6d222b0a1]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_config : t -> bool","counters":[]},{"line":"          val config_get : t -> Libp2pConfig.t","counters":[]},{"line":"          val config_set_reader : t -> Libp2pConfig.struct_t reader_t -> Libp2pConfig.t","counters":[]},{"line":"          val config_set_builder : t -> Libp2pConfig.t -> Libp2pConfig.t","counters":[]},{"line":"          val config_init : t -> Libp2pConfig.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_ffdbb8a4a072322b]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module SetGatingConfig : sig","counters":[]},{"line":"        type struct_t = [`SetGatingConfig_9eed76ad25f4d362]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_bae9227a811faef6]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_gating_config : t -> bool","counters":[]},{"line":"          val gating_config_get : t -> GatingConfig.t","counters":[]},{"line":"          val gating_config_set_reader : t -> GatingConfig.struct_t reader_t -> GatingConfig.t","counters":[]},{"line":"          val gating_config_set_builder : t -> GatingConfig.t -> GatingConfig.t","counters":[]},{"line":"          val gating_config_init : t -> GatingConfig.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_8b1c161e3d21d6b1]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Listen : sig","counters":[]},{"line":"        type struct_t = [`Listen_e884b52c8948d81b]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_cdbeb7cf54035b71]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_iface : t -> bool","counters":[]},{"line":"          val iface_get : t -> Multiaddr.t","counters":[]},{"line":"          val iface_set_reader : t -> Multiaddr.struct_t reader_t -> Multiaddr.t","counters":[]},{"line":"          val iface_set_builder : t -> Multiaddr.t -> Multiaddr.t","counters":[]},{"line":"          val iface_init : t -> Multiaddr.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_c1f9b9db8212bf72]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_get_list : t -> Multiaddr.t list","counters":[]},{"line":"          val result_get_array : t -> Multiaddr.t array","counters":[]},{"line":"          val result_set : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_set_list : t -> Multiaddr.t list -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_set_array : t -> Multiaddr.t array -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_init : t -> int -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module GetListeningAddrs : sig","counters":[]},{"line":"        type struct_t = [`GetListeningAddrs_f6c7b7d1f45c6434]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_83d991af72ada648]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_bae1386e815a99d1]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_get_list : t -> Multiaddr.t list","counters":[]},{"line":"          val result_get_array : t -> Multiaddr.t array","counters":[]},{"line":"          val result_set : t -> (rw, Multiaddr.t, array_t) Capnp.Array.t -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_set_list : t -> Multiaddr.t list -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_set_array : t -> Multiaddr.t array -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_init : t -> int -> (rw, Multiaddr.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module BeginAdvertising : sig","counters":[]},{"line":"        type struct_t = [`BeginAdvertising_fde7d941c690b3a7]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_d2e7ac23195dffe2]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_f6c843e7ba07b900]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module AddPeer : sig","counters":[]},{"line":"        type struct_t = [`AddPeer_ba41f14b128a1dd7]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_c258720d7c5c09ed]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_multiaddr : t -> bool","counters":[]},{"line":"          val multiaddr_get : t -> Multiaddr.t","counters":[]},{"line":"          val multiaddr_set_reader : t -> Multiaddr.struct_t reader_t -> Multiaddr.t","counters":[]},{"line":"          val multiaddr_set_builder : t -> Multiaddr.t -> Multiaddr.t","counters":[]},{"line":"          val multiaddr_init : t -> Multiaddr.t","counters":[]},{"line":"          val is_seed_get : t -> bool","counters":[]},{"line":"          val is_seed_set : t -> bool -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_9a9a8d03d3f08548]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module ListPeers : sig","counters":[]},{"line":"        type struct_t = [`ListPeers_d48ef9a8506586a6]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_bb6edc2598638c9c]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_fb54cca136535a14]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> (rw, PeerInfo.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_get_list : t -> PeerInfo.t list","counters":[]},{"line":"          val result_get_array : t -> PeerInfo.t array","counters":[]},{"line":"          val result_set : t -> (rw, PeerInfo.t, array_t) Capnp.Array.t -> (rw, PeerInfo.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_set_list : t -> PeerInfo.t list -> (rw, PeerInfo.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_set_array : t -> PeerInfo.t array -> (rw, PeerInfo.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val result_init : t -> int -> (rw, PeerInfo.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module BandwidthInfo : sig","counters":[]},{"line":"        type struct_t = [`BandwidthInfo_969a629719fde633]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_e4386d9ee8d69654]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_96359b995ba506f4]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val input_bandwidth_get : t -> float","counters":[]},{"line":"          val input_bandwidth_set : t -> float -> unit","counters":[]},{"line":"          val output_bandwidth_get : t -> float","counters":[]},{"line":"          val output_bandwidth_set : t -> float -> unit","counters":[]},{"line":"          val cpu_usage_get : t -> float","counters":[]},{"line":"          val cpu_usage_set : t -> float -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module GenerateKeypair : sig","counters":[]},{"line":"        type struct_t = [`GenerateKeypair_b973118252345b14]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_ce71e91d5eb99a49]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_b1b128c54a9c378a]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> Libp2pKeypair.t","counters":[]},{"line":"          val result_set_reader : t -> Libp2pKeypair.struct_t reader_t -> Libp2pKeypair.t","counters":[]},{"line":"          val result_set_builder : t -> Libp2pKeypair.t -> Libp2pKeypair.t","counters":[]},{"line":"          val result_init : t -> Libp2pKeypair.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Publish : sig","counters":[]},{"line":"        type struct_t = [`Publish_abd77ad6fe644f04]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_9cecb704bb2aeaaa]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_topic : t -> bool","counters":[]},{"line":"          val topic_get : t -> string","counters":[]},{"line":"          val topic_set : t -> string -> unit","counters":[]},{"line":"          val has_data : t -> bool","counters":[]},{"line":"          val data_get : t -> string","counters":[]},{"line":"          val data_set : t -> string -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_b608443b70279f42]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Subscribe : sig","counters":[]},{"line":"        type struct_t = [`Subscribe_87e63b07187d61fd]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f30859dedd19e179]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_topic : t -> bool","counters":[]},{"line":"          val topic_get : t -> string","counters":[]},{"line":"          val topic_set : t -> string -> unit","counters":[]},{"line":"          val has_subscription_id : t -> bool","counters":[]},{"line":"          val subscription_id_get : t -> SubscriptionId.t","counters":[]},{"line":"          val subscription_id_set_reader : t -> SubscriptionId.struct_t reader_t -> SubscriptionId.t","counters":[]},{"line":"          val subscription_id_set_builder : t -> SubscriptionId.t -> SubscriptionId.t","counters":[]},{"line":"          val subscription_id_init : t -> SubscriptionId.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_a969a5ea58b5581c]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Unsubscribe : sig","counters":[]},{"line":"        type struct_t = [`Unsubscribe_cce2ad102c7ea857]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f3e0ba7fbe583065]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_subscription_id : t -> bool","counters":[]},{"line":"          val subscription_id_get : t -> SubscriptionId.t","counters":[]},{"line":"          val subscription_id_set_reader : t -> SubscriptionId.struct_t reader_t -> SubscriptionId.t","counters":[]},{"line":"          val subscription_id_set_builder : t -> SubscriptionId.t -> SubscriptionId.t","counters":[]},{"line":"          val subscription_id_init : t -> SubscriptionId.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_af6af6e1ad511e3a]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module AddStreamHandler : sig","counters":[]},{"line":"        type struct_t = [`AddStreamHandler_87594eae8c8531ee]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_a42892d737705a9c]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_protocol : t -> bool","counters":[]},{"line":"          val protocol_get : t -> string","counters":[]},{"line":"          val protocol_set : t -> string -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_f2765705336251b5]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module RemoveStreamHandler : sig","counters":[]},{"line":"        type struct_t = [`RemoveStreamHandler_c909f587e1bb9499]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_b822fab66dabdf26]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_protocol : t -> bool","counters":[]},{"line":"          val protocol_get : t -> string","counters":[]},{"line":"          val protocol_set : t -> string -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_caae22b415293cb3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module OpenStream : sig","counters":[]},{"line":"        type struct_t = [`OpenStream_dc75bca71078eb01]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f77175f458d711a8]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_peer : t -> bool","counters":[]},{"line":"          val peer_get : t -> PeerId.t","counters":[]},{"line":"          val peer_set_reader : t -> PeerId.struct_t reader_t -> PeerId.t","counters":[]},{"line":"          val peer_set_builder : t -> PeerId.t -> PeerId.t","counters":[]},{"line":"          val peer_init : t -> PeerId.t","counters":[]},{"line":"          val has_protocol_id : t -> bool","counters":[]},{"line":"          val protocol_id_get : t -> string","counters":[]},{"line":"          val protocol_id_set : t -> string -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_918222cd43d37f6c]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_stream_id : t -> bool","counters":[]},{"line":"          val stream_id_get : t -> StreamId.t","counters":[]},{"line":"          val stream_id_set_reader : t -> StreamId.struct_t reader_t -> StreamId.t","counters":[]},{"line":"          val stream_id_set_builder : t -> StreamId.t -> StreamId.t","counters":[]},{"line":"          val stream_id_init : t -> StreamId.t","counters":[]},{"line":"          val has_peer : t -> bool","counters":[]},{"line":"          val peer_get : t -> PeerInfo.t","counters":[]},{"line":"          val peer_set_reader : t -> PeerInfo.struct_t reader_t -> PeerInfo.t","counters":[]},{"line":"          val peer_set_builder : t -> PeerInfo.t -> PeerInfo.t","counters":[]},{"line":"          val peer_init : t -> PeerInfo.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module CloseStream : sig","counters":[]},{"line":"        type struct_t = [`CloseStream_fb4640ea8f01c33b]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_956577d02c2197b3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_stream_id : t -> bool","counters":[]},{"line":"          val stream_id_get : t -> StreamId.t","counters":[]},{"line":"          val stream_id_set_reader : t -> StreamId.struct_t reader_t -> StreamId.t","counters":[]},{"line":"          val stream_id_set_builder : t -> StreamId.t -> StreamId.t","counters":[]},{"line":"          val stream_id_init : t -> StreamId.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_dea74fe5c2096c99]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module ResetStream : sig","counters":[]},{"line":"        type struct_t = [`ResetStream_aa5672b913b9c728]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f2ba9a25df1929e3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_stream_id : t -> bool","counters":[]},{"line":"          val stream_id_get : t -> StreamId.t","counters":[]},{"line":"          val stream_id_set_reader : t -> StreamId.struct_t reader_t -> StreamId.t","counters":[]},{"line":"          val stream_id_set_builder : t -> StreamId.t -> StreamId.t","counters":[]},{"line":"          val stream_id_init : t -> StreamId.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_a4ef405cd24ad7a3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module SendStream : sig","counters":[]},{"line":"        type struct_t = [`SendStream_e079d0d7c895a200]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_f6ac925efcae1dda]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_msg : t -> bool","counters":[]},{"line":"          val msg_get : t -> StreamMessage.t","counters":[]},{"line":"          val msg_set_reader : t -> StreamMessage.struct_t reader_t -> StreamMessage.t","counters":[]},{"line":"          val msg_set_builder : t -> StreamMessage.t -> StreamMessage.t","counters":[]},{"line":"          val msg_init : t -> StreamMessage.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_934ce73a7d9d3d3a]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module SetNodeStatus : sig","counters":[]},{"line":"        type struct_t = [`SetNodeStatus_806d105a074b7e19]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_fcf94c0b3ea7ac29]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_status : t -> bool","counters":[]},{"line":"          val status_get : t -> string","counters":[]},{"line":"          val status_set : t -> string -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_f1a5d120cfd28003]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module GetPeerNodeStatus : sig","counters":[]},{"line":"        type struct_t = [`GetPeerNodeStatus_d5738b22303fce4e]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_eb7b01a9c0a1e9cb]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_peer : t -> bool","counters":[]},{"line":"          val peer_get : t -> Multiaddr.t","counters":[]},{"line":"          val peer_set_reader : t -> Multiaddr.struct_t reader_t -> Multiaddr.t","counters":[]},{"line":"          val peer_set_builder : t -> Multiaddr.t -> Multiaddr.t","counters":[]},{"line":"          val peer_init : t -> Multiaddr.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_fb9439112386d425]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_result : t -> bool","counters":[]},{"line":"          val result_get : t -> string","counters":[]},{"line":"          val result_set : t -> string -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module TestDecodeBitswapBlocks : sig","counters":[]},{"line":"        type struct_t = [`TestDecodeBitswapBlocks_e5780789678719ec]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_8050be5b024b71ef]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_blocks : t -> bool","counters":[]},{"line":"          val blocks_get : t -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_get_list : t -> BlockWithId.t list","counters":[]},{"line":"          val blocks_get_array : t -> BlockWithId.t array","counters":[]},{"line":"          val blocks_set : t -> (rw, BlockWithId.t, array_t) Capnp.Array.t -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_set_list : t -> BlockWithId.t list -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_set_array : t -> BlockWithId.t array -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_init : t -> int -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val has_root_block_id : t -> bool","counters":[]},{"line":"          val root_block_id_get : t -> RootBlockId.t","counters":[]},{"line":"          val root_block_id_set_reader : t -> RootBlockId.struct_t reader_t -> RootBlockId.t","counters":[]},{"line":"          val root_block_id_set_builder : t -> RootBlockId.t -> RootBlockId.t","counters":[]},{"line":"          val root_block_id_init : t -> RootBlockId.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_b0506afb32106477]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_decoded_data : t -> bool","counters":[]},{"line":"          val decoded_data_get : t -> string","counters":[]},{"line":"          val decoded_data_set : t -> string -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module TestEncodeBitswapBlocks : sig","counters":[]},{"line":"        type struct_t = [`TestEncodeBitswapBlocks_fdbea00423ed6c49]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request : sig","counters":[]},{"line":"          type struct_t = [`Request_a6a24bb291f80ca6]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_data : t -> bool","counters":[]},{"line":"          val data_get : t -> string","counters":[]},{"line":"          val data_set : t -> string -> unit","counters":[]},{"line":"          val max_block_size_get : t -> int64","counters":[]},{"line":"          val max_block_size_get_int_exn : t -> int","counters":[]},{"line":"          val max_block_size_set : t -> int64 -> unit","counters":[]},{"line":"          val max_block_size_set_int : t -> int -> unit","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        module Response : sig","counters":[]},{"line":"          type struct_t = [`Response_c2cfafb29b55e5d3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          val has_blocks : t -> bool","counters":[]},{"line":"          val blocks_get : t -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_get_list : t -> BlockWithId.t list","counters":[]},{"line":"          val blocks_get_array : t -> BlockWithId.t array","counters":[]},{"line":"          val blocks_set : t -> (rw, BlockWithId.t, array_t) Capnp.Array.t -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_set_list : t -> BlockWithId.t list -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_set_array : t -> BlockWithId.t array -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val blocks_init : t -> int -> (rw, BlockWithId.t, array_t) Capnp.Array.t","counters":[]},{"line":"          val has_root_block_id : t -> bool","counters":[]},{"line":"          val root_block_id_get : t -> RootBlockId.t","counters":[]},{"line":"          val root_block_id_set_reader : t -> RootBlockId.struct_t reader_t -> RootBlockId.t","counters":[]},{"line":"          val root_block_id_set_builder : t -> RootBlockId.t -> RootBlockId.t","counters":[]},{"line":"          val root_block_id_init : t -> RootBlockId.t","counters":[]},{"line":"          val of_message : rw message_t -> t","counters":[]},{"line":"          val to_message : t -> rw message_t","counters":[]},{"line":"          val to_reader : t -> struct_t reader_t","counters":[]},{"line":"          val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"          val init_pointer : pointer_t -> t","counters":[]},{"line":"        end","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Validation : sig","counters":[]},{"line":"        type struct_t = [`Validation_89d8e42d7f3a4f67]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_validation_id : t -> bool","counters":[]},{"line":"        val validation_id_get : t -> ValidationId.t","counters":[]},{"line":"        val validation_id_set_reader : t -> ValidationId.struct_t reader_t -> ValidationId.t","counters":[]},{"line":"        val validation_id_set_builder : t -> ValidationId.t -> ValidationId.t","counters":[]},{"line":"        val validation_id_init : t -> ValidationId.t","counters":[]},{"line":"        val result_get : t -> ValidationResult.t","counters":[]},{"line":"        val result_set : t -> ValidationResult.t -> unit","counters":[]},{"line":"        val result_set_unsafe : t -> ValidationResult.t -> unit","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module DeleteResource : sig","counters":[]},{"line":"        type struct_t = [`DeleteResource_86badb3b545b9790]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_ids : t -> bool","counters":[]},{"line":"        val ids_get : t -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_get_list : t -> RootBlockId.t list","counters":[]},{"line":"        val ids_get_array : t -> RootBlockId.t array","counters":[]},{"line":"        val ids_set : t -> (rw, RootBlockId.t, array_t) Capnp.Array.t -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_set_list : t -> RootBlockId.t list -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_set_array : t -> RootBlockId.t array -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_init : t -> int -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module HeartbeatPeer : sig","counters":[]},{"line":"        type struct_t = [`HeartbeatPeer_a2ca930f070de840]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_id : t -> bool","counters":[]},{"line":"        val id_get : t -> PeerId.t","counters":[]},{"line":"        val id_set_reader : t -> PeerId.struct_t reader_t -> PeerId.t","counters":[]},{"line":"        val id_set_builder : t -> PeerId.t -> PeerId.t","counters":[]},{"line":"        val id_init : t -> PeerId.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module DownloadResource : sig","counters":[]},{"line":"        type struct_t = [`DownloadResource_e2fe4f9a5e1a5358]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val tag_get : t -> int","counters":[]},{"line":"        val tag_set_exn : t -> int -> unit","counters":[]},{"line":"        val has_ids : t -> bool","counters":[]},{"line":"        val ids_get : t -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_get_list : t -> RootBlockId.t list","counters":[]},{"line":"        val ids_get_array : t -> RootBlockId.t array","counters":[]},{"line":"        val ids_set : t -> (rw, RootBlockId.t, array_t) Capnp.Array.t -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_set_list : t -> RootBlockId.t list -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_set_array : t -> RootBlockId.t array -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_init : t -> int -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module AddResource : sig","counters":[]},{"line":"        type struct_t = [`AddResource_b28801bad1dacef0]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val tag_get : t -> int","counters":[]},{"line":"        val tag_set_exn : t -> int -> unit","counters":[]},{"line":"        val has_data : t -> bool","counters":[]},{"line":"        val data_get : t -> string","counters":[]},{"line":"        val data_set : t -> string -> unit","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module RpcRequest : sig","counters":[]},{"line":"        type struct_t = [`RpcRequest_e448fafba2ab92e3]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Configure of Configure.Request.t","counters":[]},{"line":"          | SetGatingConfig of SetGatingConfig.Request.t","counters":[]},{"line":"          | Listen of Listen.Request.t","counters":[]},{"line":"          | GetListeningAddrs of GetListeningAddrs.Request.t","counters":[]},{"line":"          | BeginAdvertising of BeginAdvertising.Request.t","counters":[]},{"line":"          | AddPeer of AddPeer.Request.t","counters":[]},{"line":"          | ListPeers of ListPeers.Request.t","counters":[]},{"line":"          | GenerateKeypair of GenerateKeypair.Request.t","counters":[]},{"line":"          | Publish of Publish.Request.t","counters":[]},{"line":"          | Subscribe of Subscribe.Request.t","counters":[]},{"line":"          | Unsubscribe of Unsubscribe.Request.t","counters":[]},{"line":"          | AddStreamHandler of AddStreamHandler.Request.t","counters":[]},{"line":"          | RemoveStreamHandler of RemoveStreamHandler.Request.t","counters":[]},{"line":"          | OpenStream of OpenStream.Request.t","counters":[]},{"line":"          | CloseStream of CloseStream.Request.t","counters":[]},{"line":"          | ResetStream of ResetStream.Request.t","counters":[]},{"line":"          | SendStream of SendStream.Request.t","counters":[]},{"line":"          | SetNodeStatus of SetNodeStatus.Request.t","counters":[]},{"line":"          | GetPeerNodeStatus of GetPeerNodeStatus.Request.t","counters":[]},{"line":"          | BandwidthInfo of BandwidthInfo.Request.t","counters":[]},{"line":"          | TestDecodeBitswapBlocks of TestDecodeBitswapBlocks.Request.t","counters":[]},{"line":"          | TestEncodeBitswapBlocks of TestEncodeBitswapBlocks.Request.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val configure_set_reader : t -> Configure.Request.struct_t reader_t -> Configure.Request.t","counters":[]},{"line":"        val configure_set_builder : t -> Configure.Request.t -> Configure.Request.t","counters":[]},{"line":"        val configure_init : t -> Configure.Request.t","counters":[]},{"line":"        val set_gating_config_set_reader : t -> SetGatingConfig.Request.struct_t reader_t -> SetGatingConfig.Request.t","counters":[]},{"line":"        val set_gating_config_set_builder : t -> SetGatingConfig.Request.t -> SetGatingConfig.Request.t","counters":[]},{"line":"        val set_gating_config_init : t -> SetGatingConfig.Request.t","counters":[]},{"line":"        val listen_set_reader : t -> Listen.Request.struct_t reader_t -> Listen.Request.t","counters":[]},{"line":"        val listen_set_builder : t -> Listen.Request.t -> Listen.Request.t","counters":[]},{"line":"        val listen_init : t -> Listen.Request.t","counters":[]},{"line":"        val get_listening_addrs_set_reader : t -> GetListeningAddrs.Request.struct_t reader_t -> GetListeningAddrs.Request.t","counters":[]},{"line":"        val get_listening_addrs_set_builder : t -> GetListeningAddrs.Request.t -> GetListeningAddrs.Request.t","counters":[]},{"line":"        val get_listening_addrs_init : t -> GetListeningAddrs.Request.t","counters":[]},{"line":"        val begin_advertising_set_reader : t -> BeginAdvertising.Request.struct_t reader_t -> BeginAdvertising.Request.t","counters":[]},{"line":"        val begin_advertising_set_builder : t -> BeginAdvertising.Request.t -> BeginAdvertising.Request.t","counters":[]},{"line":"        val begin_advertising_init : t -> BeginAdvertising.Request.t","counters":[]},{"line":"        val add_peer_set_reader : t -> AddPeer.Request.struct_t reader_t -> AddPeer.Request.t","counters":[]},{"line":"        val add_peer_set_builder : t -> AddPeer.Request.t -> AddPeer.Request.t","counters":[]},{"line":"        val add_peer_init : t -> AddPeer.Request.t","counters":[]},{"line":"        val list_peers_set_reader : t -> ListPeers.Request.struct_t reader_t -> ListPeers.Request.t","counters":[]},{"line":"        val list_peers_set_builder : t -> ListPeers.Request.t -> ListPeers.Request.t","counters":[]},{"line":"        val list_peers_init : t -> ListPeers.Request.t","counters":[]},{"line":"        val generate_keypair_set_reader : t -> GenerateKeypair.Request.struct_t reader_t -> GenerateKeypair.Request.t","counters":[]},{"line":"        val generate_keypair_set_builder : t -> GenerateKeypair.Request.t -> GenerateKeypair.Request.t","counters":[]},{"line":"        val generate_keypair_init : t -> GenerateKeypair.Request.t","counters":[]},{"line":"        val publish_set_reader : t -> Publish.Request.struct_t reader_t -> Publish.Request.t","counters":[]},{"line":"        val publish_set_builder : t -> Publish.Request.t -> Publish.Request.t","counters":[]},{"line":"        val publish_init : t -> Publish.Request.t","counters":[]},{"line":"        val subscribe_set_reader : t -> Subscribe.Request.struct_t reader_t -> Subscribe.Request.t","counters":[]},{"line":"        val subscribe_set_builder : t -> Subscribe.Request.t -> Subscribe.Request.t","counters":[]},{"line":"        val subscribe_init : t -> Subscribe.Request.t","counters":[]},{"line":"        val unsubscribe_set_reader : t -> Unsubscribe.Request.struct_t reader_t -> Unsubscribe.Request.t","counters":[]},{"line":"        val unsubscribe_set_builder : t -> Unsubscribe.Request.t -> Unsubscribe.Request.t","counters":[]},{"line":"        val unsubscribe_init : t -> Unsubscribe.Request.t","counters":[]},{"line":"        val add_stream_handler_set_reader : t -> AddStreamHandler.Request.struct_t reader_t -> AddStreamHandler.Request.t","counters":[]},{"line":"        val add_stream_handler_set_builder : t -> AddStreamHandler.Request.t -> AddStreamHandler.Request.t","counters":[]},{"line":"        val add_stream_handler_init : t -> AddStreamHandler.Request.t","counters":[]},{"line":"        val remove_stream_handler_set_reader : t -> RemoveStreamHandler.Request.struct_t reader_t -> RemoveStreamHandler.Request.t","counters":[]},{"line":"        val remove_stream_handler_set_builder : t -> RemoveStreamHandler.Request.t -> RemoveStreamHandler.Request.t","counters":[]},{"line":"        val remove_stream_handler_init : t -> RemoveStreamHandler.Request.t","counters":[]},{"line":"        val open_stream_set_reader : t -> OpenStream.Request.struct_t reader_t -> OpenStream.Request.t","counters":[]},{"line":"        val open_stream_set_builder : t -> OpenStream.Request.t -> OpenStream.Request.t","counters":[]},{"line":"        val open_stream_init : t -> OpenStream.Request.t","counters":[]},{"line":"        val close_stream_set_reader : t -> CloseStream.Request.struct_t reader_t -> CloseStream.Request.t","counters":[]},{"line":"        val close_stream_set_builder : t -> CloseStream.Request.t -> CloseStream.Request.t","counters":[]},{"line":"        val close_stream_init : t -> CloseStream.Request.t","counters":[]},{"line":"        val reset_stream_set_reader : t -> ResetStream.Request.struct_t reader_t -> ResetStream.Request.t","counters":[]},{"line":"        val reset_stream_set_builder : t -> ResetStream.Request.t -> ResetStream.Request.t","counters":[]},{"line":"        val reset_stream_init : t -> ResetStream.Request.t","counters":[]},{"line":"        val send_stream_set_reader : t -> SendStream.Request.struct_t reader_t -> SendStream.Request.t","counters":[]},{"line":"        val send_stream_set_builder : t -> SendStream.Request.t -> SendStream.Request.t","counters":[]},{"line":"        val send_stream_init : t -> SendStream.Request.t","counters":[]},{"line":"        val set_node_status_set_reader : t -> SetNodeStatus.Request.struct_t reader_t -> SetNodeStatus.Request.t","counters":[]},{"line":"        val set_node_status_set_builder : t -> SetNodeStatus.Request.t -> SetNodeStatus.Request.t","counters":[]},{"line":"        val set_node_status_init : t -> SetNodeStatus.Request.t","counters":[]},{"line":"        val get_peer_node_status_set_reader : t -> GetPeerNodeStatus.Request.struct_t reader_t -> GetPeerNodeStatus.Request.t","counters":[]},{"line":"        val get_peer_node_status_set_builder : t -> GetPeerNodeStatus.Request.t -> GetPeerNodeStatus.Request.t","counters":[]},{"line":"        val get_peer_node_status_init : t -> GetPeerNodeStatus.Request.t","counters":[]},{"line":"        val bandwidth_info_set_reader : t -> BandwidthInfo.Request.struct_t reader_t -> BandwidthInfo.Request.t","counters":[]},{"line":"        val bandwidth_info_set_builder : t -> BandwidthInfo.Request.t -> BandwidthInfo.Request.t","counters":[]},{"line":"        val bandwidth_info_init : t -> BandwidthInfo.Request.t","counters":[]},{"line":"        val test_decode_bitswap_blocks_set_reader : t -> TestDecodeBitswapBlocks.Request.struct_t reader_t -> TestDecodeBitswapBlocks.Request.t","counters":[]},{"line":"        val test_decode_bitswap_blocks_set_builder : t -> TestDecodeBitswapBlocks.Request.t -> TestDecodeBitswapBlocks.Request.t","counters":[]},{"line":"        val test_decode_bitswap_blocks_init : t -> TestDecodeBitswapBlocks.Request.t","counters":[]},{"line":"        val test_encode_bitswap_blocks_set_reader : t -> TestEncodeBitswapBlocks.Request.struct_t reader_t -> TestEncodeBitswapBlocks.Request.t","counters":[]},{"line":"        val test_encode_bitswap_blocks_set_builder : t -> TestEncodeBitswapBlocks.Request.t -> TestEncodeBitswapBlocks.Request.t","counters":[]},{"line":"        val test_encode_bitswap_blocks_init : t -> TestEncodeBitswapBlocks.Request.t","counters":[]},{"line":"        val has_header : t -> bool","counters":[]},{"line":"        val header_get : t -> RpcMessageHeader.t","counters":[]},{"line":"        val header_set_reader : t -> RpcMessageHeader.struct_t reader_t -> RpcMessageHeader.t","counters":[]},{"line":"        val header_set_builder : t -> RpcMessageHeader.t -> RpcMessageHeader.t","counters":[]},{"line":"        val header_init : t -> RpcMessageHeader.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module RpcResponseSuccess : sig","counters":[]},{"line":"        type struct_t = [`RpcResponseSuccess_aa166667db5b6b9d]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Configure of Configure.Response.t","counters":[]},{"line":"          | SetGatingConfig of SetGatingConfig.Response.t","counters":[]},{"line":"          | Listen of Listen.Response.t","counters":[]},{"line":"          | GetListeningAddrs of GetListeningAddrs.Response.t","counters":[]},{"line":"          | BeginAdvertising of BeginAdvertising.Response.t","counters":[]},{"line":"          | AddPeer of AddPeer.Response.t","counters":[]},{"line":"          | ListPeers of ListPeers.Response.t","counters":[]},{"line":"          | GenerateKeypair of GenerateKeypair.Response.t","counters":[]},{"line":"          | Publish of Publish.Response.t","counters":[]},{"line":"          | Subscribe of Subscribe.Response.t","counters":[]},{"line":"          | Unsubscribe of Unsubscribe.Response.t","counters":[]},{"line":"          | AddStreamHandler of AddStreamHandler.Response.t","counters":[]},{"line":"          | RemoveStreamHandler of RemoveStreamHandler.Response.t","counters":[]},{"line":"          | OpenStream of OpenStream.Response.t","counters":[]},{"line":"          | CloseStream of CloseStream.Response.t","counters":[]},{"line":"          | ResetStream of ResetStream.Response.t","counters":[]},{"line":"          | SendStream of SendStream.Response.t","counters":[]},{"line":"          | SetNodeStatus of SetNodeStatus.Response.t","counters":[]},{"line":"          | GetPeerNodeStatus of GetPeerNodeStatus.Response.t","counters":[]},{"line":"          | BandwidthInfo of BandwidthInfo.Response.t","counters":[]},{"line":"          | TestDecodeBitswapBlocks of TestDecodeBitswapBlocks.Response.t","counters":[]},{"line":"          | TestEncodeBitswapBlocks of TestEncodeBitswapBlocks.Response.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val configure_set_reader : t -> Configure.Response.struct_t reader_t -> Configure.Response.t","counters":[]},{"line":"        val configure_set_builder : t -> Configure.Response.t -> Configure.Response.t","counters":[]},{"line":"        val configure_init : t -> Configure.Response.t","counters":[]},{"line":"        val set_gating_config_set_reader : t -> SetGatingConfig.Response.struct_t reader_t -> SetGatingConfig.Response.t","counters":[]},{"line":"        val set_gating_config_set_builder : t -> SetGatingConfig.Response.t -> SetGatingConfig.Response.t","counters":[]},{"line":"        val set_gating_config_init : t -> SetGatingConfig.Response.t","counters":[]},{"line":"        val listen_set_reader : t -> Listen.Response.struct_t reader_t -> Listen.Response.t","counters":[]},{"line":"        val listen_set_builder : t -> Listen.Response.t -> Listen.Response.t","counters":[]},{"line":"        val listen_init : t -> Listen.Response.t","counters":[]},{"line":"        val get_listening_addrs_set_reader : t -> GetListeningAddrs.Response.struct_t reader_t -> GetListeningAddrs.Response.t","counters":[]},{"line":"        val get_listening_addrs_set_builder : t -> GetListeningAddrs.Response.t -> GetListeningAddrs.Response.t","counters":[]},{"line":"        val get_listening_addrs_init : t -> GetListeningAddrs.Response.t","counters":[]},{"line":"        val begin_advertising_set_reader : t -> BeginAdvertising.Response.struct_t reader_t -> BeginAdvertising.Response.t","counters":[]},{"line":"        val begin_advertising_set_builder : t -> BeginAdvertising.Response.t -> BeginAdvertising.Response.t","counters":[]},{"line":"        val begin_advertising_init : t -> BeginAdvertising.Response.t","counters":[]},{"line":"        val add_peer_set_reader : t -> AddPeer.Response.struct_t reader_t -> AddPeer.Response.t","counters":[]},{"line":"        val add_peer_set_builder : t -> AddPeer.Response.t -> AddPeer.Response.t","counters":[]},{"line":"        val add_peer_init : t -> AddPeer.Response.t","counters":[]},{"line":"        val list_peers_set_reader : t -> ListPeers.Response.struct_t reader_t -> ListPeers.Response.t","counters":[]},{"line":"        val list_peers_set_builder : t -> ListPeers.Response.t -> ListPeers.Response.t","counters":[]},{"line":"        val list_peers_init : t -> ListPeers.Response.t","counters":[]},{"line":"        val generate_keypair_set_reader : t -> GenerateKeypair.Response.struct_t reader_t -> GenerateKeypair.Response.t","counters":[]},{"line":"        val generate_keypair_set_builder : t -> GenerateKeypair.Response.t -> GenerateKeypair.Response.t","counters":[]},{"line":"        val generate_keypair_init : t -> GenerateKeypair.Response.t","counters":[]},{"line":"        val publish_set_reader : t -> Publish.Response.struct_t reader_t -> Publish.Response.t","counters":[]},{"line":"        val publish_set_builder : t -> Publish.Response.t -> Publish.Response.t","counters":[]},{"line":"        val publish_init : t -> Publish.Response.t","counters":[]},{"line":"        val subscribe_set_reader : t -> Subscribe.Response.struct_t reader_t -> Subscribe.Response.t","counters":[]},{"line":"        val subscribe_set_builder : t -> Subscribe.Response.t -> Subscribe.Response.t","counters":[]},{"line":"        val subscribe_init : t -> Subscribe.Response.t","counters":[]},{"line":"        val unsubscribe_set_reader : t -> Unsubscribe.Response.struct_t reader_t -> Unsubscribe.Response.t","counters":[]},{"line":"        val unsubscribe_set_builder : t -> Unsubscribe.Response.t -> Unsubscribe.Response.t","counters":[]},{"line":"        val unsubscribe_init : t -> Unsubscribe.Response.t","counters":[]},{"line":"        val add_stream_handler_set_reader : t -> AddStreamHandler.Response.struct_t reader_t -> AddStreamHandler.Response.t","counters":[]},{"line":"        val add_stream_handler_set_builder : t -> AddStreamHandler.Response.t -> AddStreamHandler.Response.t","counters":[]},{"line":"        val add_stream_handler_init : t -> AddStreamHandler.Response.t","counters":[]},{"line":"        val remove_stream_handler_set_reader : t -> RemoveStreamHandler.Response.struct_t reader_t -> RemoveStreamHandler.Response.t","counters":[]},{"line":"        val remove_stream_handler_set_builder : t -> RemoveStreamHandler.Response.t -> RemoveStreamHandler.Response.t","counters":[]},{"line":"        val remove_stream_handler_init : t -> RemoveStreamHandler.Response.t","counters":[]},{"line":"        val open_stream_set_reader : t -> OpenStream.Response.struct_t reader_t -> OpenStream.Response.t","counters":[]},{"line":"        val open_stream_set_builder : t -> OpenStream.Response.t -> OpenStream.Response.t","counters":[]},{"line":"        val open_stream_init : t -> OpenStream.Response.t","counters":[]},{"line":"        val close_stream_set_reader : t -> CloseStream.Response.struct_t reader_t -> CloseStream.Response.t","counters":[]},{"line":"        val close_stream_set_builder : t -> CloseStream.Response.t -> CloseStream.Response.t","counters":[]},{"line":"        val close_stream_init : t -> CloseStream.Response.t","counters":[]},{"line":"        val reset_stream_set_reader : t -> ResetStream.Response.struct_t reader_t -> ResetStream.Response.t","counters":[]},{"line":"        val reset_stream_set_builder : t -> ResetStream.Response.t -> ResetStream.Response.t","counters":[]},{"line":"        val reset_stream_init : t -> ResetStream.Response.t","counters":[]},{"line":"        val send_stream_set_reader : t -> SendStream.Response.struct_t reader_t -> SendStream.Response.t","counters":[]},{"line":"        val send_stream_set_builder : t -> SendStream.Response.t -> SendStream.Response.t","counters":[]},{"line":"        val send_stream_init : t -> SendStream.Response.t","counters":[]},{"line":"        val set_node_status_set_reader : t -> SetNodeStatus.Response.struct_t reader_t -> SetNodeStatus.Response.t","counters":[]},{"line":"        val set_node_status_set_builder : t -> SetNodeStatus.Response.t -> SetNodeStatus.Response.t","counters":[]},{"line":"        val set_node_status_init : t -> SetNodeStatus.Response.t","counters":[]},{"line":"        val get_peer_node_status_set_reader : t -> GetPeerNodeStatus.Response.struct_t reader_t -> GetPeerNodeStatus.Response.t","counters":[]},{"line":"        val get_peer_node_status_set_builder : t -> GetPeerNodeStatus.Response.t -> GetPeerNodeStatus.Response.t","counters":[]},{"line":"        val get_peer_node_status_init : t -> GetPeerNodeStatus.Response.t","counters":[]},{"line":"        val bandwidth_info_set_reader : t -> BandwidthInfo.Response.struct_t reader_t -> BandwidthInfo.Response.t","counters":[]},{"line":"        val bandwidth_info_set_builder : t -> BandwidthInfo.Response.t -> BandwidthInfo.Response.t","counters":[]},{"line":"        val bandwidth_info_init : t -> BandwidthInfo.Response.t","counters":[]},{"line":"        val test_decode_bitswap_blocks_set_reader : t -> TestDecodeBitswapBlocks.Response.struct_t reader_t -> TestDecodeBitswapBlocks.Response.t","counters":[]},{"line":"        val test_decode_bitswap_blocks_set_builder : t -> TestDecodeBitswapBlocks.Response.t -> TestDecodeBitswapBlocks.Response.t","counters":[]},{"line":"        val test_decode_bitswap_blocks_init : t -> TestDecodeBitswapBlocks.Response.t","counters":[]},{"line":"        val test_encode_bitswap_blocks_set_reader : t -> TestEncodeBitswapBlocks.Response.struct_t reader_t -> TestEncodeBitswapBlocks.Response.t","counters":[]},{"line":"        val test_encode_bitswap_blocks_set_builder : t -> TestEncodeBitswapBlocks.Response.t -> TestEncodeBitswapBlocks.Response.t","counters":[]},{"line":"        val test_encode_bitswap_blocks_init : t -> TestEncodeBitswapBlocks.Response.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module RpcResponse : sig","counters":[]},{"line":"        type struct_t = [`RpcResponse_824dae3760b93d5d]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Error of string","counters":[]},{"line":"          | Success of RpcResponseSuccess.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val error_set : t -> string -> unit","counters":[]},{"line":"        val success_set_reader : t -> RpcResponseSuccess.struct_t reader_t -> RpcResponseSuccess.t","counters":[]},{"line":"        val success_set_builder : t -> RpcResponseSuccess.t -> RpcResponseSuccess.t","counters":[]},{"line":"        val success_init : t -> RpcResponseSuccess.t","counters":[]},{"line":"        val has_header : t -> bool","counters":[]},{"line":"        val header_get : t -> RpcMessageHeader.t","counters":[]},{"line":"        val header_set_reader : t -> RpcMessageHeader.struct_t reader_t -> RpcMessageHeader.t","counters":[]},{"line":"        val header_set_builder : t -> RpcMessageHeader.t -> RpcMessageHeader.t","counters":[]},{"line":"        val header_init : t -> RpcMessageHeader.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module PushMessage : sig","counters":[]},{"line":"        type struct_t = [`PushMessage_bcc32e2f197831bb]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Validation of Validation.t","counters":[]},{"line":"          | AddResource of AddResource.t","counters":[]},{"line":"          | DeleteResource of DeleteResource.t","counters":[]},{"line":"          | DownloadResource of DownloadResource.t","counters":[]},{"line":"          | HeartbeatPeer of HeartbeatPeer.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val validation_set_reader : t -> Validation.struct_t reader_t -> Validation.t","counters":[]},{"line":"        val validation_set_builder : t -> Validation.t -> Validation.t","counters":[]},{"line":"        val validation_init : t -> Validation.t","counters":[]},{"line":"        val add_resource_set_reader : t -> AddResource.struct_t reader_t -> AddResource.t","counters":[]},{"line":"        val add_resource_set_builder : t -> AddResource.t -> AddResource.t","counters":[]},{"line":"        val add_resource_init : t -> AddResource.t","counters":[]},{"line":"        val delete_resource_set_reader : t -> DeleteResource.struct_t reader_t -> DeleteResource.t","counters":[]},{"line":"        val delete_resource_set_builder : t -> DeleteResource.t -> DeleteResource.t","counters":[]},{"line":"        val delete_resource_init : t -> DeleteResource.t","counters":[]},{"line":"        val download_resource_set_reader : t -> DownloadResource.struct_t reader_t -> DownloadResource.t","counters":[]},{"line":"        val download_resource_set_builder : t -> DownloadResource.t -> DownloadResource.t","counters":[]},{"line":"        val download_resource_init : t -> DownloadResource.t","counters":[]},{"line":"        val heartbeat_peer_set_reader : t -> HeartbeatPeer.struct_t reader_t -> HeartbeatPeer.t","counters":[]},{"line":"        val heartbeat_peer_set_builder : t -> HeartbeatPeer.t -> HeartbeatPeer.t","counters":[]},{"line":"        val heartbeat_peer_init : t -> HeartbeatPeer.t","counters":[]},{"line":"        val has_header : t -> bool","counters":[]},{"line":"        val header_get : t -> PushMessageHeader.t","counters":[]},{"line":"        val header_set_reader : t -> PushMessageHeader.struct_t reader_t -> PushMessageHeader.t","counters":[]},{"line":"        val header_set_builder : t -> PushMessageHeader.t -> PushMessageHeader.t","counters":[]},{"line":"        val header_init : t -> PushMessageHeader.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Message : sig","counters":[]},{"line":"        type struct_t = [`Message_dd721cc91936b5d8]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | RpcRequest of RpcRequest.t","counters":[]},{"line":"          | PushMessage of PushMessage.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val rpc_request_set_reader : t -> RpcRequest.struct_t reader_t -> RpcRequest.t","counters":[]},{"line":"        val rpc_request_set_builder : t -> RpcRequest.t -> RpcRequest.t","counters":[]},{"line":"        val rpc_request_init : t -> RpcRequest.t","counters":[]},{"line":"        val push_message_set_reader : t -> PushMessage.struct_t reader_t -> PushMessage.t","counters":[]},{"line":"        val push_message_set_builder : t -> PushMessage.t -> PushMessage.t","counters":[]},{"line":"        val push_message_init : t -> PushMessage.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"    module DaemonInterface : sig","counters":[]},{"line":"      type struct_t = [`DaemonInterface_aa8c38390c8a53b0]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      module PeerConnected : sig","counters":[]},{"line":"        type struct_t = [`PeerConnected_82b1f9dcfa3ef5b8]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_peer_id : t -> bool","counters":[]},{"line":"        val peer_id_get : t -> PeerId.t","counters":[]},{"line":"        val peer_id_set_reader : t -> PeerId.struct_t reader_t -> PeerId.t","counters":[]},{"line":"        val peer_id_set_builder : t -> PeerId.t -> PeerId.t","counters":[]},{"line":"        val peer_id_init : t -> PeerId.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module PeerDisconnected : sig","counters":[]},{"line":"        type struct_t = [`PeerDisconnected_fb7ab58e17fecacc]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_peer_id : t -> bool","counters":[]},{"line":"        val peer_id_get : t -> PeerId.t","counters":[]},{"line":"        val peer_id_set_reader : t -> PeerId.struct_t reader_t -> PeerId.t","counters":[]},{"line":"        val peer_id_set_builder : t -> PeerId.t -> PeerId.t","counters":[]},{"line":"        val peer_id_init : t -> PeerId.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module GossipReceived : sig","counters":[]},{"line":"        type struct_t = [`GossipReceived_8128c52d5468fe3b]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_sender : t -> bool","counters":[]},{"line":"        val sender_get : t -> PeerInfo.t","counters":[]},{"line":"        val sender_set_reader : t -> PeerInfo.struct_t reader_t -> PeerInfo.t","counters":[]},{"line":"        val sender_set_builder : t -> PeerInfo.t -> PeerInfo.t","counters":[]},{"line":"        val sender_init : t -> PeerInfo.t","counters":[]},{"line":"        val has_seen_at : t -> bool","counters":[]},{"line":"        val seen_at_get : t -> UnixNano.t","counters":[]},{"line":"        val seen_at_set_reader : t -> UnixNano.struct_t reader_t -> UnixNano.t","counters":[]},{"line":"        val seen_at_set_builder : t -> UnixNano.t -> UnixNano.t","counters":[]},{"line":"        val seen_at_init : t -> UnixNano.t","counters":[]},{"line":"        val has_expiration : t -> bool","counters":[]},{"line":"        val expiration_get : t -> UnixNano.t","counters":[]},{"line":"        val expiration_set_reader : t -> UnixNano.struct_t reader_t -> UnixNano.t","counters":[]},{"line":"        val expiration_set_builder : t -> UnixNano.t -> UnixNano.t","counters":[]},{"line":"        val expiration_init : t -> UnixNano.t","counters":[]},{"line":"        val has_subscription_id : t -> bool","counters":[]},{"line":"        val subscription_id_get : t -> SubscriptionId.t","counters":[]},{"line":"        val subscription_id_set_reader : t -> SubscriptionId.struct_t reader_t -> SubscriptionId.t","counters":[]},{"line":"        val subscription_id_set_builder : t -> SubscriptionId.t -> SubscriptionId.t","counters":[]},{"line":"        val subscription_id_init : t -> SubscriptionId.t","counters":[]},{"line":"        val has_validation_id : t -> bool","counters":[]},{"line":"        val validation_id_get : t -> ValidationId.t","counters":[]},{"line":"        val validation_id_set_reader : t -> ValidationId.struct_t reader_t -> ValidationId.t","counters":[]},{"line":"        val validation_id_set_builder : t -> ValidationId.t -> ValidationId.t","counters":[]},{"line":"        val validation_id_init : t -> ValidationId.t","counters":[]},{"line":"        val has_data : t -> bool","counters":[]},{"line":"        val data_get : t -> string","counters":[]},{"line":"        val data_set : t -> string -> unit","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module IncomingStream : sig","counters":[]},{"line":"        type struct_t = [`IncomingStream_c5ea3ac9fb462264]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_stream_id : t -> bool","counters":[]},{"line":"        val stream_id_get : t -> StreamId.t","counters":[]},{"line":"        val stream_id_set_reader : t -> StreamId.struct_t reader_t -> StreamId.t","counters":[]},{"line":"        val stream_id_set_builder : t -> StreamId.t -> StreamId.t","counters":[]},{"line":"        val stream_id_init : t -> StreamId.t","counters":[]},{"line":"        val has_peer : t -> bool","counters":[]},{"line":"        val peer_get : t -> PeerInfo.t","counters":[]},{"line":"        val peer_set_reader : t -> PeerInfo.struct_t reader_t -> PeerInfo.t","counters":[]},{"line":"        val peer_set_builder : t -> PeerInfo.t -> PeerInfo.t","counters":[]},{"line":"        val peer_init : t -> PeerInfo.t","counters":[]},{"line":"        val has_protocol : t -> bool","counters":[]},{"line":"        val protocol_get : t -> string","counters":[]},{"line":"        val protocol_set : t -> string -> unit","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module StreamLost : sig","counters":[]},{"line":"        type struct_t = [`StreamLost_a2eea71b4749c940]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_stream_id : t -> bool","counters":[]},{"line":"        val stream_id_get : t -> StreamId.t","counters":[]},{"line":"        val stream_id_set_reader : t -> StreamId.struct_t reader_t -> StreamId.t","counters":[]},{"line":"        val stream_id_set_builder : t -> StreamId.t -> StreamId.t","counters":[]},{"line":"        val stream_id_init : t -> StreamId.t","counters":[]},{"line":"        val has_reason : t -> bool","counters":[]},{"line":"        val reason_get : t -> string","counters":[]},{"line":"        val reason_set : t -> string -> unit","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module StreamComplete : sig","counters":[]},{"line":"        type struct_t = [`StreamComplete_bec4cf678af6fe9d]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_stream_id : t -> bool","counters":[]},{"line":"        val stream_id_get : t -> StreamId.t","counters":[]},{"line":"        val stream_id_set_reader : t -> StreamId.struct_t reader_t -> StreamId.t","counters":[]},{"line":"        val stream_id_set_builder : t -> StreamId.t -> StreamId.t","counters":[]},{"line":"        val stream_id_init : t -> StreamId.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module StreamMessageReceived : sig","counters":[]},{"line":"        type struct_t = [`StreamMessageReceived_fe6afa3ac9731c83]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val has_msg : t -> bool","counters":[]},{"line":"        val msg_get : t -> StreamMessage.t","counters":[]},{"line":"        val msg_set_reader : t -> StreamMessage.struct_t reader_t -> StreamMessage.t","counters":[]},{"line":"        val msg_set_builder : t -> StreamMessage.t -> StreamMessage.t","counters":[]},{"line":"        val msg_init : t -> StreamMessage.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module ResourceUpdate : sig","counters":[]},{"line":"        type struct_t = [`ResourceUpdate_edec79530db7ca8e]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        val type_get : t -> ResourceUpdateType.t","counters":[]},{"line":"        val type_set : t -> ResourceUpdateType.t -> unit","counters":[]},{"line":"        val type_set_unsafe : t -> ResourceUpdateType.t -> unit","counters":[]},{"line":"        val has_ids : t -> bool","counters":[]},{"line":"        val ids_get : t -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_get_list : t -> RootBlockId.t list","counters":[]},{"line":"        val ids_get_array : t -> RootBlockId.t array","counters":[]},{"line":"        val ids_set : t -> (rw, RootBlockId.t, array_t) Capnp.Array.t -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_set_list : t -> RootBlockId.t list -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_set_array : t -> RootBlockId.t array -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val ids_init : t -> int -> (rw, RootBlockId.t, array_t) Capnp.Array.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module PushMessage : sig","counters":[]},{"line":"        type struct_t = [`PushMessage_8ec8fa620071fa9f]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | PeerConnected of PeerConnected.t","counters":[]},{"line":"          | PeerDisconnected of PeerDisconnected.t","counters":[]},{"line":"          | GossipReceived of GossipReceived.t","counters":[]},{"line":"          | IncomingStream of IncomingStream.t","counters":[]},{"line":"          | StreamLost of StreamLost.t","counters":[]},{"line":"          | StreamComplete of StreamComplete.t","counters":[]},{"line":"          | StreamMessageReceived of StreamMessageReceived.t","counters":[]},{"line":"          | ResourceUpdated of ResourceUpdate.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val peer_connected_set_reader : t -> PeerConnected.struct_t reader_t -> PeerConnected.t","counters":[]},{"line":"        val peer_connected_set_builder : t -> PeerConnected.t -> PeerConnected.t","counters":[]},{"line":"        val peer_connected_init : t -> PeerConnected.t","counters":[]},{"line":"        val peer_disconnected_set_reader : t -> PeerDisconnected.struct_t reader_t -> PeerDisconnected.t","counters":[]},{"line":"        val peer_disconnected_set_builder : t -> PeerDisconnected.t -> PeerDisconnected.t","counters":[]},{"line":"        val peer_disconnected_init : t -> PeerDisconnected.t","counters":[]},{"line":"        val gossip_received_set_reader : t -> GossipReceived.struct_t reader_t -> GossipReceived.t","counters":[]},{"line":"        val gossip_received_set_builder : t -> GossipReceived.t -> GossipReceived.t","counters":[]},{"line":"        val gossip_received_init : t -> GossipReceived.t","counters":[]},{"line":"        val incoming_stream_set_reader : t -> IncomingStream.struct_t reader_t -> IncomingStream.t","counters":[]},{"line":"        val incoming_stream_set_builder : t -> IncomingStream.t -> IncomingStream.t","counters":[]},{"line":"        val incoming_stream_init : t -> IncomingStream.t","counters":[]},{"line":"        val stream_lost_set_reader : t -> StreamLost.struct_t reader_t -> StreamLost.t","counters":[]},{"line":"        val stream_lost_set_builder : t -> StreamLost.t -> StreamLost.t","counters":[]},{"line":"        val stream_lost_init : t -> StreamLost.t","counters":[]},{"line":"        val stream_complete_set_reader : t -> StreamComplete.struct_t reader_t -> StreamComplete.t","counters":[]},{"line":"        val stream_complete_set_builder : t -> StreamComplete.t -> StreamComplete.t","counters":[]},{"line":"        val stream_complete_init : t -> StreamComplete.t","counters":[]},{"line":"        val stream_message_received_set_reader : t -> StreamMessageReceived.struct_t reader_t -> StreamMessageReceived.t","counters":[]},{"line":"        val stream_message_received_set_builder : t -> StreamMessageReceived.t -> StreamMessageReceived.t","counters":[]},{"line":"        val stream_message_received_init : t -> StreamMessageReceived.t","counters":[]},{"line":"        val resource_updated_set_reader : t -> ResourceUpdate.struct_t reader_t -> ResourceUpdate.t","counters":[]},{"line":"        val resource_updated_set_builder : t -> ResourceUpdate.t -> ResourceUpdate.t","counters":[]},{"line":"        val resource_updated_init : t -> ResourceUpdate.t","counters":[]},{"line":"        val has_header : t -> bool","counters":[]},{"line":"        val header_get : t -> PushMessageHeader.t","counters":[]},{"line":"        val header_set_reader : t -> PushMessageHeader.struct_t reader_t -> PushMessageHeader.t","counters":[]},{"line":"        val header_set_builder : t -> PushMessageHeader.t -> PushMessageHeader.t","counters":[]},{"line":"        val header_init : t -> PushMessageHeader.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      module Message : sig","counters":[]},{"line":"        type struct_t = [`Message_d78f8b719109324e]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | RpcResponse of Libp2pHelperInterface.RpcResponse.t","counters":[]},{"line":"          | PushMessage of PushMessage.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        val get : t -> unnamed_union_t","counters":[]},{"line":"        val rpc_response_set_reader : t -> Libp2pHelperInterface.RpcResponse.struct_t reader_t -> Libp2pHelperInterface.RpcResponse.t","counters":[]},{"line":"        val rpc_response_set_builder : t -> Libp2pHelperInterface.RpcResponse.t -> Libp2pHelperInterface.RpcResponse.t","counters":[]},{"line":"        val rpc_response_init : t -> Libp2pHelperInterface.RpcResponse.t","counters":[]},{"line":"        val push_message_set_reader : t -> PushMessage.struct_t reader_t -> PushMessage.t","counters":[]},{"line":"        val push_message_set_builder : t -> PushMessage.t -> PushMessage.t","counters":[]},{"line":"        val push_message_init : t -> PushMessage.t","counters":[]},{"line":"        val of_message : rw message_t -> t","counters":[]},{"line":"        val to_message : t -> rw message_t","counters":[]},{"line":"        val to_reader : t -> struct_t reader_t","counters":[]},{"line":"        val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"        val init_pointer : pointer_t -> t","counters":[]},{"line":"      end","counters":[]},{"line":"      val of_message : rw message_t -> t","counters":[]},{"line":"      val to_message : t -> rw message_t","counters":[]},{"line":"      val to_reader : t -> struct_t reader_t","counters":[]},{"line":"      val init_root : ?message_size:int -> unit -> t","counters":[]},{"line":"      val init_pointer : pointer_t -> t","counters":[]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module MakeRPC(MessageWrapper : Capnp.RPC.S) = struct","counters":[]},{"line":"  type 'a reader_t = 'a MessageWrapper.StructStorage.reader_t","counters":[]},{"line":"  type 'a builder_t = 'a MessageWrapper.StructStorage.builder_t","counters":[]},{"line":"  module CamlBytes = Bytes","counters":[]},{"line":"  module DefaultsMessage_ = Capnp.BytesMessage","counters":[]},{"line":"","counters":[]},{"line":"  let _builder_defaults_message =","counters":[]},{"line":"    let message_segments = [","counters":[]},{"line":"      Bytes.unsafe_of_string \"\\","counters":[{"col_start":27,"col_end":27,"count":1}]},{"line":"      \";","counters":[]},{"line":"    ] in","counters":[]},{"line":"    DefaultsMessage_.Message.readonly","counters":[{"col_start":36,"col_end":36,"count":1}]},{"line":"      (DefaultsMessage_.Message.of_storage message_segments)","counters":[{"col_start":41,"col_end":41,"count":1}]},{"line":"","counters":[]},{"line":"  let invalid_msg = Capnp.Message.invalid_msg","counters":[]},{"line":"","counters":[]},{"line":"  include Capnp.Runtime.BuilderInc.Make[@inlined](MessageWrapper)","counters":[]},{"line":"","counters":[]},{"line":"  type 'cap message_t = 'cap MessageWrapper.Message.t","counters":[]},{"line":"","counters":[]},{"line":"  module ValidationResult_12956713526515247866 = struct","counters":[]},{"line":"    type t =","counters":[]},{"line":"      | Accept","counters":[]},{"line":"      | Reject","counters":[]},{"line":"      | Ignore","counters":[]},{"line":"      | Undefined of int","counters":[]},{"line":"    let decode u16 = match u16 with","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"      | 0 -> Accept","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | 1 -> Reject","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | 2 -> Ignore","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | v -> Undefined v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    let encode_safe enum = match enum with","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"      | Accept -> 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Reject -> 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Ignore -> 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Undefined x -> invalid_msg \"Cannot encode undefined enum value.\"","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    let encode_unsafe enum = match enum with","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"      | Accept -> 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Reject -> 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Ignore -> 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Undefined x -> x","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"  end","counters":[]},{"line":"  module ResourceUpdateType_12722323391428546450 = struct","counters":[]},{"line":"    type t =","counters":[]},{"line":"      | Added","counters":[]},{"line":"      | Removed","counters":[]},{"line":"      | Broken","counters":[]},{"line":"      | Undefined of int","counters":[]},{"line":"    let decode u16 = match u16 with","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"      | 0 -> Added","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | 1 -> Removed","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | 2 -> Broken","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | v -> Undefined v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    let encode_safe enum = match enum with","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"      | Added -> 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Removed -> 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Broken -> 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Undefined x -> invalid_msg \"Cannot encode undefined enum value.\"","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    let encode_unsafe enum = match enum with","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"      | Added -> 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Removed -> 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Broken -> 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      | Undefined x -> x","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"  end","counters":[]},{"line":"  module DefaultsCopier_ =","counters":[]},{"line":"    Capnp.Runtime.BuilderOps.Make(Capnp.BytesMessage)(MessageWrapper)","counters":[]},{"line":"","counters":[]},{"line":"  let _reader_defaults_message =","counters":[]},{"line":"    MessageWrapper.Message.create","counters":[{"col_start":32,"col_end":32,"count":1}]},{"line":"      (DefaultsMessage_.Message.total_size _builder_defaults_message)","counters":[{"col_start":41,"col_end":41,"count":1}]},{"line":"","counters":[]},{"line":"","counters":[]},{"line":"  module Reader = struct","counters":[]},{"line":"    type array_t = ro MessageWrapper.ListStorage.t","counters":[]},{"line":"    type builder_array_t = rw MessageWrapper.ListStorage.t","counters":[]},{"line":"    type pointer_t = ro MessageWrapper.Slice.t option","counters":[]},{"line":"    let of_pointer = RA_.deref_opt_struct_pointer","counters":[]},{"line":"","counters":[]},{"line":"    module Multiaddr = struct","counters":[]},{"line":"      type struct_t = [`Multiaddr_ed11d634701b0d8e]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_representation x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let representation_get x =","counters":[]},{"line":"        RA_.get_text ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module PeerId = struct","counters":[]},{"line":"      type struct_t = [`PeerId_caf9ffc384dfb56c]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_id x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_get x =","counters":[]},{"line":"        RA_.get_text ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module BlockWithId = struct","counters":[]},{"line":"      type struct_t = [`BlockWithId_a784810bf56d058c]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_blake2b_hash x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let blake2b_hash_get x =","counters":[]},{"line":"        RA_.get_blob ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_block x =","counters":[]},{"line":"        RA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let block_get x =","counters":[]},{"line":"        RA_.get_blob ~default:\"\" x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module RootBlockId = struct","counters":[]},{"line":"      type struct_t = [`RootBlockId_abf6a984ba800725]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_blake2b_hash x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let blake2b_hash_get x =","counters":[]},{"line":"        RA_.get_blob ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module AddrInfo = struct","counters":[]},{"line":"      type struct_t = [`AddrInfo_89e4194c3e64d647]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_peer_id x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get x =","counters":[]},{"line":"        RA_.get_struct x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_addrs x =","counters":[]},{"line":"        RA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let addrs_get x = ","counters":[]},{"line":"        RA_.get_struct_list x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let addrs_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (addrs_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"      let addrs_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (addrs_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module PeerInfo = struct","counters":[]},{"line":"      type struct_t = [`PeerInfo_ae7b97cc383b684e]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let libp2p_port_get x =","counters":[]},{"line":"        RA_.get_uint16 ~default:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_host x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let host_get x =","counters":[]},{"line":"        RA_.get_text ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_peer_id x =","counters":[]},{"line":"        RA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get x =","counters":[]},{"line":"        RA_.get_struct x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module SequenceNumber = struct","counters":[]},{"line":"      type struct_t = [`SequenceNumber_a5063d26e6e7aa47]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let seqno_get x =","counters":[]},{"line":"        RA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seqno_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (seqno_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module ValidationId = struct","counters":[]},{"line":"      type struct_t = [`ValidationId_89c0f3360eecf997]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let id_get x =","counters":[]},{"line":"        RA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (id_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module StreamId = struct","counters":[]},{"line":"      type struct_t = [`StreamId_d3ec891916526de8]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let id_get x =","counters":[]},{"line":"        RA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (id_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module SubscriptionId = struct","counters":[]},{"line":"      type struct_t = [`SubscriptionId_fc2430a71b2c8f44]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let id_get x =","counters":[]},{"line":"        RA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (id_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module Libp2pKeypair = struct","counters":[]},{"line":"      type struct_t = [`Libp2pKeypair_fb61e5f7d6a0208e]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_private_key x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let private_key_get x =","counters":[]},{"line":"        RA_.get_blob ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_public_key x =","counters":[]},{"line":"        RA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let public_key_get x =","counters":[]},{"line":"        RA_.get_blob ~default:\"\" x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_peer_id x =","counters":[]},{"line":"        RA_.has_field x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get x =","counters":[]},{"line":"        RA_.get_struct x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module GatingConfig = struct","counters":[]},{"line":"      type struct_t = [`GatingConfig_e1202e2bb52d45e6]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_banned_ips x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_ips_get x =","counters":[]},{"line":"        RA_.get_text_list x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_ips_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (banned_ips_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"      let banned_ips_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (banned_ips_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"      let has_banned_peer_ids x =","counters":[]},{"line":"        RA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_peer_ids_get x = ","counters":[]},{"line":"        RA_.get_struct_list x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_peer_ids_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (banned_peer_ids_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"      let banned_peer_ids_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (banned_peer_ids_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":48,"col_end":48,"count":0}]},{"line":"      let has_trusted_ips x =","counters":[]},{"line":"        RA_.has_field x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_ips_get x =","counters":[]},{"line":"        RA_.get_text_list x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_ips_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (trusted_ips_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"      let trusted_ips_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (trusted_ips_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"      let has_trusted_peer_ids x =","counters":[]},{"line":"        RA_.has_field x 3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_peer_ids_get x = ","counters":[]},{"line":"        RA_.get_struct_list x 3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_peer_ids_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (trusted_peer_ids_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":48,"col_end":48,"count":0}]},{"line":"      let trusted_peer_ids_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (trusted_peer_ids_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":49,"col_end":49,"count":0}]},{"line":"      let isolate_get x =","counters":[]},{"line":"        RA_.get_bit ~default:false x ~byte_ofs:0 ~bit_ofs:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module TopicLevel = struct","counters":[]},{"line":"      type struct_t = [`TopicLevel_a382869c0ba548c2]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_topics x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topics_get x =","counters":[]},{"line":"        RA_.get_text_list x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topics_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (topics_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"      let topics_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (topics_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":39,"col_end":39,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module Libp2pConfig = struct","counters":[]},{"line":"      type struct_t = [`Libp2pConfig_c90f65b6852b9c22]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_statedir x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let statedir_get x =","counters":[]},{"line":"        RA_.get_text ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_private_key x =","counters":[]},{"line":"        RA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let private_key_get x =","counters":[]},{"line":"        RA_.get_blob ~default:\"\" x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_network_id x =","counters":[]},{"line":"        RA_.has_field x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let network_id_get x =","counters":[]},{"line":"        RA_.get_text ~default:\"\" x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_listen_on x =","counters":[]},{"line":"        RA_.has_field x 3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let listen_on_get x = ","counters":[]},{"line":"        RA_.get_struct_list x 3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let listen_on_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (listen_on_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"      let listen_on_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (listen_on_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"      let metrics_port_get x =","counters":[]},{"line":"        RA_.get_uint16 ~default:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_external_multiaddr x =","counters":[]},{"line":"        RA_.has_field x 4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let external_multiaddr_get x =","counters":[]},{"line":"        RA_.get_struct x 4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let external_multiaddr_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let unsafe_no_trust_ip_get x =","counters":[]},{"line":"        RA_.get_bit ~default:false x ~byte_ofs:2 ~bit_ofs:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let flood_get x =","counters":[]},{"line":"        RA_.get_bit ~default:false x ~byte_ofs:2 ~bit_ofs:1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_exchange_get x =","counters":[]},{"line":"        RA_.get_bit ~default:false x ~byte_ofs:2 ~bit_ofs:2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_direct_peers x =","counters":[]},{"line":"        RA_.has_field x 5","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let direct_peers_get x = ","counters":[]},{"line":"        RA_.get_struct_list x 5","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let direct_peers_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (direct_peers_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"      let direct_peers_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (direct_peers_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"      let has_seed_peers x =","counters":[]},{"line":"        RA_.has_field x 6","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seed_peers_get x = ","counters":[]},{"line":"        RA_.get_struct_list x 6","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seed_peers_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (seed_peers_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"      let seed_peers_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (seed_peers_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"      let has_gating_config x =","counters":[]},{"line":"        RA_.has_field x 7","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let gating_config_get x =","counters":[]},{"line":"        RA_.get_struct x 7","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let gating_config_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 7","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let max_connections_get x =","counters":[]},{"line":"        RA_.get_uint32 ~default:Stdint.Uint32.zero x 4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let max_connections_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint32_exn (max_connections_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":64,"col_end":64,"count":0}]},{"line":"      let validation_queue_size_get x =","counters":[]},{"line":"        RA_.get_uint32 ~default:Stdint.Uint32.zero x 8","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let validation_queue_size_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint32_exn (validation_queue_size_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":70,"col_end":70,"count":0}]},{"line":"      let peer_protection_ratio_get x =","counters":[]},{"line":"        RA_.get_float32 ~default_bits:(0l) x 12","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let min_connections_get x =","counters":[]},{"line":"        RA_.get_uint32 ~default:Stdint.Uint32.zero x 16","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let min_connections_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint32_exn (min_connections_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":64,"col_end":64,"count":0}]},{"line":"      let has_known_private_ip_nets x =","counters":[]},{"line":"        RA_.has_field x 8","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let known_private_ip_nets_get x =","counters":[]},{"line":"        RA_.get_text_list x 8","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let known_private_ip_nets_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (known_private_ip_nets_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"      let known_private_ip_nets_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (known_private_ip_nets_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"      let has_topic_config x =","counters":[]},{"line":"        RA_.has_field x 9","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topic_config_get x = ","counters":[]},{"line":"        RA_.get_struct_list x 9","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topic_config_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (topic_config_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"      let topic_config_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (topic_config_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module ResourceUpdateType = struct","counters":[]},{"line":"      type t = ResourceUpdateType_12722323391428546450.t =","counters":[]},{"line":"        | Added","counters":[]},{"line":"        | Removed","counters":[]},{"line":"        | Broken","counters":[]},{"line":"        | Undefined of int","counters":[]},{"line":"    end","counters":[]},{"line":"    module ValidationResult = struct","counters":[]},{"line":"      type t = ValidationResult_12956713526515247866.t =","counters":[]},{"line":"        | Accept","counters":[]},{"line":"        | Reject","counters":[]},{"line":"        | Ignore","counters":[]},{"line":"        | Undefined of int","counters":[]},{"line":"    end","counters":[]},{"line":"    module StreamMessage = struct","counters":[]},{"line":"      type struct_t = [`StreamMessage_aa5cdd4cc2bd8222]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_stream_id x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let stream_id_get x =","counters":[]},{"line":"        RA_.get_struct x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let stream_id_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_data x =","counters":[]},{"line":"        RA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let data_get x =","counters":[]},{"line":"        RA_.get_blob ~default:\"\" x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module Duration = struct","counters":[]},{"line":"      type struct_t = [`Duration_bf96c4e0ff964090]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let nano_sec_get x =","counters":[]},{"line":"        RA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let nano_sec_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (nano_sec_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module UnixNano = struct","counters":[]},{"line":"      type struct_t = [`UnixNano_9d6900bcb72b8938]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let nano_sec_get x =","counters":[]},{"line":"        RA_.get_int64 ~default:(0L) x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let nano_sec_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_int64_exn (nano_sec_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module PushMessageHeader = struct","counters":[]},{"line":"      type struct_t = [`PushMessageHeader_a8298a9629f09cdc]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_time_sent x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_get x =","counters":[]},{"line":"        RA_.get_struct x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module RpcMessageHeader = struct","counters":[]},{"line":"      type struct_t = [`RpcMessageHeader_a244ebaa77d7c1cf]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      let has_time_sent x =","counters":[]},{"line":"        RA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_get x =","counters":[]},{"line":"        RA_.get_struct x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_sequence_number x =","counters":[]},{"line":"        RA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let sequence_number_get x =","counters":[]},{"line":"        RA_.get_struct x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let sequence_number_get_pipelined x =","counters":[]},{"line":"        MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module Libp2pHelperInterface = struct","counters":[]},{"line":"      type struct_t = [`Libp2pHelperInterface_91c5868ca6847cc5]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      module Configure = struct","counters":[]},{"line":"        type struct_t = [`Configure_ff0e5f175237cf55]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_bbfd8fe6d222b0a1]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_config x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let config_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let config_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_ffdbb8a4a072322b]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module SetGatingConfig = struct","counters":[]},{"line":"        type struct_t = [`SetGatingConfig_9eed76ad25f4d362]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_bae9227a811faef6]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_gating_config x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let gating_config_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let gating_config_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_8b1c161e3d21d6b1]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Listen = struct","counters":[]},{"line":"        type struct_t = [`Listen_e884b52c8948d81b]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_cdbeb7cf54035b71]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_iface x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let iface_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let iface_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_c1f9b9db8212bf72]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x = ","counters":[]},{"line":"            RA_.get_struct_list x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let result_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module GetListeningAddrs = struct","counters":[]},{"line":"        type struct_t = [`GetListeningAddrs_f6c7b7d1f45c6434]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_83d991af72ada648]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_bae1386e815a99d1]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x = ","counters":[]},{"line":"            RA_.get_struct_list x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let result_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module BeginAdvertising = struct","counters":[]},{"line":"        type struct_t = [`BeginAdvertising_fde7d941c690b3a7]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_d2e7ac23195dffe2]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_f6c843e7ba07b900]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module AddPeer = struct","counters":[]},{"line":"        type struct_t = [`AddPeer_ba41f14b128a1dd7]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_c258720d7c5c09ed]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_multiaddr x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let multiaddr_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let multiaddr_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let is_seed_get x =","counters":[]},{"line":"            RA_.get_bit ~default:false x ~byte_ofs:0 ~bit_ofs:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_9a9a8d03d3f08548]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module ListPeers = struct","counters":[]},{"line":"        type struct_t = [`ListPeers_d48ef9a8506586a6]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_bb6edc2598638c9c]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_fb54cca136535a14]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x = ","counters":[]},{"line":"            RA_.get_struct_list x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let result_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module BandwidthInfo = struct","counters":[]},{"line":"        type struct_t = [`BandwidthInfo_969a629719fde633]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_e4386d9ee8d69654]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_96359b995ba506f4]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let input_bandwidth_get x =","counters":[]},{"line":"            RA_.get_float64 ~default_bits:(0L) x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let output_bandwidth_get x =","counters":[]},{"line":"            RA_.get_float64 ~default_bits:(0L) x 8","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let cpu_usage_get x =","counters":[]},{"line":"            RA_.get_float64 ~default_bits:(0L) x 16","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module GenerateKeypair = struct","counters":[]},{"line":"        type struct_t = [`GenerateKeypair_b973118252345b14]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_ce71e91d5eb99a49]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_b1b128c54a9c378a]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Publish = struct","counters":[]},{"line":"        type struct_t = [`Publish_abd77ad6fe644f04]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_9cecb704bb2aeaaa]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_topic x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let topic_get x =","counters":[]},{"line":"            RA_.get_text ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_data x =","counters":[]},{"line":"            RA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let data_get x =","counters":[]},{"line":"            RA_.get_blob ~default:\"\" x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_b608443b70279f42]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Subscribe = struct","counters":[]},{"line":"        type struct_t = [`Subscribe_87e63b07187d61fd]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f30859dedd19e179]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_topic x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let topic_get x =","counters":[]},{"line":"            RA_.get_text ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_subscription_id x =","counters":[]},{"line":"            RA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_get x =","counters":[]},{"line":"            RA_.get_struct x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_a969a5ea58b5581c]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Unsubscribe = struct","counters":[]},{"line":"        type struct_t = [`Unsubscribe_cce2ad102c7ea857]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f3e0ba7fbe583065]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_subscription_id x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_af6af6e1ad511e3a]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module AddStreamHandler = struct","counters":[]},{"line":"        type struct_t = [`AddStreamHandler_87594eae8c8531ee]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_a42892d737705a9c]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_protocol x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_get x =","counters":[]},{"line":"            RA_.get_text ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_f2765705336251b5]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module RemoveStreamHandler = struct","counters":[]},{"line":"        type struct_t = [`RemoveStreamHandler_c909f587e1bb9499]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_b822fab66dabdf26]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_protocol x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_get x =","counters":[]},{"line":"            RA_.get_text ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_caae22b415293cb3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module OpenStream = struct","counters":[]},{"line":"        type struct_t = [`OpenStream_dc75bca71078eb01]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f77175f458d711a8]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_peer x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_protocol_id x =","counters":[]},{"line":"            RA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_id_get x =","counters":[]},{"line":"            RA_.get_text ~default:\"\" x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_918222cd43d37f6c]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_stream_id x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_peer x =","counters":[]},{"line":"            RA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get x =","counters":[]},{"line":"            RA_.get_struct x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module CloseStream = struct","counters":[]},{"line":"        type struct_t = [`CloseStream_fb4640ea8f01c33b]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_956577d02c2197b3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_stream_id x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_dea74fe5c2096c99]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module ResetStream = struct","counters":[]},{"line":"        type struct_t = [`ResetStream_aa5672b913b9c728]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f2ba9a25df1929e3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_stream_id x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_a4ef405cd24ad7a3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module SendStream = struct","counters":[]},{"line":"        type struct_t = [`SendStream_e079d0d7c895a200]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f6ac925efcae1dda]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_msg x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let msg_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let msg_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_934ce73a7d9d3d3a]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module SetNodeStatus = struct","counters":[]},{"line":"        type struct_t = [`SetNodeStatus_806d105a074b7e19]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_fcf94c0b3ea7ac29]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_status x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let status_get x =","counters":[]},{"line":"            RA_.get_blob ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_f1a5d120cfd28003]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module GetPeerNodeStatus = struct","counters":[]},{"line":"        type struct_t = [`GetPeerNodeStatus_d5738b22303fce4e]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_eb7b01a9c0a1e9cb]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_peer x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get x =","counters":[]},{"line":"            RA_.get_struct x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_fb9439112386d425]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x =","counters":[]},{"line":"            RA_.get_blob ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module TestDecodeBitswapBlocks = struct","counters":[]},{"line":"        type struct_t = [`TestDecodeBitswapBlocks_e5780789678719ec]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_8050be5b024b71ef]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_blocks x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_get x = ","counters":[]},{"line":"            RA_.get_struct_list x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let blocks_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let has_root_block_id x =","counters":[]},{"line":"            RA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_get x =","counters":[]},{"line":"            RA_.get_struct x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_b0506afb32106477]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_decoded_data x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let decoded_data_get x =","counters":[]},{"line":"            RA_.get_blob ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module TestEncodeBitswapBlocks = struct","counters":[]},{"line":"        type struct_t = [`TestEncodeBitswapBlocks_fdbea00423ed6c49]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_a6a24bb291f80ca6]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_data x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let data_get x =","counters":[]},{"line":"            RA_.get_blob ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let max_block_size_get x =","counters":[]},{"line":"            RA_.get_int64 ~default:(0L) x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let max_block_size_get_int_exn x =","counters":[]},{"line":"            Capnp.Runtime.Util.int_of_int64_exn (max_block_size_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":66,"col_end":66,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_c2cfafb29b55e5d3]","counters":[]},{"line":"          type t = struct_t reader_t","counters":[]},{"line":"          let has_blocks x =","counters":[]},{"line":"            RA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_get x = ","counters":[]},{"line":"            RA_.get_struct_list x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let blocks_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let has_root_block_id x =","counters":[]},{"line":"            RA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_get x =","counters":[]},{"line":"            RA_.get_struct x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_get_pipelined x =","counters":[]},{"line":"            MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":69,"col_end":69,"count":0}]},{"line":"          let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Validation = struct","counters":[]},{"line":"        type struct_t = [`Validation_89d8e42d7f3a4f67]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_validation_id x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let result_get x =","counters":[]},{"line":"          let discr = RA_.get_uint16 ~default:0 x 0 in","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          ValidationResult_12956713526515247866.decode discr","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module DeleteResource = struct","counters":[]},{"line":"        type struct_t = [`DeleteResource_86badb3b545b9790]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_ids x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get x = ","counters":[]},{"line":"          RA_.get_struct_list x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get_list x =","counters":[]},{"line":"          Capnp.Array.to_list (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"        let ids_get_array x =","counters":[]},{"line":"          Capnp.Array.to_array (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module HeartbeatPeer = struct","counters":[]},{"line":"        type struct_t = [`HeartbeatPeer_a2ca930f070de840]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_id x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let id_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module DownloadResource = struct","counters":[]},{"line":"        type struct_t = [`DownloadResource_e2fe4f9a5e1a5358]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let tag_get x =","counters":[]},{"line":"          RA_.get_uint8 ~default:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_ids x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get x = ","counters":[]},{"line":"          RA_.get_struct_list x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get_list x =","counters":[]},{"line":"          Capnp.Array.to_list (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"        let ids_get_array x =","counters":[]},{"line":"          Capnp.Array.to_array (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module AddResource = struct","counters":[]},{"line":"        type struct_t = [`AddResource_b28801bad1dacef0]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let tag_get x =","counters":[]},{"line":"          RA_.get_uint8 ~default:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_data x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let data_get x =","counters":[]},{"line":"          RA_.get_blob ~default:\"\" x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module RpcRequest = struct","counters":[]},{"line":"        type struct_t = [`RpcRequest_e448fafba2ab92e3]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_configure x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_set_gating_config x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_listen x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_get_listening_addrs x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_begin_advertising x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_peer x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_list_peers x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_generate_keypair x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_publish x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_subscribe x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_unsubscribe x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_stream_handler x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_remove_stream_handler x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_open_stream x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_close_stream x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_reset_stream x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_send_stream x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_set_node_status x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_get_peer_node_status x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_bandwidth_info x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_test_decode_bitswap_blocks x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_test_encode_bitswap_blocks x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Configure of Configure.Request.t","counters":[]},{"line":"          | SetGatingConfig of SetGatingConfig.Request.t","counters":[]},{"line":"          | Listen of Listen.Request.t","counters":[]},{"line":"          | GetListeningAddrs of GetListeningAddrs.Request.t","counters":[]},{"line":"          | BeginAdvertising of BeginAdvertising.Request.t","counters":[]},{"line":"          | AddPeer of AddPeer.Request.t","counters":[]},{"line":"          | ListPeers of ListPeers.Request.t","counters":[]},{"line":"          | GenerateKeypair of GenerateKeypair.Request.t","counters":[]},{"line":"          | Publish of Publish.Request.t","counters":[]},{"line":"          | Subscribe of Subscribe.Request.t","counters":[]},{"line":"          | Unsubscribe of Unsubscribe.Request.t","counters":[]},{"line":"          | AddStreamHandler of AddStreamHandler.Request.t","counters":[]},{"line":"          | RemoveStreamHandler of RemoveStreamHandler.Request.t","counters":[]},{"line":"          | OpenStream of OpenStream.Request.t","counters":[]},{"line":"          | CloseStream of CloseStream.Request.t","counters":[]},{"line":"          | ResetStream of ResetStream.Request.t","counters":[]},{"line":"          | SendStream of SendStream.Request.t","counters":[]},{"line":"          | SetNodeStatus of SetNodeStatus.Request.t","counters":[]},{"line":"          | GetPeerNodeStatus of GetPeerNodeStatus.Request.t","counters":[]},{"line":"          | BandwidthInfo of BandwidthInfo.Request.t","counters":[]},{"line":"          | TestDecodeBitswapBlocks of TestDecodeBitswapBlocks.Request.t","counters":[]},{"line":"          | TestEncodeBitswapBlocks of TestEncodeBitswapBlocks.Request.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match RA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> Configure (configure_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"          | 1 -> SetGatingConfig (set_gating_config_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"          | 2 -> Listen (listen_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":34,"col_end":34,"count":0}]},{"line":"          | 3 -> GetListeningAddrs (get_listening_addrs_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"          | 4 -> BeginAdvertising (begin_advertising_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"          | 5 -> AddPeer (add_peer_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"          | 6 -> ListPeers (list_peers_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"          | 7 -> GenerateKeypair (generate_keypair_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"          | 8 -> Publish (publish_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":36,"col_end":36,"count":0}]},{"line":"          | 9 -> Subscribe (subscribe_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"          | 10 -> Unsubscribe (unsubscribe_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | 11 -> AddStreamHandler (add_stream_handler_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"          | 12 -> RemoveStreamHandler (remove_stream_handler_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":63,"col_end":63,"count":0}]},{"line":"          | 13 -> OpenStream (open_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"          | 14 -> CloseStream (close_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          | 15 -> ResetStream (reset_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          | 16 -> SendStream (send_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"          | 17 -> SetNodeStatus (set_node_status_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 18 -> GetPeerNodeStatus (get_peer_node_status_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"          | 19 -> BandwidthInfo (bandwidth_info_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"          | 20 -> TestDecodeBitswapBlocks (test_decode_bitswap_blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":72,"col_end":72,"count":0}]},{"line":"          | 21 -> TestEncodeBitswapBlocks (test_encode_bitswap_blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":72,"col_end":72,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let has_header x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module RpcResponseSuccess = struct","counters":[]},{"line":"        type struct_t = [`RpcResponseSuccess_aa166667db5b6b9d]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_configure x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_set_gating_config x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_listen x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_get_listening_addrs x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_begin_advertising x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_peer x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_list_peers x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_generate_keypair x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_publish x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_subscribe x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_unsubscribe x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_stream_handler x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_remove_stream_handler x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_open_stream x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_close_stream x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_reset_stream x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_send_stream x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_set_node_status x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_get_peer_node_status x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_bandwidth_info x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_test_decode_bitswap_blocks x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_test_encode_bitswap_blocks x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Configure of Configure.Response.t","counters":[]},{"line":"          | SetGatingConfig of SetGatingConfig.Response.t","counters":[]},{"line":"          | Listen of Listen.Response.t","counters":[]},{"line":"          | GetListeningAddrs of GetListeningAddrs.Response.t","counters":[]},{"line":"          | BeginAdvertising of BeginAdvertising.Response.t","counters":[]},{"line":"          | AddPeer of AddPeer.Response.t","counters":[]},{"line":"          | ListPeers of ListPeers.Response.t","counters":[]},{"line":"          | GenerateKeypair of GenerateKeypair.Response.t","counters":[]},{"line":"          | Publish of Publish.Response.t","counters":[]},{"line":"          | Subscribe of Subscribe.Response.t","counters":[]},{"line":"          | Unsubscribe of Unsubscribe.Response.t","counters":[]},{"line":"          | AddStreamHandler of AddStreamHandler.Response.t","counters":[]},{"line":"          | RemoveStreamHandler of RemoveStreamHandler.Response.t","counters":[]},{"line":"          | OpenStream of OpenStream.Response.t","counters":[]},{"line":"          | CloseStream of CloseStream.Response.t","counters":[]},{"line":"          | ResetStream of ResetStream.Response.t","counters":[]},{"line":"          | SendStream of SendStream.Response.t","counters":[]},{"line":"          | SetNodeStatus of SetNodeStatus.Response.t","counters":[]},{"line":"          | GetPeerNodeStatus of GetPeerNodeStatus.Response.t","counters":[]},{"line":"          | BandwidthInfo of BandwidthInfo.Response.t","counters":[]},{"line":"          | TestDecodeBitswapBlocks of TestDecodeBitswapBlocks.Response.t","counters":[]},{"line":"          | TestEncodeBitswapBlocks of TestEncodeBitswapBlocks.Response.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match RA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> Configure (configure_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"          | 1 -> SetGatingConfig (set_gating_config_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"          | 2 -> Listen (listen_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":34,"col_end":34,"count":0}]},{"line":"          | 3 -> GetListeningAddrs (get_listening_addrs_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"          | 4 -> BeginAdvertising (begin_advertising_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"          | 5 -> AddPeer (add_peer_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"          | 6 -> ListPeers (list_peers_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"          | 7 -> GenerateKeypair (generate_keypair_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"          | 8 -> Publish (publish_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":36,"col_end":36,"count":0}]},{"line":"          | 9 -> Subscribe (subscribe_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"          | 10 -> Unsubscribe (unsubscribe_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | 11 -> AddStreamHandler (add_stream_handler_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"          | 12 -> RemoveStreamHandler (remove_stream_handler_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":63,"col_end":63,"count":0}]},{"line":"          | 13 -> OpenStream (open_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"          | 14 -> CloseStream (close_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          | 15 -> ResetStream (reset_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          | 16 -> SendStream (send_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"          | 17 -> SetNodeStatus (set_node_status_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 18 -> GetPeerNodeStatus (get_peer_node_status_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"          | 19 -> BandwidthInfo (bandwidth_info_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"          | 20 -> TestDecodeBitswapBlocks (test_decode_bitswap_blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":72,"col_end":72,"count":0}]},{"line":"          | 21 -> TestEncodeBitswapBlocks (test_encode_bitswap_blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":72,"col_end":72,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module RpcResponse = struct","counters":[]},{"line":"        type struct_t = [`RpcResponse_824dae3760b93d5d]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_error x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let error_get x =","counters":[]},{"line":"          RA_.get_text ~default:\"\" x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_success x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let success_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let success_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Error of string","counters":[]},{"line":"          | Success of RpcResponseSuccess.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match RA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> Error (error_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":32,"col_end":32,"count":0}]},{"line":"          | 1 -> Success (success_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":36,"col_end":36,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let has_header x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module PushMessage = struct","counters":[]},{"line":"        type struct_t = [`PushMessage_bcc32e2f197831bb]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_validation x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_resource x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_resource_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_resource_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_delete_resource x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let delete_resource_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let delete_resource_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_download_resource x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let download_resource_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let download_resource_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_heartbeat_peer x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let heartbeat_peer_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let heartbeat_peer_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Validation of Validation.t","counters":[]},{"line":"          | AddResource of AddResource.t","counters":[]},{"line":"          | DeleteResource of DeleteResource.t","counters":[]},{"line":"          | DownloadResource of DownloadResource.t","counters":[]},{"line":"          | HeartbeatPeer of HeartbeatPeer.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match RA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> Validation (validation_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          | 1 -> AddResource (add_resource_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | 2 -> DeleteResource (delete_resource_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 3 -> DownloadResource (download_resource_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"          | 4 -> HeartbeatPeer (heartbeat_peer_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":49,"col_end":49,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let has_header x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Message = struct","counters":[]},{"line":"        type struct_t = [`Message_dd721cc91936b5d8]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_rpc_request x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_request_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_request_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_push_message x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | RpcRequest of RpcRequest.t","counters":[]},{"line":"          | PushMessage of PushMessage.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match RA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> RpcRequest (rpc_request_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          | 1 -> PushMessage (push_message_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"    module DaemonInterface = struct","counters":[]},{"line":"      type struct_t = [`DaemonInterface_aa8c38390c8a53b0]","counters":[]},{"line":"      type t = struct_t reader_t","counters":[]},{"line":"      module PeerConnected = struct","counters":[]},{"line":"        type struct_t = [`PeerConnected_82b1f9dcfa3ef5b8]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_peer_id x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module PeerDisconnected = struct","counters":[]},{"line":"        type struct_t = [`PeerDisconnected_fb7ab58e17fecacc]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_peer_id x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module GossipReceived = struct","counters":[]},{"line":"        type struct_t = [`GossipReceived_8128c52d5468fe3b]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_sender x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let sender_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let sender_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_seen_at x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let seen_at_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let seen_at_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_expiration x =","counters":[]},{"line":"          RA_.has_field x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let expiration_get x =","counters":[]},{"line":"          RA_.get_struct x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let expiration_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_subscription_id x =","counters":[]},{"line":"          RA_.has_field x 3","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscription_id_get x =","counters":[]},{"line":"          RA_.get_struct x 3","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscription_id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 3","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_validation_id x =","counters":[]},{"line":"          RA_.has_field x 4","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_get x =","counters":[]},{"line":"          RA_.get_struct x 4","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 4","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_data x =","counters":[]},{"line":"          RA_.has_field x 5","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let data_get x =","counters":[]},{"line":"          RA_.get_blob ~default:\"\" x 5","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module IncomingStream = struct","counters":[]},{"line":"        type struct_t = [`IncomingStream_c5ea3ac9fb462264]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_stream_id x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_peer x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_protocol x =","counters":[]},{"line":"          RA_.has_field x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let protocol_get x =","counters":[]},{"line":"          RA_.get_text ~default:\"\" x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module StreamLost = struct","counters":[]},{"line":"        type struct_t = [`StreamLost_a2eea71b4749c940]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_stream_id x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_reason x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reason_get x =","counters":[]},{"line":"          RA_.get_text ~default:\"\" x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module StreamComplete = struct","counters":[]},{"line":"        type struct_t = [`StreamComplete_bec4cf678af6fe9d]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_stream_id x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module StreamMessageReceived = struct","counters":[]},{"line":"        type struct_t = [`StreamMessageReceived_fe6afa3ac9731c83]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_msg x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let msg_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let msg_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module ResourceUpdate = struct","counters":[]},{"line":"        type struct_t = [`ResourceUpdate_edec79530db7ca8e]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let type_get x =","counters":[]},{"line":"          let discr = RA_.get_uint16 ~default:0 x 0 in","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          ResourceUpdateType_12722323391428546450.decode discr","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_ids x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get x = ","counters":[]},{"line":"          RA_.get_struct_list x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get_list x =","counters":[]},{"line":"          Capnp.Array.to_list (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"        let ids_get_array x =","counters":[]},{"line":"          Capnp.Array.to_array (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module PushMessage = struct","counters":[]},{"line":"        type struct_t = [`PushMessage_8ec8fa620071fa9f]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_peer_connected x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_connected_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_connected_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_peer_disconnected x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_disconnected_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_disconnected_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_gossip_received x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let gossip_received_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let gossip_received_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_incoming_stream x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let incoming_stream_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let incoming_stream_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_stream_lost x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_lost_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_lost_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_stream_complete x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_complete_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_complete_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_stream_message_received x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_message_received_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_message_received_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_resource_updated x =","counters":[]},{"line":"          RA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let resource_updated_get x =","counters":[]},{"line":"          RA_.get_struct x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let resource_updated_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | PeerConnected of PeerConnected.t","counters":[]},{"line":"          | PeerDisconnected of PeerDisconnected.t","counters":[]},{"line":"          | GossipReceived of GossipReceived.t","counters":[]},{"line":"          | IncomingStream of IncomingStream.t","counters":[]},{"line":"          | StreamLost of StreamLost.t","counters":[]},{"line":"          | StreamComplete of StreamComplete.t","counters":[]},{"line":"          | StreamMessageReceived of StreamMessageReceived.t","counters":[]},{"line":"          | ResourceUpdated of ResourceUpdate.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match RA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> PeerConnected (peer_connected_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":49,"col_end":49,"count":0}]},{"line":"          | 1 -> PeerDisconnected (peer_disconnected_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"          | 2 -> GossipReceived (gossip_received_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 3 -> IncomingStream (incoming_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 4 -> StreamLost (stream_lost_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          | 5 -> StreamComplete (stream_complete_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 6 -> StreamMessageReceived (stream_message_received_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":66,"col_end":66,"count":0}]},{"line":"          | 7 -> ResourceUpdated (resource_updated_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let has_header x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Message = struct","counters":[]},{"line":"        type struct_t = [`Message_d78f8b719109324e]","counters":[]},{"line":"        type t = struct_t reader_t","counters":[]},{"line":"        let has_rpc_response x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_response_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_response_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_push_message x =","counters":[]},{"line":"          RA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_get x =","counters":[]},{"line":"          RA_.get_struct x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_get_pipelined x =","counters":[]},{"line":"          MessageWrapper.Untyped.struct_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | RpcResponse of Libp2pHelperInterface.RpcResponse.t","counters":[]},{"line":"          | PushMessage of PushMessage.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match RA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> RpcResponse (rpc_response_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | 1 -> PushMessage (push_message_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":67,"col_end":67,"count":0}]},{"line":"        let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"      end","counters":[]},{"line":"      let of_message x = RA_.get_root_struct (RA_.Message.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":65,"col_end":65,"count":0}]},{"line":"      let of_builder x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":25,"col_end":25,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Builder = struct","counters":[]},{"line":"    type array_t = Reader.builder_array_t","counters":[]},{"line":"    type reader_array_t = Reader.array_t","counters":[]},{"line":"    type pointer_t = rw MessageWrapper.Slice.t","counters":[]},{"line":"","counters":[]},{"line":"    module Multiaddr = struct","counters":[]},{"line":"      type struct_t = [`Multiaddr_ed11d634701b0d8e]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_representation x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let representation_get x =","counters":[]},{"line":"        BA_.get_text ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let representation_set x v =","counters":[]},{"line":"        BA_.set_text x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module PeerId = struct","counters":[]},{"line":"      type struct_t = [`PeerId_caf9ffc384dfb56c]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_id x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_get x =","counters":[]},{"line":"        BA_.get_text ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_set x v =","counters":[]},{"line":"        BA_.set_text x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module BlockWithId = struct","counters":[]},{"line":"      type struct_t = [`BlockWithId_a784810bf56d058c]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_blake2b_hash x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let blake2b_hash_get x =","counters":[]},{"line":"        BA_.get_blob ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let blake2b_hash_set x v =","counters":[]},{"line":"        BA_.set_blob x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_block x =","counters":[]},{"line":"        BA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let block_get x =","counters":[]},{"line":"        BA_.get_blob ~default:\"\" x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let block_set x v =","counters":[]},{"line":"        BA_.set_blob x 1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module RootBlockId = struct","counters":[]},{"line":"      type struct_t = [`RootBlockId_abf6a984ba800725]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_blake2b_hash x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let blake2b_hash_get x =","counters":[]},{"line":"        BA_.get_blob ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let blake2b_hash_set x v =","counters":[]},{"line":"        BA_.set_blob x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module AddrInfo = struct","counters":[]},{"line":"      type struct_t = [`AddrInfo_89e4194c3e64d647]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_peer_id x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_addrs x =","counters":[]},{"line":"        BA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let addrs_get x = ","counters":[]},{"line":"        BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let addrs_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (addrs_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"      let addrs_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (addrs_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"      let addrs_set x v =","counters":[]},{"line":"        BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let addrs_init x n =","counters":[]},{"line":"        BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 1 n","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let addrs_set_list x v =","counters":[]},{"line":"        let builder = addrs_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let addrs_set_array x v =","counters":[]},{"line":"        let builder = addrs_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module PeerInfo = struct","counters":[]},{"line":"      type struct_t = [`PeerInfo_ae7b97cc383b684e]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let libp2p_port_get x =","counters":[]},{"line":"        BA_.get_uint16 ~default:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let libp2p_port_set_exn x v =","counters":[]},{"line":"        BA_.set_uint16 ~default:0 x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_host x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let host_get x =","counters":[]},{"line":"        BA_.get_text ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let host_set x v =","counters":[]},{"line":"        BA_.set_text x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_peer_id x =","counters":[]},{"line":"        BA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:0 ~pointer_words:1 x 1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:0 ~pointer_words:1 x 1 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:2 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:2 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module SequenceNumber = struct","counters":[]},{"line":"      type struct_t = [`SequenceNumber_a5063d26e6e7aa47]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let seqno_get x =","counters":[]},{"line":"        BA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seqno_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (seqno_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"      let seqno_set x v =","counters":[]},{"line":"        BA_.set_uint64 ~default:Stdint.Uint64.zero x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seqno_set_int_exn x v = seqno_set x (Capnp.Runtime.Util.uint64_of_int_exn v)","counters":[{"col_start":34,"col_end":34,"count":0},{"col_start":82,"col_end":82,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:0 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:0 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module ValidationId = struct","counters":[]},{"line":"      type struct_t = [`ValidationId_89c0f3360eecf997]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let id_get x =","counters":[]},{"line":"        BA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (id_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"      let id_set x v =","counters":[]},{"line":"        BA_.set_uint64 ~default:Stdint.Uint64.zero x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_set_int_exn x v = id_set x (Capnp.Runtime.Util.uint64_of_int_exn v)","counters":[{"col_start":31,"col_end":31,"count":0},{"col_start":76,"col_end":76,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:0 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:0 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module StreamId = struct","counters":[]},{"line":"      type struct_t = [`StreamId_d3ec891916526de8]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let id_get x =","counters":[]},{"line":"        BA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (id_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"      let id_set x v =","counters":[]},{"line":"        BA_.set_uint64 ~default:Stdint.Uint64.zero x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_set_int_exn x v = id_set x (Capnp.Runtime.Util.uint64_of_int_exn v)","counters":[{"col_start":31,"col_end":31,"count":0},{"col_start":76,"col_end":76,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:0 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:0 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module SubscriptionId = struct","counters":[]},{"line":"      type struct_t = [`SubscriptionId_fc2430a71b2c8f44]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let id_get x =","counters":[]},{"line":"        BA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (id_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"      let id_set x v =","counters":[]},{"line":"        BA_.set_uint64 ~default:Stdint.Uint64.zero x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let id_set_int_exn x v = id_set x (Capnp.Runtime.Util.uint64_of_int_exn v)","counters":[{"col_start":31,"col_end":31,"count":0},{"col_start":76,"col_end":76,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:0 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:0 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module Libp2pKeypair = struct","counters":[]},{"line":"      type struct_t = [`Libp2pKeypair_fb61e5f7d6a0208e]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_private_key x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let private_key_get x =","counters":[]},{"line":"        BA_.get_blob ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let private_key_set x v =","counters":[]},{"line":"        BA_.set_blob x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_public_key x =","counters":[]},{"line":"        BA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let public_key_get x =","counters":[]},{"line":"        BA_.get_blob ~default:\"\" x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let public_key_set x v =","counters":[]},{"line":"        BA_.set_blob x 1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_peer_id x =","counters":[]},{"line":"        BA_.has_field x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:0 ~pointer_words:1 x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:0 ~pointer_words:1 x 2 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:0 ~pointer_words:1 x 2 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_id_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:0 ~pointer_words:1 x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:3 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:3 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module GatingConfig = struct","counters":[]},{"line":"      type struct_t = [`GatingConfig_e1202e2bb52d45e6]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_banned_ips x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_ips_get x =","counters":[]},{"line":"        BA_.get_text_list x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_ips_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (banned_ips_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"      let banned_ips_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (banned_ips_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"      let banned_ips_set x v =","counters":[]},{"line":"        BA_.set_text_list x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_ips_init x n =","counters":[]},{"line":"        BA_.init_text_list x 0 n","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let banned_ips_set_list x v =","counters":[]},{"line":"        let builder = banned_ips_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":1},{"col_start":51,"col_end":51,"count":1}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":1},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let banned_ips_set_array x v =","counters":[]},{"line":"        let builder = banned_ips_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_banned_peer_ids x =","counters":[]},{"line":"        BA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_peer_ids_get x = ","counters":[]},{"line":"        BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_peer_ids_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (banned_peer_ids_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"      let banned_peer_ids_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (banned_peer_ids_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":48,"col_end":48,"count":0}]},{"line":"      let banned_peer_ids_set x v =","counters":[]},{"line":"        BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let banned_peer_ids_init x n =","counters":[]},{"line":"        BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 1 n","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let banned_peer_ids_set_list x v =","counters":[]},{"line":"        let builder = banned_peer_ids_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":1},{"col_start":56,"col_end":56,"count":1}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":1},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let banned_peer_ids_set_array x v =","counters":[]},{"line":"        let builder = banned_peer_ids_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_trusted_ips x =","counters":[]},{"line":"        BA_.has_field x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_ips_get x =","counters":[]},{"line":"        BA_.get_text_list x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_ips_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (trusted_ips_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"      let trusted_ips_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (trusted_ips_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"      let trusted_ips_set x v =","counters":[]},{"line":"        BA_.set_text_list x 2 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_ips_init x n =","counters":[]},{"line":"        BA_.init_text_list x 2 n","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let trusted_ips_set_list x v =","counters":[]},{"line":"        let builder = trusted_ips_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":1},{"col_start":52,"col_end":52,"count":1}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":1},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let trusted_ips_set_array x v =","counters":[]},{"line":"        let builder = trusted_ips_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_trusted_peer_ids x =","counters":[]},{"line":"        BA_.has_field x 3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_peer_ids_get x = ","counters":[]},{"line":"        BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_peer_ids_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (trusted_peer_ids_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":48,"col_end":48,"count":0}]},{"line":"      let trusted_peer_ids_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (trusted_peer_ids_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":49,"col_end":49,"count":0}]},{"line":"      let trusted_peer_ids_set x v =","counters":[]},{"line":"        BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 3 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let trusted_peer_ids_init x n =","counters":[]},{"line":"        BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 3 n","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let trusted_peer_ids_set_list x v =","counters":[]},{"line":"        let builder = trusted_peer_ids_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":1},{"col_start":57,"col_end":57,"count":1}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":1},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let trusted_peer_ids_set_array x v =","counters":[]},{"line":"        let builder = trusted_peer_ids_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let isolate_get x =","counters":[]},{"line":"        BA_.get_bit ~default:false x ~byte_ofs:0 ~bit_ofs:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let isolate_set x v =","counters":[]},{"line":"        BA_.set_bit ~default:false x ~byte_ofs:0 ~bit_ofs:0 v","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:4 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":1},{"col_start":55,"col_end":55,"count":1}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:4 ()","counters":[{"col_start":8,"col_end":8,"count":1}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module TopicLevel = struct","counters":[]},{"line":"      type struct_t = [`TopicLevel_a382869c0ba548c2]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_topics x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topics_get x =","counters":[]},{"line":"        BA_.get_text_list x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topics_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (topics_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"      let topics_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (topics_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":39,"col_end":39,"count":0}]},{"line":"      let topics_set x v =","counters":[]},{"line":"        BA_.set_text_list x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topics_init x n =","counters":[]},{"line":"        BA_.init_text_list x 0 n","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topics_set_list x v =","counters":[]},{"line":"        let builder = topics_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topics_set_array x v =","counters":[]},{"line":"        let builder = topics_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":48,"col_end":48,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module Libp2pConfig = struct","counters":[]},{"line":"      type struct_t = [`Libp2pConfig_c90f65b6852b9c22]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_statedir x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let statedir_get x =","counters":[]},{"line":"        BA_.get_text ~default:\"\" x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let statedir_set x v =","counters":[]},{"line":"        BA_.set_text x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_private_key x =","counters":[]},{"line":"        BA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let private_key_get x =","counters":[]},{"line":"        BA_.get_blob ~default:\"\" x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let private_key_set x v =","counters":[]},{"line":"        BA_.set_blob x 1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_network_id x =","counters":[]},{"line":"        BA_.has_field x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let network_id_get x =","counters":[]},{"line":"        BA_.get_text ~default:\"\" x 2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let network_id_set x v =","counters":[]},{"line":"        BA_.set_text x 2 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_listen_on x =","counters":[]},{"line":"        BA_.has_field x 3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let listen_on_get x = ","counters":[]},{"line":"        BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 3","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let listen_on_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (listen_on_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"      let listen_on_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (listen_on_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"      let listen_on_set x v =","counters":[]},{"line":"        BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 3 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let listen_on_init x n =","counters":[]},{"line":"        BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 3 n","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let listen_on_set_list x v =","counters":[]},{"line":"        let builder = listen_on_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let listen_on_set_array x v =","counters":[]},{"line":"        let builder = listen_on_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let metrics_port_get x =","counters":[]},{"line":"        BA_.get_uint16 ~default:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let metrics_port_set_exn x v =","counters":[]},{"line":"        BA_.set_uint16 ~default:0 x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_external_multiaddr x =","counters":[]},{"line":"        BA_.has_field x 4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let external_multiaddr_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:0 ~pointer_words:1 x 4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let external_multiaddr_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:0 ~pointer_words:1 x 4 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let external_multiaddr_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:0 ~pointer_words:1 x 4 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let external_multiaddr_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:0 ~pointer_words:1 x 4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let unsafe_no_trust_ip_get x =","counters":[]},{"line":"        BA_.get_bit ~default:false x ~byte_ofs:2 ~bit_ofs:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let unsafe_no_trust_ip_set x v =","counters":[]},{"line":"        BA_.set_bit ~default:false x ~byte_ofs:2 ~bit_ofs:0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let flood_get x =","counters":[]},{"line":"        BA_.get_bit ~default:false x ~byte_ofs:2 ~bit_ofs:1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let flood_set x v =","counters":[]},{"line":"        BA_.set_bit ~default:false x ~byte_ofs:2 ~bit_ofs:1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_exchange_get x =","counters":[]},{"line":"        BA_.get_bit ~default:false x ~byte_ofs:2 ~bit_ofs:2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_exchange_set x v =","counters":[]},{"line":"        BA_.set_bit ~default:false x ~byte_ofs:2 ~bit_ofs:2 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_direct_peers x =","counters":[]},{"line":"        BA_.has_field x 5","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let direct_peers_get x = ","counters":[]},{"line":"        BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 5","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let direct_peers_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (direct_peers_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"      let direct_peers_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (direct_peers_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"      let direct_peers_set x v =","counters":[]},{"line":"        BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 5 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let direct_peers_init x n =","counters":[]},{"line":"        BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 5 n","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let direct_peers_set_list x v =","counters":[]},{"line":"        let builder = direct_peers_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let direct_peers_set_array x v =","counters":[]},{"line":"        let builder = direct_peers_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_seed_peers x =","counters":[]},{"line":"        BA_.has_field x 6","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seed_peers_get x = ","counters":[]},{"line":"        BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 6","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seed_peers_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (seed_peers_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"      let seed_peers_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (seed_peers_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"      let seed_peers_set x v =","counters":[]},{"line":"        BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 6 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seed_peers_init x n =","counters":[]},{"line":"        BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 6 n","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seed_peers_set_list x v =","counters":[]},{"line":"        let builder = seed_peers_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let seed_peers_set_array x v =","counters":[]},{"line":"        let builder = seed_peers_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_gating_config x =","counters":[]},{"line":"        BA_.has_field x 7","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let gating_config_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:1 ~pointer_words:4 x 7","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let gating_config_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:4 x 7 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let gating_config_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:4 x 7 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let gating_config_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:1 ~pointer_words:4 x 7","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let max_connections_get x =","counters":[]},{"line":"        BA_.get_uint32 ~default:Stdint.Uint32.zero x 4","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let max_connections_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint32_exn (max_connections_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":64,"col_end":64,"count":0}]},{"line":"      let max_connections_set x v =","counters":[]},{"line":"        BA_.set_uint32 ~default:Stdint.Uint32.zero x 4 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let max_connections_set_int_exn x v = max_connections_set x (Capnp.Runtime.Util.uint32_of_int_exn v)","counters":[{"col_start":44,"col_end":44,"count":0},{"col_start":102,"col_end":102,"count":0}]},{"line":"      let validation_queue_size_get x =","counters":[]},{"line":"        BA_.get_uint32 ~default:Stdint.Uint32.zero x 8","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let validation_queue_size_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint32_exn (validation_queue_size_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":70,"col_end":70,"count":0}]},{"line":"      let validation_queue_size_set x v =","counters":[]},{"line":"        BA_.set_uint32 ~default:Stdint.Uint32.zero x 8 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let validation_queue_size_set_int_exn x v = validation_queue_size_set x (Capnp.Runtime.Util.uint32_of_int_exn v)","counters":[{"col_start":50,"col_end":50,"count":0},{"col_start":114,"col_end":114,"count":0}]},{"line":"      let peer_protection_ratio_get x =","counters":[]},{"line":"        BA_.get_float32 ~default_bits:(0l) x 12","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let peer_protection_ratio_set x v =","counters":[]},{"line":"        BA_.set_float32 ~default_bits:(0l) x 12 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let min_connections_get x =","counters":[]},{"line":"        BA_.get_uint32 ~default:Stdint.Uint32.zero x 16","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let min_connections_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint32_exn (min_connections_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":64,"col_end":64,"count":0}]},{"line":"      let min_connections_set x v =","counters":[]},{"line":"        BA_.set_uint32 ~default:Stdint.Uint32.zero x 16 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let min_connections_set_int_exn x v = min_connections_set x (Capnp.Runtime.Util.uint32_of_int_exn v)","counters":[{"col_start":44,"col_end":44,"count":0},{"col_start":102,"col_end":102,"count":0}]},{"line":"      let has_known_private_ip_nets x =","counters":[]},{"line":"        BA_.has_field x 8","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let known_private_ip_nets_get x =","counters":[]},{"line":"        BA_.get_text_list x 8","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let known_private_ip_nets_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (known_private_ip_nets_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"      let known_private_ip_nets_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (known_private_ip_nets_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"      let known_private_ip_nets_set x v =","counters":[]},{"line":"        BA_.set_text_list x 8 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let known_private_ip_nets_init x n =","counters":[]},{"line":"        BA_.init_text_list x 8 n","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let known_private_ip_nets_set_list x v =","counters":[]},{"line":"        let builder = known_private_ip_nets_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":62,"col_end":62,"count":0}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let known_private_ip_nets_set_array x v =","counters":[]},{"line":"        let builder = known_private_ip_nets_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":63,"col_end":63,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_topic_config x =","counters":[]},{"line":"        BA_.has_field x 9","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topic_config_get x = ","counters":[]},{"line":"        BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 9","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topic_config_get_list x =","counters":[]},{"line":"        Capnp.Array.to_list (topic_config_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"      let topic_config_get_array x =","counters":[]},{"line":"        Capnp.Array.to_array (topic_config_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"      let topic_config_set x v =","counters":[]},{"line":"        BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 9 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topic_config_init x n =","counters":[]},{"line":"        BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 9 n","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topic_config_set_list x v =","counters":[]},{"line":"        let builder = topic_config_init x (List.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"        let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let topic_config_set_array x v =","counters":[]},{"line":"        let builder = topic_config_init x (Array.length v) in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"        let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"        builder","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:3 ~pointer_words:10 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:3 ~pointer_words:10 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:3 ~pointer_words:10","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module ResourceUpdateType = struct","counters":[]},{"line":"      type t = ResourceUpdateType_12722323391428546450.t =","counters":[]},{"line":"        | Added","counters":[]},{"line":"        | Removed","counters":[]},{"line":"        | Broken","counters":[]},{"line":"        | Undefined of int","counters":[]},{"line":"    end","counters":[]},{"line":"    module ValidationResult = struct","counters":[]},{"line":"      type t = ValidationResult_12956713526515247866.t =","counters":[]},{"line":"        | Accept","counters":[]},{"line":"        | Reject","counters":[]},{"line":"        | Ignore","counters":[]},{"line":"        | Undefined of int","counters":[]},{"line":"    end","counters":[]},{"line":"    module StreamMessage = struct","counters":[]},{"line":"      type struct_t = [`StreamMessage_aa5cdd4cc2bd8222]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_stream_id x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let stream_id_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let stream_id_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let stream_id_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let stream_id_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_data x =","counters":[]},{"line":"        BA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let data_get x =","counters":[]},{"line":"        BA_.get_blob ~default:\"\" x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let data_set x v =","counters":[]},{"line":"        BA_.set_blob x 1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module Duration = struct","counters":[]},{"line":"      type struct_t = [`Duration_bf96c4e0ff964090]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let nano_sec_get x =","counters":[]},{"line":"        BA_.get_uint64 ~default:Stdint.Uint64.zero x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let nano_sec_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_uint64_exn (nano_sec_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"      let nano_sec_set x v =","counters":[]},{"line":"        BA_.set_uint64 ~default:Stdint.Uint64.zero x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let nano_sec_set_int_exn x v = nano_sec_set x (Capnp.Runtime.Util.uint64_of_int_exn v)","counters":[{"col_start":37,"col_end":37,"count":0},{"col_start":88,"col_end":88,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:0 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:0 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module UnixNano = struct","counters":[]},{"line":"      type struct_t = [`UnixNano_9d6900bcb72b8938]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let nano_sec_get x =","counters":[]},{"line":"        BA_.get_int64 ~default:(0L) x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let nano_sec_get_int_exn x =","counters":[]},{"line":"        Capnp.Runtime.Util.int_of_int64_exn (nano_sec_get x)","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"      let nano_sec_set x v =","counters":[]},{"line":"        BA_.set_int64 ~default:(0L) x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let nano_sec_set_int x v = nano_sec_set x (Int64.of_int v)","counters":[{"col_start":33,"col_end":33,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:0 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:0 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module PushMessageHeader = struct","counters":[]},{"line":"      type struct_t = [`PushMessageHeader_a8298a9629f09cdc]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_time_sent x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module RpcMessageHeader = struct","counters":[]},{"line":"      type struct_t = [`RpcMessageHeader_a244ebaa77d7c1cf]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      let has_time_sent x =","counters":[]},{"line":"        BA_.has_field x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let time_sent_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let has_sequence_number x =","counters":[]},{"line":"        BA_.has_field x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let sequence_number_get x =","counters":[]},{"line":"        BA_.get_struct ~data_words:1 ~pointer_words:0 x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let sequence_number_set_reader x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:0 x 1 v","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let sequence_number_set_builder x v =","counters":[]},{"line":"        BA_.set_struct ~data_words:1 ~pointer_words:0 x 1 (Some v)","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let sequence_number_init x =","counters":[]},{"line":"        BA_.init_struct ~data_words:1 ~pointer_words:0 x 1","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module Libp2pHelperInterface = struct","counters":[]},{"line":"      type struct_t = [`Libp2pHelperInterface_91c5868ca6847cc5]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      module Configure = struct","counters":[]},{"line":"        type struct_t = [`Configure_ff0e5f175237cf55]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_bbfd8fe6d222b0a1]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_config x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let config_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:3 ~pointer_words:10 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let config_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:3 ~pointer_words:10 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let config_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:3 ~pointer_words:10 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let config_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:3 ~pointer_words:10 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_ffdbb8a4a072322b]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module SetGatingConfig = struct","counters":[]},{"line":"        type struct_t = [`SetGatingConfig_9eed76ad25f4d362]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_bae9227a811faef6]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_gating_config x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let gating_config_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:1 ~pointer_words:4 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let gating_config_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:4 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let gating_config_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:4 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let gating_config_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:1 ~pointer_words:4 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_8b1c161e3d21d6b1]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Listen = struct","counters":[]},{"line":"        type struct_t = [`Listen_e884b52c8948d81b]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_cdbeb7cf54035b71]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_iface x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let iface_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let iface_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let iface_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let iface_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_c1f9b9db8212bf72]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x = ","counters":[]},{"line":"            BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let result_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let result_set x v =","counters":[]},{"line":"            BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_init x n =","counters":[]},{"line":"            BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 0 n","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set_list x v =","counters":[]},{"line":"            let builder = result_init x (List.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"            let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set_array x v =","counters":[]},{"line":"            let builder = result_init x (Array.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"            let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module GetListeningAddrs = struct","counters":[]},{"line":"        type struct_t = [`GetListeningAddrs_f6c7b7d1f45c6434]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_83d991af72ada648]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_bae1386e815a99d1]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x = ","counters":[]},{"line":"            BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let result_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let result_set x v =","counters":[]},{"line":"            BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_init x n =","counters":[]},{"line":"            BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 0 n","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set_list x v =","counters":[]},{"line":"            let builder = result_init x (List.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"            let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set_array x v =","counters":[]},{"line":"            let builder = result_init x (Array.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"            let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module BeginAdvertising = struct","counters":[]},{"line":"        type struct_t = [`BeginAdvertising_fde7d941c690b3a7]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_d2e7ac23195dffe2]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_f6c843e7ba07b900]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module AddPeer = struct","counters":[]},{"line":"        type struct_t = [`AddPeer_ba41f14b128a1dd7]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_c258720d7c5c09ed]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_multiaddr x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let multiaddr_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let multiaddr_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let multiaddr_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let multiaddr_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let is_seed_get x =","counters":[]},{"line":"            BA_.get_bit ~default:false x ~byte_ofs:0 ~bit_ofs:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let is_seed_set x v =","counters":[]},{"line":"            BA_.set_bit ~default:false x ~byte_ofs:0 ~bit_ofs:0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_9a9a8d03d3f08548]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module ListPeers = struct","counters":[]},{"line":"        type struct_t = [`ListPeers_d48ef9a8506586a6]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_bb6edc2598638c9c]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_fb54cca136535a14]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x = ","counters":[]},{"line":"            BA_.get_struct_list ~data_words:1 ~pointer_words:2 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let result_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (result_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let result_set x v =","counters":[]},{"line":"            BA_.set_struct_list ~data_words:1 ~pointer_words:2 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_init x n =","counters":[]},{"line":"            BA_.init_struct_list ~data_words:1 ~pointer_words:2 x 0 n","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set_list x v =","counters":[]},{"line":"            let builder = result_init x (List.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"            let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set_array x v =","counters":[]},{"line":"            let builder = result_init x (Array.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"            let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module BandwidthInfo = struct","counters":[]},{"line":"        type struct_t = [`BandwidthInfo_969a629719fde633]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_e4386d9ee8d69654]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_96359b995ba506f4]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let input_bandwidth_get x =","counters":[]},{"line":"            BA_.get_float64 ~default_bits:(0L) x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let input_bandwidth_set x v =","counters":[]},{"line":"            BA_.set_float64 ~default_bits:(0L) x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let output_bandwidth_get x =","counters":[]},{"line":"            BA_.get_float64 ~default_bits:(0L) x 8","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let output_bandwidth_set x v =","counters":[]},{"line":"            BA_.set_float64 ~default_bits:(0L) x 8 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let cpu_usage_get x =","counters":[]},{"line":"            BA_.get_float64 ~default_bits:(0L) x 16","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let cpu_usage_set x v =","counters":[]},{"line":"            BA_.set_float64 ~default_bits:(0L) x 16 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:3 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:3 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:3 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module GenerateKeypair = struct","counters":[]},{"line":"        type struct_t = [`GenerateKeypair_b973118252345b14]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_ce71e91d5eb99a49]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_b1b128c54a9c378a]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:0 ~pointer_words:3 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:3 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:3 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:0 ~pointer_words:3 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Publish = struct","counters":[]},{"line":"        type struct_t = [`Publish_abd77ad6fe644f04]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_9cecb704bb2aeaaa]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_topic x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let topic_get x =","counters":[]},{"line":"            BA_.get_text ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let topic_set x v =","counters":[]},{"line":"            BA_.set_text x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_data x =","counters":[]},{"line":"            BA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let data_get x =","counters":[]},{"line":"            BA_.get_blob ~default:\"\" x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let data_set x v =","counters":[]},{"line":"            BA_.set_blob x 1 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_b608443b70279f42]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Subscribe = struct","counters":[]},{"line":"        type struct_t = [`Subscribe_87e63b07187d61fd]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f30859dedd19e179]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_topic x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let topic_get x =","counters":[]},{"line":"            BA_.get_text ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let topic_set x v =","counters":[]},{"line":"            BA_.set_text x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_subscription_id x =","counters":[]},{"line":"            BA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:1 ~pointer_words:0 x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 1 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 1 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:1 ~pointer_words:0 x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_a969a5ea58b5581c]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Unsubscribe = struct","counters":[]},{"line":"        type struct_t = [`Unsubscribe_cce2ad102c7ea857]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f3e0ba7fbe583065]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_subscription_id x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let subscription_id_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_af6af6e1ad511e3a]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module AddStreamHandler = struct","counters":[]},{"line":"        type struct_t = [`AddStreamHandler_87594eae8c8531ee]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_a42892d737705a9c]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_protocol x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_get x =","counters":[]},{"line":"            BA_.get_text ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_set x v =","counters":[]},{"line":"            BA_.set_text x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_f2765705336251b5]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module RemoveStreamHandler = struct","counters":[]},{"line":"        type struct_t = [`RemoveStreamHandler_c909f587e1bb9499]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_b822fab66dabdf26]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_protocol x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_get x =","counters":[]},{"line":"            BA_.get_text ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_set x v =","counters":[]},{"line":"            BA_.set_text x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_caae22b415293cb3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module OpenStream = struct","counters":[]},{"line":"        type struct_t = [`OpenStream_dc75bca71078eb01]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f77175f458d711a8]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_peer x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_protocol_id x =","counters":[]},{"line":"            BA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_id_get x =","counters":[]},{"line":"            BA_.get_text ~default:\"\" x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let protocol_id_set x v =","counters":[]},{"line":"            BA_.set_text x 1 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_918222cd43d37f6c]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_stream_id x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_peer x =","counters":[]},{"line":"            BA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:1 ~pointer_words:2 x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:2 x 1 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:2 x 1 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:1 ~pointer_words:2 x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module CloseStream = struct","counters":[]},{"line":"        type struct_t = [`CloseStream_fb4640ea8f01c33b]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_956577d02c2197b3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_stream_id x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_dea74fe5c2096c99]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module ResetStream = struct","counters":[]},{"line":"        type struct_t = [`ResetStream_aa5672b913b9c728]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f2ba9a25df1929e3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_stream_id x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let stream_id_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_a4ef405cd24ad7a3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module SendStream = struct","counters":[]},{"line":"        type struct_t = [`SendStream_e079d0d7c895a200]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_f6ac925efcae1dda]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_msg x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let msg_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let msg_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:2 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let msg_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:2 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let msg_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_934ce73a7d9d3d3a]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module SetNodeStatus = struct","counters":[]},{"line":"        type struct_t = [`SetNodeStatus_806d105a074b7e19]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_fcf94c0b3ea7ac29]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_status x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let status_get x =","counters":[]},{"line":"            BA_.get_blob ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let status_set x v =","counters":[]},{"line":"            BA_.set_blob x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_f1a5d120cfd28003]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module GetPeerNodeStatus = struct","counters":[]},{"line":"        type struct_t = [`GetPeerNodeStatus_d5738b22303fce4e]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_eb7b01a9c0a1e9cb]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_peer x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let peer_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_fb9439112386d425]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_result x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_get x =","counters":[]},{"line":"            BA_.get_blob ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let result_set x v =","counters":[]},{"line":"            BA_.set_blob x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module TestDecodeBitswapBlocks = struct","counters":[]},{"line":"        type struct_t = [`TestDecodeBitswapBlocks_e5780789678719ec]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_8050be5b024b71ef]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_blocks x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_get x = ","counters":[]},{"line":"            BA_.get_struct_list ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let blocks_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let blocks_set x v =","counters":[]},{"line":"            BA_.set_struct_list ~data_words:0 ~pointer_words:2 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_init x n =","counters":[]},{"line":"            BA_.init_struct_list ~data_words:0 ~pointer_words:2 x 0 n","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_set_list x v =","counters":[]},{"line":"            let builder = blocks_init x (List.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"            let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_set_array x v =","counters":[]},{"line":"            let builder = blocks_init x (Array.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"            let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_root_block_id x =","counters":[]},{"line":"            BA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 1 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 1 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_b0506afb32106477]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_decoded_data x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let decoded_data_get x =","counters":[]},{"line":"            BA_.get_blob ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let decoded_data_set x v =","counters":[]},{"line":"            BA_.set_blob x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module TestEncodeBitswapBlocks = struct","counters":[]},{"line":"        type struct_t = [`TestEncodeBitswapBlocks_fdbea00423ed6c49]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        module Request = struct","counters":[]},{"line":"          type struct_t = [`Request_a6a24bb291f80ca6]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_data x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let data_get x =","counters":[]},{"line":"            BA_.get_blob ~default:\"\" x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let data_set x v =","counters":[]},{"line":"            BA_.set_blob x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let max_block_size_get x =","counters":[]},{"line":"            BA_.get_int64 ~default:(0L) x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let max_block_size_get_int_exn x =","counters":[]},{"line":"            Capnp.Runtime.Util.int_of_int64_exn (max_block_size_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":66,"col_end":66,"count":0}]},{"line":"          let max_block_size_set x v =","counters":[]},{"line":"            BA_.set_int64 ~default:(0L) x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let max_block_size_set_int x v = max_block_size_set x (Int64.of_int v)","counters":[{"col_start":43,"col_end":43,"count":0},{"col_start":76,"col_end":76,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        module Response = struct","counters":[]},{"line":"          type struct_t = [`Response_c2cfafb29b55e5d3]","counters":[]},{"line":"          type t = struct_t builder_t","counters":[]},{"line":"          let has_blocks x =","counters":[]},{"line":"            BA_.has_field x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_get x = ","counters":[]},{"line":"            BA_.get_struct_list ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_get_list x =","counters":[]},{"line":"            Capnp.Array.to_list (blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          let blocks_get_array x =","counters":[]},{"line":"            Capnp.Array.to_array (blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          let blocks_set x v =","counters":[]},{"line":"            BA_.set_struct_list ~data_words:0 ~pointer_words:2 x 0 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_init x n =","counters":[]},{"line":"            BA_.init_struct_list ~data_words:0 ~pointer_words:2 x 0 n","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_set_list x v =","counters":[]},{"line":"            let builder = blocks_init x (List.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"            let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let blocks_set_array x v =","counters":[]},{"line":"            let builder = blocks_init x (Array.length v) in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"            let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"            builder","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let has_root_block_id x =","counters":[]},{"line":"            BA_.has_field x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_get x =","counters":[]},{"line":"            BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_set_reader x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 1 v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_set_builder x v =","counters":[]},{"line":"            BA_.set_struct ~data_words:0 ~pointer_words:1 x 1 (Some v)","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let root_block_id_init x =","counters":[]},{"line":"            BA_.init_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"          let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":28,"col_end":28,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"          let init_root ?message_size () =","counters":[]},{"line":"            BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"          let init_pointer ptr =","counters":[]},{"line":"            BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        end","counters":[]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Validation = struct","counters":[]},{"line":"        type struct_t = [`Validation_89d8e42d7f3a4f67]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_validation_id x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let result_get x =","counters":[]},{"line":"          let discr = BA_.get_uint16 ~default:0 x 0 in","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          ValidationResult_12956713526515247866.decode discr","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let result_set x e =","counters":[]},{"line":"          BA_.set_uint16 ~default:0 x 0 (ValidationResult_12956713526515247866.encode_safe e)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":89,"col_end":89,"count":0}]},{"line":"        let result_set_unsafe x e =","counters":[]},{"line":"          BA_.set_uint16 ~default:0 x 0 (ValidationResult_12956713526515247866.encode_unsafe e)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":91,"col_end":91,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module DeleteResource = struct","counters":[]},{"line":"        type struct_t = [`DeleteResource_86badb3b545b9790]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_ids x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get x = ","counters":[]},{"line":"          BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get_list x =","counters":[]},{"line":"          Capnp.Array.to_list (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"        let ids_get_array x =","counters":[]},{"line":"          Capnp.Array.to_array (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"        let ids_set x v =","counters":[]},{"line":"          BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_init x n =","counters":[]},{"line":"          BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 0 n","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_set_list x v =","counters":[]},{"line":"          let builder = ids_init x (List.length v) in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          builder","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_set_array x v =","counters":[]},{"line":"          let builder = ids_init x (Array.length v) in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"          let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          builder","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module HeartbeatPeer = struct","counters":[]},{"line":"        type struct_t = [`HeartbeatPeer_a2ca930f070de840]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_id x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module DownloadResource = struct","counters":[]},{"line":"        type struct_t = [`DownloadResource_e2fe4f9a5e1a5358]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let tag_get x =","counters":[]},{"line":"          BA_.get_uint8 ~default:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let tag_set_exn x v =","counters":[]},{"line":"          BA_.set_uint8 ~default:0 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_ids x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get x = ","counters":[]},{"line":"          BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get_list x =","counters":[]},{"line":"          Capnp.Array.to_list (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"        let ids_get_array x =","counters":[]},{"line":"          Capnp.Array.to_array (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"        let ids_set x v =","counters":[]},{"line":"          BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_init x n =","counters":[]},{"line":"          BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 0 n","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_set_list x v =","counters":[]},{"line":"          let builder = ids_init x (List.length v) in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          builder","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_set_array x v =","counters":[]},{"line":"          let builder = ids_init x (Array.length v) in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"          let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          builder","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module AddResource = struct","counters":[]},{"line":"        type struct_t = [`AddResource_b28801bad1dacef0]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let tag_get x =","counters":[]},{"line":"          BA_.get_uint8 ~default:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let tag_set_exn x v =","counters":[]},{"line":"          BA_.set_uint8 ~default:0 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_data x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let data_get x =","counters":[]},{"line":"          BA_.get_blob ~default:\"\" x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let data_set x v =","counters":[]},{"line":"          BA_.set_blob x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module RpcRequest = struct","counters":[]},{"line":"        type struct_t = [`RpcRequest_e448fafba2ab92e3]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_configure x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_set_gating_config x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_listen x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_get_listening_addrs x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_begin_advertising x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_peer x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_list_peers x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_generate_keypair x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_publish x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=8; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=8; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=8; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_subscribe x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=9; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=9; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=9; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_unsubscribe x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=10; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=10; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=10; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_stream_handler x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=11; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=11; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=11; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_remove_stream_handler x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=12; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=12; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=12; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_open_stream x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=13; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=13; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=13; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_close_stream x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=14; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=14; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=14; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_reset_stream x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=15; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=15; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=15; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_send_stream x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=16; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=16; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=16; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_set_node_status x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=17; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=17; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=17; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_get_peer_node_status x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=18; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=18; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=18; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_bandwidth_info x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=19; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=19; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=19; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_test_decode_bitswap_blocks x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=20; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=20; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=20; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_test_encode_bitswap_blocks x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=21; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=21; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=21; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Configure of Configure.Request.t","counters":[]},{"line":"          | SetGatingConfig of SetGatingConfig.Request.t","counters":[]},{"line":"          | Listen of Listen.Request.t","counters":[]},{"line":"          | GetListeningAddrs of GetListeningAddrs.Request.t","counters":[]},{"line":"          | BeginAdvertising of BeginAdvertising.Request.t","counters":[]},{"line":"          | AddPeer of AddPeer.Request.t","counters":[]},{"line":"          | ListPeers of ListPeers.Request.t","counters":[]},{"line":"          | GenerateKeypair of GenerateKeypair.Request.t","counters":[]},{"line":"          | Publish of Publish.Request.t","counters":[]},{"line":"          | Subscribe of Subscribe.Request.t","counters":[]},{"line":"          | Unsubscribe of Unsubscribe.Request.t","counters":[]},{"line":"          | AddStreamHandler of AddStreamHandler.Request.t","counters":[]},{"line":"          | RemoveStreamHandler of RemoveStreamHandler.Request.t","counters":[]},{"line":"          | OpenStream of OpenStream.Request.t","counters":[]},{"line":"          | CloseStream of CloseStream.Request.t","counters":[]},{"line":"          | ResetStream of ResetStream.Request.t","counters":[]},{"line":"          | SendStream of SendStream.Request.t","counters":[]},{"line":"          | SetNodeStatus of SetNodeStatus.Request.t","counters":[]},{"line":"          | GetPeerNodeStatus of GetPeerNodeStatus.Request.t","counters":[]},{"line":"          | BandwidthInfo of BandwidthInfo.Request.t","counters":[]},{"line":"          | TestDecodeBitswapBlocks of TestDecodeBitswapBlocks.Request.t","counters":[]},{"line":"          | TestEncodeBitswapBlocks of TestEncodeBitswapBlocks.Request.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match BA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> Configure (configure_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"          | 1 -> SetGatingConfig (set_gating_config_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"          | 2 -> Listen (listen_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":34,"col_end":34,"count":0}]},{"line":"          | 3 -> GetListeningAddrs (get_listening_addrs_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"          | 4 -> BeginAdvertising (begin_advertising_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"          | 5 -> AddPeer (add_peer_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"          | 6 -> ListPeers (list_peers_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"          | 7 -> GenerateKeypair (generate_keypair_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"          | 8 -> Publish (publish_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":36,"col_end":36,"count":0}]},{"line":"          | 9 -> Subscribe (subscribe_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"          | 10 -> Unsubscribe (unsubscribe_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | 11 -> AddStreamHandler (add_stream_handler_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"          | 12 -> RemoveStreamHandler (remove_stream_handler_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":63,"col_end":63,"count":0}]},{"line":"          | 13 -> OpenStream (open_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"          | 14 -> CloseStream (close_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          | 15 -> ResetStream (reset_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          | 16 -> SendStream (send_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"          | 17 -> SetNodeStatus (set_node_status_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 18 -> GetPeerNodeStatus (get_peer_node_status_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"          | 19 -> BandwidthInfo (bandwidth_info_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"          | 20 -> TestDecodeBitswapBlocks (test_decode_bitswap_blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":72,"col_end":72,"count":0}]},{"line":"          | 21 -> TestEncodeBitswapBlocks (test_encode_bitswap_blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":72,"col_end":72,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let has_header x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:2 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:2 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module RpcResponseSuccess = struct","counters":[]},{"line":"        type struct_t = [`RpcResponseSuccess_aa166667db5b6b9d]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_configure x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let configure_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_set_gating_config x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_gating_config_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_listen x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let listen_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_get_listening_addrs x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_listening_addrs_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_begin_advertising x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let begin_advertising_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_peer x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_peer_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_list_peers x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let list_peers_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_generate_keypair x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let generate_keypair_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_publish x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=8; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=8; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let publish_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=8; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_subscribe x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=9; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=9; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscribe_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=9; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_unsubscribe x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=10; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=10; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let unsubscribe_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=10; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_stream_handler x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=11; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=11; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_stream_handler_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=11; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_remove_stream_handler x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=12; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=12; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let remove_stream_handler_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=12; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_open_stream x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=13; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=13; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let open_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=13; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_close_stream x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=14; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=14; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let close_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=14; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_reset_stream x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=15; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=15; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reset_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=15; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_send_stream x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=16; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=16; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let send_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=16; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_set_node_status x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=17; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=17; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let set_node_status_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:0 ~discr:{BA_.Discr.value=17; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_get_peer_node_status x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=18; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=18; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let get_peer_node_status_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=18; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_bandwidth_info x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:3 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:3 ~pointer_words:0 ~discr:{BA_.Discr.value=19; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:3 ~pointer_words:0 ~discr:{BA_.Discr.value=19; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let bandwidth_info_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:3 ~pointer_words:0 ~discr:{BA_.Discr.value=19; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_test_decode_bitswap_blocks x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=20; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=20; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_decode_bitswap_blocks_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=20; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_test_encode_bitswap_blocks x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=21; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=21; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let test_encode_bitswap_blocks_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=21; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Configure of Configure.Response.t","counters":[]},{"line":"          | SetGatingConfig of SetGatingConfig.Response.t","counters":[]},{"line":"          | Listen of Listen.Response.t","counters":[]},{"line":"          | GetListeningAddrs of GetListeningAddrs.Response.t","counters":[]},{"line":"          | BeginAdvertising of BeginAdvertising.Response.t","counters":[]},{"line":"          | AddPeer of AddPeer.Response.t","counters":[]},{"line":"          | ListPeers of ListPeers.Response.t","counters":[]},{"line":"          | GenerateKeypair of GenerateKeypair.Response.t","counters":[]},{"line":"          | Publish of Publish.Response.t","counters":[]},{"line":"          | Subscribe of Subscribe.Response.t","counters":[]},{"line":"          | Unsubscribe of Unsubscribe.Response.t","counters":[]},{"line":"          | AddStreamHandler of AddStreamHandler.Response.t","counters":[]},{"line":"          | RemoveStreamHandler of RemoveStreamHandler.Response.t","counters":[]},{"line":"          | OpenStream of OpenStream.Response.t","counters":[]},{"line":"          | CloseStream of CloseStream.Response.t","counters":[]},{"line":"          | ResetStream of ResetStream.Response.t","counters":[]},{"line":"          | SendStream of SendStream.Response.t","counters":[]},{"line":"          | SetNodeStatus of SetNodeStatus.Response.t","counters":[]},{"line":"          | GetPeerNodeStatus of GetPeerNodeStatus.Response.t","counters":[]},{"line":"          | BandwidthInfo of BandwidthInfo.Response.t","counters":[]},{"line":"          | TestDecodeBitswapBlocks of TestDecodeBitswapBlocks.Response.t","counters":[]},{"line":"          | TestEncodeBitswapBlocks of TestEncodeBitswapBlocks.Response.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match BA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> Configure (configure_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"          | 1 -> SetGatingConfig (set_gating_config_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":54,"col_end":54,"count":0}]},{"line":"          | 2 -> Listen (listen_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":34,"col_end":34,"count":0}]},{"line":"          | 3 -> GetListeningAddrs (get_listening_addrs_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":58,"col_end":58,"count":0}]},{"line":"          | 4 -> BeginAdvertising (begin_advertising_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"          | 5 -> AddPeer (add_peer_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"          | 6 -> ListPeers (list_peers_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"          | 7 -> GenerateKeypair (generate_keypair_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"          | 8 -> Publish (publish_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":36,"col_end":36,"count":0}]},{"line":"          | 9 -> Subscribe (subscribe_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":40,"col_end":40,"count":0}]},{"line":"          | 10 -> Unsubscribe (unsubscribe_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | 11 -> AddStreamHandler (add_stream_handler_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"          | 12 -> RemoveStreamHandler (remove_stream_handler_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":63,"col_end":63,"count":0}]},{"line":"          | 13 -> OpenStream (open_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"          | 14 -> CloseStream (close_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          | 15 -> ResetStream (reset_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          | 16 -> SendStream (send_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":44,"col_end":44,"count":0}]},{"line":"          | 17 -> SetNodeStatus (set_node_status_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 18 -> GetPeerNodeStatus (get_peer_node_status_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":60,"col_end":60,"count":0}]},{"line":"          | 19 -> BandwidthInfo (bandwidth_info_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"          | 20 -> TestDecodeBitswapBlocks (test_decode_bitswap_blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":72,"col_end":72,"count":0}]},{"line":"          | 21 -> TestEncodeBitswapBlocks (test_encode_bitswap_blocks_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":72,"col_end":72,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module RpcResponse = struct","counters":[]},{"line":"        type struct_t = [`RpcResponse_824dae3760b93d5d]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_error x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let error_get x =","counters":[]},{"line":"          BA_.get_text ~default:\"\" x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let error_set x v =","counters":[]},{"line":"          BA_.set_text ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_success x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let success_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let success_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let success_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let success_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Error of string","counters":[]},{"line":"          | Success of RpcResponseSuccess.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match BA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> Error (error_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":32,"col_end":32,"count":0}]},{"line":"          | 1 -> Success (success_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":36,"col_end":36,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let has_header x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:2 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:2 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module PushMessage = struct","counters":[]},{"line":"        type struct_t = [`PushMessage_bcc32e2f197831bb]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_validation x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_add_resource x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_resource_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_resource_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_resource_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let add_resource_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_delete_resource x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let delete_resource_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let delete_resource_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let delete_resource_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let delete_resource_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_download_resource x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let download_resource_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let download_resource_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let download_resource_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let download_resource_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_heartbeat_peer x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let heartbeat_peer_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let heartbeat_peer_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let heartbeat_peer_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let heartbeat_peer_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | Validation of Validation.t","counters":[]},{"line":"          | AddResource of AddResource.t","counters":[]},{"line":"          | DeleteResource of DeleteResource.t","counters":[]},{"line":"          | DownloadResource of DownloadResource.t","counters":[]},{"line":"          | HeartbeatPeer of HeartbeatPeer.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match BA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> Validation (validation_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          | 1 -> AddResource (add_resource_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | 2 -> DeleteResource (delete_resource_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 3 -> DownloadResource (download_resource_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"          | 4 -> HeartbeatPeer (heartbeat_peer_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":49,"col_end":49,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let has_header x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:2 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:2 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Message = struct","counters":[]},{"line":"        type struct_t = [`Message_dd721cc91936b5d8]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_rpc_request x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_request_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_request_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_request_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_request_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_push_message x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | RpcRequest of RpcRequest.t","counters":[]},{"line":"          | PushMessage of PushMessage.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match BA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> RpcRequest (rpc_request_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          | 1 -> PushMessage (push_message_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"    module DaemonInterface = struct","counters":[]},{"line":"      type struct_t = [`DaemonInterface_aa8c38390c8a53b0]","counters":[]},{"line":"      type t = struct_t builder_t","counters":[]},{"line":"      module PeerConnected = struct","counters":[]},{"line":"        type struct_t = [`PeerConnected_82b1f9dcfa3ef5b8]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_peer_id x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module PeerDisconnected = struct","counters":[]},{"line":"        type struct_t = [`PeerDisconnected_fb7ab58e17fecacc]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_peer_id x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module GossipReceived = struct","counters":[]},{"line":"        type struct_t = [`GossipReceived_8128c52d5468fe3b]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_sender x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let sender_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let sender_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let sender_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let sender_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_seen_at x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let seen_at_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:0 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let seen_at_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let seen_at_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let seen_at_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:0 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_expiration x =","counters":[]},{"line":"          BA_.has_field x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let expiration_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:0 x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let expiration_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 2 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let expiration_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 2 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let expiration_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:0 x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_subscription_id x =","counters":[]},{"line":"          BA_.has_field x 3","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscription_id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:0 x 3","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscription_id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 3 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscription_id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 3 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let subscription_id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:0 x 3","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_validation_id x =","counters":[]},{"line":"          BA_.has_field x 4","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:0 x 4","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 4 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 4 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let validation_id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:0 x 4","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_data x =","counters":[]},{"line":"          BA_.has_field x 5","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let data_get x =","counters":[]},{"line":"          BA_.get_blob ~default:\"\" x 5","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let data_set x v =","counters":[]},{"line":"          BA_.set_blob x 5 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:6 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:6 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:6","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module IncomingStream = struct","counters":[]},{"line":"        type struct_t = [`IncomingStream_c5ea3ac9fb462264]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_stream_id x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_peer x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:2 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:2 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_protocol x =","counters":[]},{"line":"          BA_.has_field x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let protocol_get x =","counters":[]},{"line":"          BA_.get_text ~default:\"\" x 2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let protocol_set x v =","counters":[]},{"line":"          BA_.set_text x 2 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:3 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:3 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:3","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module StreamLost = struct","counters":[]},{"line":"        type struct_t = [`StreamLost_a2eea71b4749c940]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_stream_id x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_reason x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reason_get x =","counters":[]},{"line":"          BA_.get_text ~default:\"\" x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let reason_set x v =","counters":[]},{"line":"          BA_.set_text x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:2 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:2 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module StreamComplete = struct","counters":[]},{"line":"        type struct_t = [`StreamComplete_bec4cf678af6fe9d]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_stream_id x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:0 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_id_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:0 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module StreamMessageReceived = struct","counters":[]},{"line":"        type struct_t = [`StreamMessageReceived_fe6afa3ac9731c83]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_msg x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let msg_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let msg_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let msg_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let msg_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module ResourceUpdate = struct","counters":[]},{"line":"        type struct_t = [`ResourceUpdate_edec79530db7ca8e]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let type_get x =","counters":[]},{"line":"          let discr = BA_.get_uint16 ~default:0 x 0 in","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          ResourceUpdateType_12722323391428546450.decode discr","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let type_set x e =","counters":[]},{"line":"          BA_.set_uint16 ~default:0 x 0 (ResourceUpdateType_12722323391428546450.encode_safe e)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":91,"col_end":91,"count":0}]},{"line":"        let type_set_unsafe x e =","counters":[]},{"line":"          BA_.set_uint16 ~default:0 x 0 (ResourceUpdateType_12722323391428546450.encode_unsafe e)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":93,"col_end":93,"count":0}]},{"line":"        let has_ids x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get x = ","counters":[]},{"line":"          BA_.get_struct_list ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_get_list x =","counters":[]},{"line":"          Capnp.Array.to_list (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"        let ids_get_array x =","counters":[]},{"line":"          Capnp.Array.to_array (ids_get x)","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"        let ids_set x v =","counters":[]},{"line":"          BA_.set_struct_list ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_init x n =","counters":[]},{"line":"          BA_.init_struct_list ~data_words:0 ~pointer_words:1 x 0 n","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_set_list x v =","counters":[]},{"line":"          let builder = ids_init x (List.length v) in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"          let () = List.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"          builder","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let ids_set_array x v =","counters":[]},{"line":"          let builder = ids_init x (Array.length v) in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"          let () = Array.iteri (fun i a -> Capnp.Array.set builder i a) v in","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          builder","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module PushMessage = struct","counters":[]},{"line":"        type struct_t = [`PushMessage_8ec8fa620071fa9f]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_peer_connected x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_connected_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_connected_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_connected_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_connected_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_peer_disconnected x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_disconnected_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_disconnected_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_disconnected_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let peer_disconnected_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_gossip_received x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let gossip_received_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:6 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let gossip_received_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:6 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let gossip_received_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:6 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let gossip_received_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:6 ~discr:{BA_.Discr.value=2; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_incoming_stream x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let incoming_stream_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:3 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let incoming_stream_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:3 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let incoming_stream_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:3 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let incoming_stream_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:3 ~discr:{BA_.Discr.value=3; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_stream_lost x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_lost_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:2 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_lost_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_lost_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_lost_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:2 ~discr:{BA_.Discr.value=4; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_stream_complete x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_complete_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_complete_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_complete_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_complete_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=5; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_stream_message_received x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_message_received_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_message_received_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_message_received_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let stream_message_received_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 ~discr:{BA_.Discr.value=6; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_resource_updated x =","counters":[]},{"line":"          BA_.has_field x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let resource_updated_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:1 x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let resource_updated_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 1 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let resource_updated_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 1 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let resource_updated_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:1 ~discr:{BA_.Discr.value=7; BA_.Discr.byte_ofs=0} x 1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | PeerConnected of PeerConnected.t","counters":[]},{"line":"          | PeerDisconnected of PeerDisconnected.t","counters":[]},{"line":"          | GossipReceived of GossipReceived.t","counters":[]},{"line":"          | IncomingStream of IncomingStream.t","counters":[]},{"line":"          | StreamLost of StreamLost.t","counters":[]},{"line":"          | StreamComplete of StreamComplete.t","counters":[]},{"line":"          | StreamMessageReceived of StreamMessageReceived.t","counters":[]},{"line":"          | ResourceUpdated of ResourceUpdate.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match BA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> PeerConnected (peer_connected_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":49,"col_end":49,"count":0}]},{"line":"          | 1 -> PeerDisconnected (peer_disconnected_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"          | 2 -> GossipReceived (gossip_received_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 3 -> IncomingStream (incoming_stream_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 4 -> StreamLost (stream_lost_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":43,"col_end":43,"count":0}]},{"line":"          | 5 -> StreamComplete (stream_complete_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":51,"col_end":51,"count":0}]},{"line":"          | 6 -> StreamMessageReceived (stream_message_received_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":66,"col_end":66,"count":0}]},{"line":"          | 7 -> ResourceUpdated (resource_updated_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let has_header x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:0 ~pointer_words:1 x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let header_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:0 ~pointer_words:1 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:2 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:2 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:2","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      module Message = struct","counters":[]},{"line":"        type struct_t = [`Message_d78f8b719109324e]","counters":[]},{"line":"        type t = struct_t builder_t","counters":[]},{"line":"        let has_rpc_response x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_response_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_response_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_response_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let rpc_response_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=0; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let has_push_message x =","counters":[]},{"line":"          BA_.has_field x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_get x =","counters":[]},{"line":"          BA_.get_struct ~data_words:1 ~pointer_words:2 x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_set_reader x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0 v","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_set_builder x v =","counters":[]},{"line":"          BA_.set_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0 (Some v)","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let push_message_init x =","counters":[]},{"line":"          BA_.init_struct ~data_words:1 ~pointer_words:2 ~discr:{BA_.Discr.value=1; BA_.Discr.byte_ofs=0} x 0","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        type unnamed_union_t =","counters":[]},{"line":"          | RpcResponse of Libp2pHelperInterface.RpcResponse.t","counters":[]},{"line":"          | PushMessage of PushMessage.t","counters":[]},{"line":"          | Undefined of int","counters":[]},{"line":"        let get x =","counters":[]},{"line":"          match BA_.get_uint16 ~default:0 x 0 with","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"          | 0 -> RpcResponse (rpc_response_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | 1 -> PushMessage (push_message_get x)","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":45,"col_end":45,"count":0}]},{"line":"          | v -> Undefined v","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        let of_message x = BA_.get_root_struct ~data_words:1 ~pointer_words:1 x","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"        let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":57,"col_end":57,"count":0}]},{"line":"        let init_root ?message_size () =","counters":[]},{"line":"          BA_.alloc_root_struct ?message_size ~data_words:1 ~pointer_words:1 ()","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"        let init_pointer ptr =","counters":[]},{"line":"          BA_.init_struct_pointer ptr ~data_words:1 ~pointer_words:1","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      end","counters":[]},{"line":"      let of_message x = BA_.get_root_struct ~data_words:0 ~pointer_words:0 x","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_message x = x.BA_.NM.StructStorage.data.MessageWrapper.Slice.msg","counters":[{"col_start":25,"col_end":25,"count":0}]},{"line":"      let to_reader x = Some (RA_.StructStorage.readonly x)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"      let init_root ?message_size () =","counters":[]},{"line":"        BA_.alloc_root_struct ?message_size ~data_words:0 ~pointer_words:0 ()","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"      let init_pointer ptr =","counters":[]},{"line":"        BA_.init_struct_pointer ptr ~data_words:0 ~pointer_words:0","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Client = struct","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Service = struct","counters":[]},{"line":"  end","counters":[]},{"line":"  module MessageWrapper = MessageWrapper","counters":[]},{"line":"end [@@inline]","counters":[]},{"line":"","counters":[]},{"line":"module Make(M:Capnp.MessageSig.S) = MakeRPC[@inlined](Capnp.RPC.None(M)) [@@inline]","counters":[{"col_start":82,"col_end":82,"count":2}]}]}