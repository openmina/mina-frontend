{"filename":"src/lib/transaction/transaction.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Mina_base","counters":[]},{"line":"","counters":[]},{"line":"module Poly = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V2 = struct","counters":[]},{"line":"      type 'command t = 'command Mina_wire_types.Mina_transaction.Poly.V2.t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":20,"col_end":20,"count":4}]},{"line":"        | Command of 'command","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":28,"col_end":28,"count":0}]},{"line":"        | Fee_transfer of Fee_transfer.Stable.V2.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":26,"col_end":26,"count":0},{"col_start":49,"col_end":49,"count":0}]},{"line":"        | Coinbase of Coinbase.Stable.V1.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":41,"col_end":41,"count":0}]},{"line":"      [@@deriving sexp, compare, equal, hash, yojson]","counters":[{"col_start":52,"col_end":52,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"","counters":[]},{"line":"      let map t ~f =","counters":[]},{"line":"        match t with","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"        | Command x ->","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"            Command (f x)","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"        | Fee_transfer x ->","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"            Fee_transfer x","counters":[]},{"line":"        | Coinbase x ->","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"            Coinbase x","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Valid = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V2 = struct","counters":[]},{"line":"      type t = User_command.Valid.Stable.V2.t Poly.Stable.V2.t","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":1},{"col_start":15,"col_end":15,"count":0},{"col_start":46,"col_end":46,"count":0}]},{"line":"      [@@deriving sexp, compare, equal, hash, yojson]","counters":[{"col_start":52,"col_end":52,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"","counters":[]},{"line":"  include Hashable.Make (Stable.Latest)","counters":[]},{"line":"  include Comparable.Make (Stable.Latest)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  module V2 = struct","counters":[]},{"line":"    type t = User_command.Stable.V2.t Poly.Stable.V2.t","counters":[{"col_start":4,"col_end":4,"count":2},{"col_start":9,"col_end":9,"count":1},{"col_start":13,"col_end":13,"count":0},{"col_start":38,"col_end":38,"count":0}]},{"line":"    [@@deriving sexp, compare, equal, hash, yojson]","counters":[{"col_start":50,"col_end":50,"count":5}]},{"line":"","counters":[]},{"line":"    let to_latest = Fn.id","counters":[]},{"line":"  end","counters":[]},{"line":"end]","counters":[]},{"line":"","counters":[]},{"line":"include Hashable.Make (Stable.Latest)","counters":[]},{"line":"include Comparable.Make (Stable.Latest)","counters":[]},{"line":"","counters":[]},{"line":"type 'command t_ = 'command Poly.t =","counters":[]},{"line":"  | Command of 'command","counters":[]},{"line":"  | Fee_transfer of Fee_transfer.t","counters":[]},{"line":"  | Coinbase of Coinbase.t","counters":[]},{"line":"","counters":[]},{"line":"let forget : Valid.t -> t = function","counters":[]},{"line":"  | Command t ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Command (User_command.forget_check t)","counters":[{"col_start":39,"col_end":39,"count":0}]},{"line":"  | Fee_transfer t ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Fee_transfer t","counters":[]},{"line":"  | Coinbase t ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Coinbase t","counters":[]},{"line":"","counters":[]},{"line":"let fee_excess : t -> Fee_excess.t Or_error.t = function","counters":[]},{"line":"  | Command (Signed_command t) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Ok (Signed_command.fee_excess t)","counters":[{"col_start":34,"col_end":34,"count":0}]},{"line":"  | Command (Zkapp_command ps) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Ok (Zkapp_command.fee_excess ps)","counters":[{"col_start":33,"col_end":33,"count":0}]},{"line":"  | Fee_transfer t ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Fee_transfer.fee_excess t","counters":[]},{"line":"  | Coinbase t ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Coinbase.fee_excess t","counters":[]},{"line":"","counters":[]},{"line":"let expected_supply_increase = function","counters":[]},{"line":"  | Command _ | Fee_transfer _ ->","counters":[{"col_start":4,"col_end":4,"count":0},{"col_start":16,"col_end":16,"count":0}]},{"line":"      Ok Currency.Amount.zero","counters":[]},{"line":"  | Coinbase t ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Coinbase.expected_supply_increase t","counters":[]},{"line":"","counters":[]},{"line":"let public_keys : t -> _ = function","counters":[]},{"line":"  | Command (Signed_command cmd) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      [ Signed_command.fee_payer_pk cmd","counters":[{"col_start":34,"col_end":34,"count":0}]},{"line":"      ; Signed_command.source_pk cmd","counters":[{"col_start":31,"col_end":31,"count":0}]},{"line":"      ; Signed_command.receiver_pk cmd","counters":[{"col_start":33,"col_end":33,"count":0}]},{"line":"      ]","counters":[]},{"line":"  | Command (Zkapp_command t) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Zkapp_command.accounts_referenced t |> List.map ~f:Account_id.public_key","counters":[{"col_start":45,"col_end":45,"count":0}]},{"line":"  | Fee_transfer ft ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Fee_transfer.receiver_pks ft","counters":[]},{"line":"  | Coinbase cb ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Coinbase.accounts_accessed cb |> List.map ~f:Account_id.public_key","counters":[{"col_start":39,"col_end":39,"count":0}]},{"line":"","counters":[]},{"line":"let accounts_accessed (t : t) (status : Transaction_status.t) =","counters":[]},{"line":"  match t with","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  | Command (Signed_command cmd) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Signed_command.accounts_accessed cmd status","counters":[]},{"line":"  | Command (Zkapp_command t) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Zkapp_command.accounts_accessed t status","counters":[]},{"line":"  | Fee_transfer ft ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      assert (Transaction_status.equal Applied status) ;","counters":[{"col_start":13,"col_end":13,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"      Fee_transfer.receivers ft","counters":[]},{"line":"  | Coinbase cb ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Coinbase.accounts_accessed cb","counters":[]},{"line":"","counters":[]},{"line":"let accounts_referenced (t : t) = accounts_accessed t Applied","counters":[{"col_start":34,"col_end":34,"count":0}]},{"line":"","counters":[]},{"line":"let fee_payer_pk (t : t) =","counters":[]},{"line":"  match t with","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  | Command (Signed_command cmd) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Signed_command.fee_payer_pk cmd","counters":[]},{"line":"  | Command (Zkapp_command t) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Zkapp_command.fee_payer_pk t","counters":[]},{"line":"  | Fee_transfer ft ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Fee_transfer.fee_payer_pk ft","counters":[]},{"line":"  | Coinbase cb ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Coinbase.fee_payer_pk cb","counters":[]},{"line":"","counters":[]},{"line":"let valid_size ~genesis_constants (t : t) =","counters":[]},{"line":"  match t with","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  | Command cmd ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      User_command.valid_size ~genesis_constants cmd","counters":[]},{"line":"  | Fee_transfer _ | Coinbase _ ->","counters":[{"col_start":4,"col_end":4,"count":0},{"col_start":21,"col_end":21,"count":0}]},{"line":"      Ok ()","counters":[{"col_start":10,"col_end":10,"count":1}]}]}