{"filename":"src/lib/mina_base/sok_message_intf.ml","lines":[{"line":"module type Full = sig","counters":[]},{"line":"  open Core_kernel","counters":[]},{"line":"  open Snark_params","counters":[]},{"line":"  open Tick","counters":[]},{"line":"  open Mina_base_import","counters":[]},{"line":"","counters":[]},{"line":"  [@@@warning \"-32\"]","counters":[]},{"line":"","counters":[]},{"line":"  [%%versioned:","counters":[]},{"line":"  module Stable : sig","counters":[]},{"line":"    module V1 : sig","counters":[]},{"line":"      type t =","counters":[]},{"line":"        { fee : Currency.Fee.Stable.V1.t","counters":[]},{"line":"        ; prover : Public_key.Compressed.Stable.V1.t","counters":[]},{"line":"        }","counters":[]},{"line":"      [@@deriving sexp, yojson, equal, compare]","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"","counters":[]},{"line":"  [@@@warning \"+32\"]","counters":[]},{"line":"","counters":[]},{"line":"  type t = Stable.Latest.t =","counters":[]},{"line":"    { fee : Currency.Fee.Stable.V1.t","counters":[]},{"line":"    ; prover : Public_key.Compressed.Stable.V1.t","counters":[]},{"line":"    }","counters":[]},{"line":"  [@@deriving sexp, yojson, equal, compare]","counters":[]},{"line":"","counters":[]},{"line":"  val create : fee:Currency.Fee.t -> prover:Public_key.Compressed.t -> t","counters":[]},{"line":"","counters":[]},{"line":"  module Digest : sig","counters":[]},{"line":"    type t [@@deriving sexp, equal, yojson, hash, compare]","counters":[]},{"line":"","counters":[]},{"line":"    module Stable : sig","counters":[]},{"line":"      module V1 : sig","counters":[]},{"line":"        type nonrec t = t","counters":[]},{"line":"        [@@deriving sexp, bin_io, hash, compare, equal, yojson, version]","counters":[]},{"line":"      end","counters":[]},{"line":"","counters":[]},{"line":"      module Latest = V1","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    module Checked : sig","counters":[]},{"line":"      type t","counters":[]},{"line":"","counters":[]},{"line":"      val to_input : t -> Field.Var.t Random_oracle.Input.Chunked.t","counters":[]},{"line":"    end","counters":[]},{"line":"","counters":[]},{"line":"    val to_input : t -> Field.t Random_oracle.Input.Chunked.t","counters":[]},{"line":"","counters":[]},{"line":"    val typ : (Checked.t, t) Typ.t","counters":[]},{"line":"","counters":[]},{"line":"    val default : t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  val digest : t -> Digest.t","counters":[]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":1}]}]}