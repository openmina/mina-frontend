{"filename":"src/lib/mina_net2/validation_callback.ml","lines":[{"line":"open Core","counters":[]},{"line":"open Async","counters":[]},{"line":"module Timeout = Timeout_lib.Core_time_ns","counters":[]},{"line":"","counters":[]},{"line":"type validation_result = [ `Accept | `Reject | `Ignore ] [@@deriving equal]","counters":[{"col_start":0,"col_end":0,"count":0}]},{"line":"","counters":[]},{"line":"type t =","counters":[]},{"line":"  { expiration : Time_ns.t option","counters":[]},{"line":"  ; created_at : Time_ns.t","counters":[]},{"line":"  ; signal : validation_result Ivar.t","counters":[]},{"line":"  ; mutable message_type : [ `Unknown | `Block | `Snark_work | `Transaction ]","counters":[]},{"line":"  }","counters":[]},{"line":"","counters":[]},{"line":"let create expiration =","counters":[]},{"line":"  { expiration = Some expiration","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  ; created_at = Time_ns.now ()","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"  ; signal = Ivar.create ()","counters":[{"col_start":23,"col_end":23,"count":0}]},{"line":"  ; message_type = `Unknown","counters":[]},{"line":"  }","counters":[]},{"line":"","counters":[]},{"line":"let create_without_expiration () =","counters":[]},{"line":"  { expiration = None","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  ; created_at = Time_ns.now ()","counters":[{"col_start":27,"col_end":27,"count":0}]},{"line":"  ; signal = Ivar.create ()","counters":[{"col_start":23,"col_end":23,"count":0}]},{"line":"  ; message_type = `Unknown","counters":[]},{"line":"  }","counters":[]},{"line":"","counters":[]},{"line":"let is_expired cb =","counters":[]},{"line":"  match cb.expiration with","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  | None ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      false","counters":[]},{"line":"  | Some expires_at ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Time_ns.(now () >= expires_at)","counters":[{"col_start":17,"col_end":17,"count":0}]},{"line":"","counters":[]},{"line":"module type Metric_intf = sig","counters":[]},{"line":"  val validations_timed_out : Mina_metrics.Counter.t","counters":[]},{"line":"","counters":[]},{"line":"  val rejected : Mina_metrics.Counter.t","counters":[]},{"line":"","counters":[]},{"line":"  val ignored : Mina_metrics.Counter.t","counters":[]},{"line":"","counters":[]},{"line":"  module Validation_time : sig","counters":[]},{"line":"    val update : Time.Span.t -> unit","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Processing_time : sig","counters":[]},{"line":"    val update : Time.Span.t -> unit","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Rejection_time : sig","counters":[]},{"line":"    val update : Time.Span.t -> unit","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"let metrics_of_message_type m : (module Metric_intf) option =","counters":[]},{"line":"  match m with","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  | `Unknown ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      None","counters":[]},{"line":"  | `Block ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Some (module Mina_metrics.Network.Block)","counters":[]},{"line":"  | `Snark_work ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Some (module Mina_metrics.Network.Snark_work)","counters":[]},{"line":"  | `Transaction ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Some (module Mina_metrics.Network.Transaction)","counters":[]},{"line":"","counters":[]},{"line":"let record_timeout_metrics cb =","counters":[]},{"line":"  Mina_metrics.(Counter.inc_one Network.validations_timed_out) ;","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":30,"col_end":30,"count":0}]},{"line":"  match metrics_of_message_type cb.message_type with","counters":[]},{"line":"  | None ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      ()","counters":[]},{"line":"  | Some (module M) ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      Mina_metrics.Counter.inc_one M.validations_timed_out","counters":[]},{"line":"","counters":[]},{"line":"let record_validation_metrics message_type (result : validation_result)","counters":[]},{"line":"    validation_time processing_time =","counters":[]},{"line":"  match metrics_of_message_type message_type with","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"  | None ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      ()","counters":[]},{"line":"  | Some (module M) -> (","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      match result with","counters":[]},{"line":"      | `Ignore ->","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"          Mina_metrics.Counter.inc_one M.ignored","counters":[]},{"line":"      | `Accept ->","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"          M.Validation_time.update validation_time ;","counters":[]},{"line":"          M.Processing_time.update processing_time","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"      | `Reject ->","counters":[{"col_start":8,"col_end":8,"count":0}]},{"line":"          Mina_metrics.Counter.inc_one M.rejected ;","counters":[]},{"line":"          M.Rejection_time.update processing_time )","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"","counters":[]},{"line":"let await_timeout cb =","counters":[]},{"line":"  if is_expired cb then Deferred.return ()","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":24,"col_end":24,"count":0}]},{"line":"  else","counters":[]},{"line":"    match cb.expiration with","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    | None ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        Deferred.never ()","counters":[]},{"line":"    | Some expires_at ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        after","counters":[]},{"line":"          ( Time_ns.Span.to_span_float_round_nearest","counters":[{"col_start":51,"col_end":51,"count":0}]},{"line":"          @@ Time_ns.diff expires_at (Time_ns.now ()) )","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":48,"col_end":48,"count":0}]},{"line":"","counters":[]},{"line":"let await cb =","counters":[]},{"line":"  if is_expired cb then (record_timeout_metrics cb ; Deferred.return None)","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"  else","counters":[]},{"line":"    match cb.expiration with","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"    | None ->","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        Ivar.read cb.signal >>| Option.some","counters":[{"col_start":16,"col_end":16,"count":0}]},{"line":"    | Some expires_at -> (","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"        match%map","counters":[]},{"line":"          Timeout.await ()","counters":[{"col_start":22,"col_end":22,"count":0}]},{"line":"            ~timeout_duration:(Time_ns.diff expires_at (Time_ns.now ()))","counters":[{"col_start":42,"col_end":42,"count":0},{"col_start":66,"col_end":66,"count":0}]},{"line":"            (Ivar.read cb.signal)","counters":[{"col_start":21,"col_end":21,"count":0}]},{"line":"        with","counters":[]},{"line":"        | `Ok result ->","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"            let validation_time =","counters":[]},{"line":"              Time_ns.abs_diff expires_at (Time_ns.now ())","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"              |> Time_ns.Span.to_ms |> Time.Span.of_ms","counters":[{"col_start":34,"col_end":34,"count":0}]},{"line":"            in","counters":[]},{"line":"            let processing_time =","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"              Time_ns.abs_diff (Time_ns.now ()) cb.created_at","counters":[{"col_start":29,"col_end":29,"count":0},{"col_start":42,"col_end":42,"count":0}]},{"line":"              |> Time_ns.Span.to_ms |> Time.Span.of_ms","counters":[{"col_start":34,"col_end":34,"count":0}]},{"line":"            in","counters":[]},{"line":"            record_validation_metrics cb.message_type result validation_time","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"              processing_time ;","counters":[]},{"line":"            Some result","counters":[{"col_start":12,"col_end":12,"count":0}]},{"line":"        | `Timeout ->","counters":[{"col_start":10,"col_end":10,"count":0}]},{"line":"            record_timeout_metrics cb ; None )","counters":[{"col_start":40,"col_end":40,"count":0}]},{"line":"","counters":[]},{"line":"let await_exn cb =","counters":[]},{"line":"  match%map await cb with None -> failwith \"timeout\" | Some result -> result","counters":[{"col_start":16,"col_end":16,"count":0},{"col_start":26,"col_end":26,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"","counters":[]},{"line":"let fire_if_not_already_fired cb result =","counters":[]},{"line":"  if not (is_expired cb) then (","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":30,"col_end":30,"count":0}]},{"line":"    if Ivar.is_full cb.signal then","counters":[]},{"line":"      [%log' error (Logger.create ())] \"Ivar.fill bug is here HHH!\" ;","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":32,"col_end":32,"count":0},{"col_start":37,"col_end":37,"count":0}]},{"line":"    Ivar.fill cb.signal result )","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"","counters":[]},{"line":"let set_message_type t x = t.message_type <- x","counters":[{"col_start":27,"col_end":27,"count":0},{"col_start":45,"col_end":45,"count":2}]}]}