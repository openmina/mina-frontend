{"filename":"src/lib/ledger_proof/ledger_proof.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Mina_base","counters":[]},{"line":"","counters":[]},{"line":"module type S = Ledger_proof_intf.S","counters":[]},{"line":"","counters":[]},{"line":"module Prod : Ledger_proof_intf.S with type t = Transaction_snark.t = struct","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V2 = struct","counters":[]},{"line":"      type t = Transaction_snark.Stable.V2.t","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":1},{"col_start":15,"col_end":15,"count":0}]},{"line":"      [@@deriving compare, equal, sexp, yojson, hash]","counters":[{"col_start":52,"col_end":52,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"","counters":[]},{"line":"  let statement (t : t) = Transaction_snark.statement t","counters":[{"col_start":26,"col_end":26,"count":0}]},{"line":"","counters":[]},{"line":"  let sok_digest = Transaction_snark.sok_digest","counters":[]},{"line":"","counters":[]},{"line":"  let statement_target (t : Transaction_snark.Statement.t) = t.target","counters":[{"col_start":61,"col_end":61,"count":0}]},{"line":"","counters":[]},{"line":"  let underlying_proof = Transaction_snark.proof","counters":[]},{"line":"","counters":[]},{"line":"  let create ~statement ~sok_digest ~proof =","counters":[]},{"line":"    Transaction_snark.create ~statement:{ statement with sok_digest } ~proof","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"include Prod","counters":[]},{"line":"","counters":[]},{"line":"module For_tests = struct","counters":[]},{"line":"  let mk_dummy_proof statement =","counters":[]},{"line":"    create ~statement ~sok_digest:Sok_message.Digest.default","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      ~proof:Proof.transaction_dummy","counters":[]},{"line":"end","counters":[]}]}