{"filename":"src/lib/pickles_types/at_most.ml","lines":[{"line":"type ('a, _) t =","counters":[]},{"line":"  | [] : ('a, 'n) t","counters":[]},{"line":"  | ( :: ) : 'a * ('a, 'n) t -> ('a, 'n Nat.s) t","counters":[]},{"line":"","counters":[]},{"line":"let rec to_list : type a n. (a, n) t -> a list = function","counters":[]},{"line":"  | [] ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      []","counters":[]},{"line":"  | x :: xs ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      x :: to_list xs","counters":[{"col_start":17,"col_end":17,"count":0}]},{"line":"","counters":[]},{"line":"let rec _length : type a n. (a, n) t -> int = function","counters":[]},{"line":"  | [] ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      0","counters":[]},{"line":"  | _ :: xs ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      1 + _length xs","counters":[{"col_start":16,"col_end":16,"count":0}]},{"line":"","counters":[]},{"line":"let rec to_vector : type a n. (a, n) t -> a Vector.e = function","counters":[]},{"line":"  | [] ->","counters":[{"col_start":4,"col_end":4,"count":4}]},{"line":"      T []","counters":[]},{"line":"  | x :: xs ->","counters":[{"col_start":4,"col_end":4,"count":4}]},{"line":"      let (T xs) = to_vector xs in","counters":[]},{"line":"      T (x :: xs)","counters":[{"col_start":6,"col_end":6,"count":4}]},{"line":"","counters":[]},{"line":"let rec of_vector : type a n m. (a, n) Vector.t -> (n, m) Nat.Lte.t -> (a, m) t","counters":[]},{"line":"    =","counters":[]},{"line":" fun v p ->","counters":[]},{"line":"  match (v, p) with [], _ -> [] | x :: xs, S p -> x :: of_vector xs p","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":20,"col_end":20,"count":0},{"col_start":34,"col_end":34,"count":0},{"col_start":63,"col_end":63,"count":0}]},{"line":"","counters":[]},{"line":"let rec of_list_and_length_exn : type a n. a list -> n Nat.t -> (a, n) t =","counters":[]},{"line":" fun xs n ->","counters":[]},{"line":"  match (xs, n) with","counters":[{"col_start":2,"col_end":2,"count":8}]},{"line":"  | [], _ ->","counters":[{"col_start":4,"col_end":4,"count":4}]},{"line":"      []","counters":[]},{"line":"  | x :: xs, S n ->","counters":[{"col_start":4,"col_end":4,"count":4}]},{"line":"      x :: of_list_and_length_exn xs n","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"  | _ :: _, Z ->","counters":[{"col_start":4,"col_end":4,"count":0}]},{"line":"      failwith \"At_most: Length mismatch\"","counters":[]},{"line":"","counters":[]},{"line":"module type S = sig","counters":[]},{"line":"  type 'a t","counters":[]},{"line":"","counters":[]},{"line":"  include Sigs.Hash_foldable.S1 with type 'a t := 'a t","counters":[]},{"line":"","counters":[]},{"line":"  include Sigs.Comparable.S1 with type 'a t := 'a t","counters":[]},{"line":"","counters":[]},{"line":"  include Sigs.Jsonable.S1 with type 'a t := 'a t","counters":[]},{"line":"","counters":[]},{"line":"  include Sigs.Sexpable.S1 with type 'a t := 'a t","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module type VERSIONED = sig","counters":[]},{"line":"  type 'a ty","counters":[]},{"line":"","counters":[]},{"line":"  module Stable : sig","counters":[]},{"line":"    module V1 : sig","counters":[]},{"line":"      type 'a t = 'a ty","counters":[]},{"line":"","counters":[]},{"line":"      include Sigs.VERSIONED","counters":[]},{"line":"","counters":[]},{"line":"      include Sigs.Binable.S1 with type 'a t := 'a t","counters":[]},{"line":"","counters":[]},{"line":"      include S with type 'a t := 'a t","counters":[]},{"line":"    end","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  type 'a t = 'a Stable.V1.t","counters":[]},{"line":"","counters":[]},{"line":"  include S with type 'a t := 'a t","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Make = struct","counters":[]},{"line":"  module Yojson (N : Nat.Intf) :","counters":[]},{"line":"    Sigs.Jsonable.S1 with type 'a t := ('a, N.n) t = struct","counters":[]},{"line":"    let to_yojson f t = Vector.L.to_yojson f (to_list t)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":52,"col_end":52,"count":0}]},{"line":"","counters":[]},{"line":"    let of_yojson f s =","counters":[]},{"line":"      Core_kernel.Result.map (Vector.L.of_yojson f s)","counters":[{"col_start":6,"col_end":6,"count":0},{"col_start":47,"col_end":47,"count":0}]},{"line":"        ~f:(Base.Fn.flip of_list_and_length_exn N.n)","counters":[{"col_start":23,"col_end":23,"count":0}]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Sexpable (N : Nat.Intf) :","counters":[]},{"line":"    Core_kernel.Sexpable.S1 with type 'a t := ('a, N.n) t =","counters":[]},{"line":"    Core_kernel.Sexpable.Of_sexpable1","counters":[]},{"line":"      (Base.List)","counters":[]},{"line":"      (struct","counters":[]},{"line":"        type nonrec 'a t = ('a, N.n) t","counters":[]},{"line":"","counters":[]},{"line":"        let to_sexpable = to_list","counters":[]},{"line":"","counters":[]},{"line":"        let of_sexpable xs = of_list_and_length_exn xs N.n","counters":[{"col_start":29,"col_end":29,"count":0}]},{"line":"      end)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"type ('a, 'n) at_most = ('a, 'n) t","counters":[]},{"line":"","counters":[]},{"line":"module With_length (N : Nat.Intf) : S with type 'a t = ('a, N.n) at_most =","counters":[]},{"line":"struct","counters":[]},{"line":"  type 'a t = ('a, N.n) at_most","counters":[]},{"line":"","counters":[]},{"line":"  let compare c t1 t2 = Base.List.compare c (to_list t1) (to_list t2)","counters":[{"col_start":24,"col_end":24,"count":0},{"col_start":51,"col_end":51,"count":0},{"col_start":64,"col_end":64,"count":0}]},{"line":"","counters":[]},{"line":"  let hash_fold_t f s v = Base.List.hash_fold_t f s (to_list v)","counters":[{"col_start":26,"col_end":26,"count":0},{"col_start":59,"col_end":59,"count":0}]},{"line":"","counters":[]},{"line":"  let equal f t1 t2 = List.equal f (to_list t1) (to_list t2)","counters":[{"col_start":22,"col_end":22,"count":0},{"col_start":42,"col_end":42,"count":0},{"col_start":55,"col_end":55,"count":0}]},{"line":"","counters":[]},{"line":"  include Make.Sexpable (N)","counters":[]},{"line":"  include Make.Yojson (N)","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module At_most_2 = struct","counters":[]},{"line":"  [%%versioned_binable","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    [@@@no_toplevel_latest_type]","counters":[]},{"line":"","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type 'a t = ('a, Nat.N2.n) at_most","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"","counters":[]},{"line":"      include","counters":[]},{"line":"        Core_kernel.Binable.Of_binable1_without_uuid","counters":[]},{"line":"          (Core_kernel.List.Stable.V1)","counters":[]},{"line":"          (struct","counters":[]},{"line":"            type nonrec 'a t = 'a t","counters":[]},{"line":"","counters":[]},{"line":"            let to_binable = to_list","counters":[]},{"line":"","counters":[]},{"line":"            let of_binable xs = of_list_and_length_exn xs Nat.N2.n","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"          end)","counters":[]},{"line":"","counters":[]},{"line":"      include (","counters":[]},{"line":"        With_length","counters":[]},{"line":"          (Nat.N2) :","counters":[]},{"line":"            module type of With_length (Nat.N2) with type 'a t := 'a t )","counters":[]},{"line":"      end","counters":[]},{"line":"    end]","counters":[]},{"line":"","counters":[]},{"line":"  type 'a t = 'a Stable.Latest.t [@@deriving sexp, equal, compare, hash, yojson]","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":14,"col_end":14,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":79,"col_end":79,"count":0}]},{"line":"","counters":[]},{"line":"  type 'a ty = 'a t","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"module At_most_8 = struct","counters":[]},{"line":"  [%%versioned_binable","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    [@@@no_toplevel_latest_type]","counters":[]},{"line":"","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type 'a t = ('a, Nat.N8.n) at_most","counters":[{"col_start":6,"col_end":6,"count":0}]},{"line":"","counters":[]},{"line":"      include","counters":[]},{"line":"        Core_kernel.Binable.Of_binable1_without_uuid","counters":[]},{"line":"          (Core_kernel.List.Stable.V1)","counters":[]},{"line":"          (struct","counters":[]},{"line":"            type nonrec 'a t = 'a t","counters":[]},{"line":"","counters":[]},{"line":"            let to_binable = to_list","counters":[]},{"line":"","counters":[]},{"line":"            let of_binable xs = of_list_and_length_exn xs Nat.N8.n","counters":[{"col_start":32,"col_end":32,"count":0}]},{"line":"          end)","counters":[]},{"line":"","counters":[]},{"line":"      include (","counters":[]},{"line":"        With_length","counters":[]},{"line":"          (Nat.N8) :","counters":[]},{"line":"            module type of With_length (Nat.N8) with type 'a t := 'a t )","counters":[]},{"line":"      end","counters":[]},{"line":"    end]","counters":[]},{"line":"","counters":[]},{"line":"  type 'a t = 'a Stable.Latest.t [@@deriving sexp, equal, compare, hash, yojson]","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":14,"col_end":14,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":79,"col_end":79,"count":0}]},{"line":"","counters":[]},{"line":"  type 'a ty = 'a t","counters":[]},{"line":"  end","counters":[{"col_start":4,"col_end":4,"count":2}]}]}