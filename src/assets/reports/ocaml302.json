{"filename":"src/lib/rosetta_models/sub_account_identifier.ml","lines":[{"line":"(*","counters":[]},{"line":" * This file has been generated by the OCamlClientCodegen generator for openapi-generator.","counters":[]},{"line":" *","counters":[]},{"line":" * Generated by: https://openapi-generator.tech","counters":[]},{"line":" *","counters":[]},{"line":" * Schema Sub_account_identifier.t : An account may have state specific to a contract address (ERC-20 token) and/or a stake (delegated balance). The sub_account_identifier should specify which state (if applicable) an account instantiation refers to.","counters":[]},{"line":" *)","counters":[]},{"line":"","counters":[]},{"line":"type t =","counters":[{"col_start":0,"col_end":0,"count":0}]},{"line":"  { (* The SubAccount address may be a cryptographic value or some other identifier (ex: bonded) that uniquely specifies a SubAccount. *)","counters":[]},{"line":"    address : string","counters":[{"col_start":4,"col_end":4,"count":0},{"col_start":14,"col_end":14,"count":0},{"col_start":19,"col_end":19,"count":0}]},{"line":"  ; (* If the SubAccount address is not sufficient to uniquely specify a SubAccount, any other identifying information can be stored here. It is important to note that two SubAccounts with identical addresses but differing metadata will not be considered equal by clients. *)","counters":[{"col_start":2,"col_end":2,"count":0}]},{"line":"    metadata : Yojson.Safe.t option [@default None]","counters":[{"col_start":4,"col_end":4,"count":0},{"col_start":15,"col_end":15,"count":0},{"col_start":27,"col_end":27,"count":0},{"col_start":34,"col_end":34,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"  }","counters":[]},{"line":"[@@deriving yojson { strict = false }, show, eq]","counters":[{"col_start":47,"col_end":47,"count":0}]},{"line":"","counters":[]},{"line":"(** An account may have state specific to a contract address (ERC-20 token) and/or a stake (delegated balance). The sub_account_identifier should specify which state (if applicable) an account instantiation refers to. *)","counters":[]},{"line":"let create (address : string) : t = { address; metadata = None }","counters":[{"col_start":36,"col_end":36,"count":0}]}]}