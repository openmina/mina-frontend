{"filename":"src/lib/daemon_rpcs/daemon_rpcs.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"open Async","counters":[]},{"line":"open Mina_base","counters":[]},{"line":"module Types = Types","counters":[]},{"line":"module Client = Client","counters":[]},{"line":"","counters":[]},{"line":"module Get_transaction_status = struct","counters":[]},{"line":"  type query = Signed_command.Stable.Latest.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":76,"col_end":76,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Transaction_inclusion_status.State.Stable.Latest.t Or_error.t","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_transaction_status\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Send_user_commands = struct","counters":[]},{"line":"  type query = User_command_input.Stable.Latest.t list","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  type response =","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"    ( [ `Broadcasted | `Not_broadcasted ]","counters":[]},{"line":"    * Network_pool.Transaction_pool.Diff_versioned.Stable.Latest.t","counters":[]},{"line":"    * Network_pool.Transaction_pool.Diff_versioned.Rejected.Stable.Latest.t )","counters":[]},{"line":"    Or_error.t","counters":[]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Send_user_commands\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_ledger = struct","counters":[]},{"line":"  type query = State_hash.Stable.Latest.t option [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":79,"col_end":79,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Account.Stable.Latest.t list Or_error.t","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_ledger\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_snarked_ledger = struct","counters":[]},{"line":"  type query = State_hash.Stable.Latest.t option [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":79,"col_end":79,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Account.Stable.Latest.t list Or_error.t","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_snarked_ledger\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_staking_ledger = struct","counters":[]},{"line":"  type query = Current | Next [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":2},{"col_start":15,"col_end":15,"count":0},{"col_start":23,"col_end":23,"count":0},{"col_start":60,"col_end":60,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Account.Stable.Latest.t list Or_error.t","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_staking_ledger\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_balance = struct","counters":[]},{"line":"  type query = Account_id.Stable.Latest.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":72,"col_end":72,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Currency.Balance.Stable.Latest.t option Or_error.t","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_balance\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_trust_status = struct","counters":[]},{"line":"  type query = Unix.Inet_addr.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":62,"col_end":62,"count":4}]},{"line":"","counters":[]},{"line":"  type response =","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"    ( Network_peer.Peer.Stable.Latest.t","counters":[]},{"line":"    * Trust_system.Peer_status.Stable.Latest.t )","counters":[]},{"line":"    list","counters":[]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_trust_status\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_trust_status_all = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response =","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"    ( Network_peer.Peer.Stable.Latest.t","counters":[]},{"line":"    * Trust_system.Peer_status.Stable.Latest.t )","counters":[]},{"line":"    list","counters":[]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_trust_status_all\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Reset_trust_status = struct","counters":[]},{"line":"  type query = Unix.Inet_addr.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":62,"col_end":62,"count":4}]},{"line":"","counters":[]},{"line":"  type response =","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"    ( Network_peer.Peer.Stable.Latest.t","counters":[]},{"line":"    * Trust_system.Peer_status.Stable.Latest.t )","counters":[]},{"line":"    list","counters":[]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Reset_trust_status\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Chain_id_inputs = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response =","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"    State_hash.Stable.Latest.t * Genesis_constants.t * string list * int","counters":[]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Chain_id_inputs\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Verify_proof = struct","counters":[]},{"line":"  type query =","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1}]},{"line":"    Account_id.Stable.Latest.t","counters":[]},{"line":"    * User_command.Stable.Latest.t","counters":[]},{"line":"    * (Receipt.Chain_hash.Stable.Latest.t * User_command.Stable.Latest.t list)","counters":[]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  type response = unit Or_error.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":64,"col_end":64,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Verify_proof\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_inferred_nonce = struct","counters":[]},{"line":"  type query = Account_id.Stable.Latest.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":72,"col_end":72,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Account.Nonce.Stable.Latest.t option Or_error.t","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_inferred_nonce\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_nonce = struct","counters":[]},{"line":"  type query = Account_id.Stable.Latest.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":72,"col_end":72,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Account.Nonce.Stable.Latest.t option Or_error.t","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_nonce\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_status = struct","counters":[]},{"line":"  type query = [ `Performance | `None ] [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":70,"col_end":70,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Types.Status.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":63,"col_end":63,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_status\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Clear_hist_status = struct","counters":[]},{"line":"  type query = [ `Performance | `None ] [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":70,"col_end":70,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Types.Status.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":63,"col_end":63,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Clear_hist_status\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_public_keys_with_details = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = (string * int * int) list Or_error.t","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_public_keys_with_details\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_public_keys = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = string list Or_error.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":71,"col_end":71,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_public_keys\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Stop_daemon = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":53,"col_end":53,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Stop_daemon\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Snark_job_list = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = string Or_error.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":66,"col_end":66,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Snark_job_list\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Snark_pool_list = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = string [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":55,"col_end":55,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Snark_pool_list\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Start_tracing = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":53,"col_end":53,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Start_tracing\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Stop_tracing = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":53,"col_end":53,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Stop_tracing\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Visualization = struct","counters":[]},{"line":"  module Frontier = struct","counters":[]},{"line":"    type query = string [@@deriving bin_io_unversioned]","counters":[{"col_start":4,"col_end":4,"count":1},{"col_start":13,"col_end":13,"count":1},{"col_start":54,"col_end":54,"count":4}]},{"line":"","counters":[]},{"line":"    type response = [ `Active of unit | `Bootstrapping ]","counters":[{"col_start":4,"col_end":4,"count":1},{"col_start":16,"col_end":16,"count":1}]},{"line":"    [@@deriving bin_io_unversioned]","counters":[{"col_start":34,"col_end":34,"count":4}]},{"line":"","counters":[]},{"line":"    let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"      Rpc.Rpc.create ~name:\"Visualize_frontier\" ~version:0 ~bin_query","counters":[]},{"line":"        ~bin_response","counters":[]},{"line":"  end","counters":[]},{"line":"","counters":[]},{"line":"  module Registered_masks = struct","counters":[]},{"line":"    type query = string [@@deriving bin_io_unversioned]","counters":[{"col_start":4,"col_end":4,"count":1},{"col_start":13,"col_end":13,"count":1},{"col_start":54,"col_end":54,"count":4}]},{"line":"","counters":[]},{"line":"    type response = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":4,"col_end":4,"count":1},{"col_start":16,"col_end":16,"count":1},{"col_start":55,"col_end":55,"count":4}]},{"line":"","counters":[]},{"line":"    let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"      Rpc.Rpc.create ~name:\"Visualize_registered_masks\" ~version:0 ~bin_query","counters":[]},{"line":"        ~bin_response","counters":[]},{"line":"  end","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Add_trustlist = struct","counters":[]},{"line":"  type query = Unix.Cidr.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":57,"col_end":57,"count":4}]},{"line":"","counters":[]},{"line":"  type response = unit Or_error.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":64,"col_end":64,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Add_trustlist\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Remove_trustlist = struct","counters":[]},{"line":"  type query = Unix.Cidr.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":57,"col_end":57,"count":4}]},{"line":"","counters":[]},{"line":"  type response = unit Or_error.t [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":64,"col_end":64,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Remove_trustlist\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_trustlist = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = Unix.Cidr.t list [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":65,"col_end":65,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_trustlist\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_node_status = struct","counters":[]},{"line":"  type query = Mina_net2.Multiaddr.t list option [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":79,"col_end":79,"count":4}]},{"line":"","counters":[]},{"line":"  type response =","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1}]},{"line":"    Mina_networking.Rpcs.Get_node_status.Node_status.Stable.Latest.t Or_error.t","counters":[]},{"line":"    list","counters":[]},{"line":"  [@@deriving bin_io_unversioned]","counters":[{"col_start":32,"col_end":32,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_node_status\" ~version:0 ~bin_query ~bin_response","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"module Get_object_lifetime_statistics = struct","counters":[]},{"line":"  type query = unit [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":11,"col_end":11,"count":1},{"col_start":50,"col_end":50,"count":4}]},{"line":"","counters":[]},{"line":"  type response = string [@@deriving bin_io_unversioned]","counters":[{"col_start":2,"col_end":2,"count":1},{"col_start":14,"col_end":14,"count":1},{"col_start":55,"col_end":55,"count":4}]},{"line":"","counters":[]},{"line":"  let rpc : (query, response) Rpc.Rpc.t =","counters":[]},{"line":"    Rpc.Rpc.create ~name:\"Get_object_lifetime_statistics\" ~version:0 ~bin_query","counters":[]},{"line":"      ~bin_response","counters":[]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":2}]}]}