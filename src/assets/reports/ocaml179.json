{"filename":"src/lib/mina_base/ledger_intf.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"type account_state = [ `Added | `Existed ] [@@deriving equal]","counters":[{"col_start":0,"col_end":0,"count":0}]},{"line":"","counters":[]},{"line":"module type S = sig","counters":[]},{"line":"  type t","counters":[]},{"line":"","counters":[]},{"line":"  type location","counters":[]},{"line":"","counters":[]},{"line":"  val get : t -> location -> Account.t option","counters":[]},{"line":"","counters":[]},{"line":"  val location_of_account : t -> Account_id.t -> location option","counters":[]},{"line":"","counters":[]},{"line":"  val set : t -> location -> Account.t -> unit","counters":[]},{"line":"","counters":[]},{"line":"  val get_or_create :","counters":[]},{"line":"    t -> Account_id.t -> (account_state * Account.t * location) Or_error.t","counters":[]},{"line":"","counters":[]},{"line":"  val create_new_account : t -> Account_id.t -> Account.t -> unit Or_error.t","counters":[]},{"line":"","counters":[]},{"line":"  val remove_accounts_exn : t -> Account_id.t list -> unit","counters":[]},{"line":"","counters":[]},{"line":"  val merkle_root : t -> Ledger_hash.t","counters":[]},{"line":"","counters":[]},{"line":"  val with_ledger : depth:int -> f:(t -> 'a) -> 'a","counters":[]},{"line":"","counters":[]},{"line":"  val empty : depth:int -> unit -> t","counters":[]},{"line":"","counters":[]},{"line":"  val create_masked : t -> t","counters":[]},{"line":"","counters":[]},{"line":"  val apply_mask : t -> masked:t -> unit","counters":[]},{"line":"end","counters":[{"col_start":2,"col_end":2,"count":1}]}]}