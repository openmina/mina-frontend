{"filename":"src/lib/pickles_types/plonk_verification_key_evals.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"module H_list = Snarky_backendless.H_list","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  module V2 = struct","counters":[]},{"line":"    type 'comm t =","counters":[{"col_start":4,"col_end":4,"count":3},{"col_start":15,"col_end":15,"count":4}]},{"line":"      { sigma_comm : 'comm Plonk_types.Permuts_vec.Stable.V1.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":21,"col_end":21,"count":0},{"col_start":27,"col_end":27,"count":0},{"col_start":61,"col_end":61,"count":0}]},{"line":"      ; coefficients_comm : 'comm Plonk_types.Columns_vec.Stable.V1.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":28,"col_end":28,"count":0},{"col_start":34,"col_end":34,"count":0},{"col_start":68,"col_end":68,"count":0}]},{"line":"      ; generic_comm : 'comm","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":23,"col_end":23,"count":0},{"col_start":27,"col_end":27,"count":0}]},{"line":"      ; psm_comm : 'comm","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":15,"col_end":15,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":23,"col_end":23,"count":0}]},{"line":"      ; complete_add_comm : 'comm","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":24,"col_end":24,"count":0},{"col_start":28,"col_end":28,"count":0},{"col_start":32,"col_end":32,"count":0}]},{"line":"      ; mul_comm : 'comm","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":15,"col_end":15,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":23,"col_end":23,"count":0}]},{"line":"      ; emul_comm : 'comm","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":16,"col_end":16,"count":0},{"col_start":20,"col_end":20,"count":0},{"col_start":24,"col_end":24,"count":0}]},{"line":"      ; endomul_scalar_comm : 'comm","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":26,"col_end":26,"count":0},{"col_start":34,"col_end":34,"count":0}]},{"line":"      }","counters":[]},{"line":"    [@@deriving sexp, equal, compare, hash, yojson, hlist, fields]","counters":[{"col_start":65,"col_end":65,"count":7}]},{"line":"    (* TODO: Remove unused annotations *)","counters":[]},{"line":"  end","counters":[]},{"line":"end]","counters":[]},{"line":"","counters":[]},{"line":"(* TODO: Remove unused functions *)","counters":[]},{"line":"","counters":[]},{"line":"let map","counters":[]},{"line":"    { sigma_comm","counters":[]},{"line":"    ; coefficients_comm","counters":[]},{"line":"    ; generic_comm","counters":[]},{"line":"    ; psm_comm","counters":[]},{"line":"    ; complete_add_comm","counters":[]},{"line":"    ; mul_comm","counters":[]},{"line":"    ; emul_comm","counters":[]},{"line":"    ; endomul_scalar_comm","counters":[]},{"line":"    } ~f =","counters":[]},{"line":"  { sigma_comm = Vector.map ~f sigma_comm","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":26,"col_end":26,"count":0}]},{"line":"  ; coefficients_comm = Vector.map ~f coefficients_comm","counters":[{"col_start":33,"col_end":33,"count":0}]},{"line":"  ; generic_comm = f generic_comm","counters":[{"col_start":19,"col_end":19,"count":0}]},{"line":"  ; psm_comm = f psm_comm","counters":[{"col_start":15,"col_end":15,"count":0}]},{"line":"  ; complete_add_comm = f complete_add_comm","counters":[{"col_start":24,"col_end":24,"count":0}]},{"line":"  ; mul_comm = f mul_comm","counters":[{"col_start":15,"col_end":15,"count":0}]},{"line":"  ; emul_comm = f emul_comm","counters":[{"col_start":16,"col_end":16,"count":0}]},{"line":"  ; endomul_scalar_comm = f endomul_scalar_comm","counters":[{"col_start":26,"col_end":26,"count":0}]},{"line":"  }","counters":[]},{"line":"","counters":[]},{"line":"let map2 t1 t2 ~f =","counters":[]},{"line":"  { sigma_comm = Vector.map2 ~f t1.sigma_comm t2.sigma_comm","counters":[{"col_start":2,"col_end":2,"count":0},{"col_start":27,"col_end":27,"count":0}]},{"line":"  ; coefficients_comm = Vector.map2 ~f t1.coefficients_comm t2.coefficients_comm","counters":[{"col_start":34,"col_end":34,"count":0}]},{"line":"  ; generic_comm = f t1.generic_comm t2.generic_comm","counters":[{"col_start":19,"col_end":19,"count":0}]},{"line":"  ; psm_comm = f t1.psm_comm t2.psm_comm","counters":[{"col_start":15,"col_end":15,"count":0}]},{"line":"  ; complete_add_comm = f t1.complete_add_comm t2.complete_add_comm","counters":[{"col_start":24,"col_end":24,"count":0}]},{"line":"  ; mul_comm = f t1.mul_comm t2.mul_comm","counters":[{"col_start":15,"col_end":15,"count":0}]},{"line":"  ; emul_comm = f t1.emul_comm t2.emul_comm","counters":[{"col_start":16,"col_end":16,"count":0}]},{"line":"  ; endomul_scalar_comm = f t1.endomul_scalar_comm t2.endomul_scalar_comm","counters":[{"col_start":26,"col_end":26,"count":0}]},{"line":"  }","counters":[]},{"line":"","counters":[]},{"line":"let typ g =","counters":[]},{"line":"  Snarky_backendless.Typ.of_hlistable","counters":[{"col_start":2,"col_end":2,"count":1}]},{"line":"    [ Vector.typ g Plonk_types.Permuts.n","counters":[{"col_start":15,"col_end":15,"count":1}]},{"line":"    ; Vector.typ g Plonk_types.Columns.n","counters":[{"col_start":15,"col_end":15,"count":1}]},{"line":"    ; g","counters":[]},{"line":"    ; g","counters":[]},{"line":"    ; g","counters":[]},{"line":"    ; g","counters":[]},{"line":"    ; g","counters":[]},{"line":"    ; g","counters":[]},{"line":"    ]","counters":[]},{"line":"    ~var_to_hlist:to_hlist ~var_of_hlist:of_hlist ~value_to_hlist:to_hlist","counters":[]},{"line":"    ~value_of_hlist:of_hlist","counters":[{"col_start":27,"col_end":27,"count":2}]}]}