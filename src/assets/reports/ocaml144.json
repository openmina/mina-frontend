{"filename":"src/lib/transaction_witness/transaction_witness.ml","lines":[{"line":"open Core_kernel","counters":[]},{"line":"","counters":[]},{"line":"module Zkapp_command_segment_witness = struct","counters":[]},{"line":"  open Mina_base","counters":[]},{"line":"  open Mina_ledger","counters":[]},{"line":"  open Currency","counters":[]},{"line":"","counters":[]},{"line":"  (* TODO: Don't serialize all the hashes in here. *)","counters":[]},{"line":"  [%%versioned","counters":[]},{"line":"  module Stable = struct","counters":[]},{"line":"    module V1 = struct","counters":[]},{"line":"      type t =","counters":[{"col_start":6,"col_end":6,"count":2},{"col_start":11,"col_end":11,"count":2}]},{"line":"        { global_ledger : Sparse_ledger.Stable.V2.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":26,"col_end":26,"count":0},{"col_start":50,"col_end":50,"count":0}]},{"line":"        ; local_state_init :","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":25,"col_end":25,"count":0}]},{"line":"            ( ( Token_id.Stable.V2.t","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":14,"col_end":14,"count":0},{"col_start":16,"col_end":16,"count":0}]},{"line":"              , Zkapp_command.Call_forest.With_hashes.Stable.V1.t )","counters":[{"col_start":16,"col_end":16,"count":0}]},{"line":"              Stack_frame.Stable.V1.t","counters":[]},{"line":"            , ( ( ( Token_id.Stable.V2.t","counters":[{"col_start":14,"col_end":14,"count":0},{"col_start":16,"col_end":16,"count":0},{"col_start":18,"col_end":18,"count":0},{"col_start":20,"col_end":20,"count":0}]},{"line":"                  , Zkapp_command.Call_forest.With_hashes.Stable.V1.t )","counters":[{"col_start":20,"col_end":20,"count":0}]},{"line":"                  Stack_frame.Stable.V1.t","counters":[]},{"line":"                , Stack_frame.Digest.Stable.V1.t )","counters":[{"col_start":18,"col_end":18,"count":0}]},{"line":"                With_hash.Stable.V1.t","counters":[]},{"line":"              , Call_stack_digest.Stable.V1.t )","counters":[{"col_start":16,"col_end":16,"count":0}]},{"line":"              With_stack_hash.Stable.V1.t","counters":[]},{"line":"              list","counters":[{"col_start":17,"col_end":17,"count":0}]},{"line":"            , Token_id.Stable.V2.t","counters":[{"col_start":14,"col_end":14,"count":0}]},{"line":"            , (Amount.Stable.V1.t, Sgn.Stable.V1.t) Signed_poly.Stable.V1.t","counters":[{"col_start":14,"col_end":14,"count":0},{"col_start":15,"col_end":15,"count":0},{"col_start":35,"col_end":35,"count":0}]},{"line":"            , Sparse_ledger.Stable.V2.t","counters":[{"col_start":14,"col_end":14,"count":0}]},{"line":"            , bool","counters":[{"col_start":14,"col_end":14,"count":0}]},{"line":"            , Kimchi_backend.Pasta.Basic.Fp.Stable.V1.t","counters":[{"col_start":14,"col_end":14,"count":0}]},{"line":"            , Mina_numbers.Index.Stable.V1.t","counters":[{"col_start":14,"col_end":14,"count":0}]},{"line":"            , Transaction_status.Failure.Collection.Stable.V1.t )","counters":[{"col_start":14,"col_end":14,"count":0}]},{"line":"            Mina_transaction_logic.Zkapp_command_logic.Local_state.Stable.V1.t","counters":[{"col_start":77,"col_end":77,"count":0}]},{"line":"        ; start_zkapp_command :","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":28,"col_end":28,"count":0}]},{"line":"            ( Zkapp_command.Stable.V1.t","counters":[{"col_start":12,"col_end":12,"count":0},{"col_start":14,"col_end":14,"count":0}]},{"line":"            , Kimchi_backend.Pasta.Basic.Fp.Stable.V1.t )","counters":[{"col_start":14,"col_end":14,"count":0}]},{"line":"            Mina_transaction_logic.Zkapp_command_logic.Start_data.Stable.V1.t","counters":[]},{"line":"            list","counters":[{"col_start":15,"col_end":15,"count":0}]},{"line":"        ; state_body : Mina_state.Protocol_state.Body.Value.Stable.V2.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":23,"col_end":23,"count":0},{"col_start":70,"col_end":70,"count":0}]},{"line":"        ; init_stack : Mina_base.Pending_coinbase.Stack_versioned.Stable.V1.t","counters":[{"col_start":10,"col_end":10,"count":0},{"col_start":19,"col_end":19,"count":0},{"col_start":23,"col_end":23,"count":0},{"col_start":76,"col_end":76,"count":0}]},{"line":"        }","counters":[]},{"line":"      [@@deriving sexp, to_yojson]","counters":[{"col_start":33,"col_end":33,"count":5}]},{"line":"","counters":[]},{"line":"      let to_latest = Fn.id","counters":[]},{"line":"    end","counters":[]},{"line":"  end]","counters":[]},{"line":"end","counters":[]},{"line":"","counters":[]},{"line":"[%%versioned","counters":[]},{"line":"module Stable = struct","counters":[]},{"line":"  module V2 = struct","counters":[]},{"line":"    type t =","counters":[{"col_start":4,"col_end":4,"count":2},{"col_start":9,"col_end":9,"count":2}]},{"line":"      { transaction : Mina_transaction.Transaction.Stable.V2.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":18,"col_end":18,"count":0},{"col_start":22,"col_end":22,"count":0},{"col_start":61,"col_end":61,"count":0}]},{"line":"      ; ledger : Mina_ledger.Sparse_ledger.Stable.V2.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":13,"col_end":13,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":53,"col_end":53,"count":0}]},{"line":"      ; protocol_state_body : Mina_state.Protocol_state.Body.Value.Stable.V2.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":26,"col_end":26,"count":0},{"col_start":30,"col_end":30,"count":0},{"col_start":77,"col_end":77,"count":0}]},{"line":"      ; init_stack : Mina_base.Pending_coinbase.Stack_versioned.Stable.V1.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":21,"col_end":21,"count":0},{"col_start":74,"col_end":74,"count":0}]},{"line":"      ; status : Mina_base.Transaction_status.Stable.V2.t","counters":[{"col_start":8,"col_end":8,"count":0},{"col_start":13,"col_end":13,"count":0},{"col_start":17,"col_end":17,"count":0},{"col_start":56,"col_end":56,"count":0}]},{"line":"      }","counters":[]},{"line":"    [@@deriving sexp, to_yojson]","counters":[{"col_start":31,"col_end":31,"count":5}]},{"line":"","counters":[]},{"line":"    let to_latest = Fn.id","counters":[]},{"line":"  end","counters":[]},{"line":"end]","counters":[{"col_start":3,"col_end":3,"count":2}]}]}